{"version":3,"sources":["images/zoo.jpg","images/home_elephant.jpg","images/home_bird.jpg","images/home_monkey.jpg","images/home_penguin.jpg","images/home_tiger.jpg","Home.js","components/UserContext.js","components/Ticket.js","images/Elephant.jpg","images/Giraffe.jpg","images/Lion.jpg","images/Rhinoceros.jpg","images/Tiger.jpg","images/The_Safari.jpg","components/EnclosureList.js","components/CreateUser.js","components/UserLogin.js","components/CreateSpecies.js","components/EmployeeDashboard.js","components/EnclosureDetailed.js","components/Navbar.js","components/PurchaseHistory.js","components/GiftShop.js","components/GiftShopList.js","components/GiftShopDetailed.js","components/AdminEmployeeSection.js","components/AdminRevenueSection.js","components/AdminDashboard.js","components/UserDashboard.js","components/Messages.js","App.js","index.js"],"names":["Home","React","useState","open","setOpen","anchorRef","useRef","prevOpen","useEffect","current","focus","tileData","img","background","cols","featured","bird","elephant","monkey","penguin","tiger","theStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","position","width","height","fontColor","fontSize","paper","padding","spacing","textAlign","color","palette","text","secondary","useStyles","justify","gridList","icon","classes","Button","component","Link","to","style","borderRadius","fontWeight","variant","ref","onClick","className","GridList","cellHeight","GridListTile","ListSubheader","map","tile","src","alt","title","GridListTileBar","UserContext","createContext","UserProvider","children","name","sessionStorage","getItem","auth","role","userID","user","setUser","Provider","value","login","setItem","logout","Ticket","useContext","adultTicketCount","setAdultTicketCount","childTicketCount","setChildTicketCount","totalCost","setTotalCost","showTotalCost","setShowTotalCost","Moment","Date","format","selectedDate","setSelectedDate","emptyStates","history","useHistory","handleSubmit","values","console","log","axios","post","item_purchased","customer_id","quantity_purchased","total_purchase_cost","purchase_time","ticket_date","then","res","catch","err","alert","dbInfoForTickets","price","this","TicketCard","age","ticketCount","setTicketCount","Grid","item","xs","Card","CardContent","Typography","gutterBottom","ButtonGroup","size","aria-label","decrement","container","utils","DateFnsUtils","label","onChange","date","disablePast","push","listCategory","textTransform","paddingTop","divider","grid","cardStyles","flexDirection","media","EnclosureCard","description","source","id","url","useRouteMatch","CardActionArea","CardMedia","textDecoration","href","CardActions","EnclosureList","enclosures","setEnclosures","getAllEnclosures","get","data","alertError","setAlertError","addDialog","setAddDialog","selectedFile","setSelectedFile","closeAddDialog","setLocationName","location_name","location_type","handleCreateEnclosure","a","Promise","rej","fileReader","FileReader","readAsDataURL","onload","result","onerror","base64","FormData","append","response","error","categoryContainer","direction","enclosure","i","img_64","location_id","Dialog","onClose","DialogTitle","DialogContent","formTitle","Alert","severity","paddingBottom","TextField","e","target","type","hidden","event","files","DialogActions","disabled","top","left","transform","marginTop","signUp","float","CreateUser","props","formik","useFormik","initialValues","email","password","validate","errors","full_name","test","length","onSubmit","role_id","user_id","errors_response","new_errors","Array","isArray","forEach","param","msg","setErrors","handleSignup","handleChange","helperText","createEmployee","UserLogin","handleLogin","CreateSpecies","successMesage","setSuccessMessage","errMsg","setErrMsg","species_name","getSpecies","marginLeft","FormControl","InputLabel","htmlFor","Input","FormHelperText","Snackbar","autoHideDuration","border","borderColor","align","minWidth","margin","select","errMessage","EmployeeDashboard","enclosureNames","setEnclosureNames","species","setSpecies","animals","setAnimals","animalsCount","setAnimalsCount","healthyCount","setHealthyCount","sickCount","setSickCount","deceasedCount","setDeceasedCount","successMsg","setSuccessMsg","snackOpen","setSnackOpen","date_arrived","deceased_date","birth_date","location","animal_name","getAllSpecies","reportForm","date_from","date_to","health_status","total","sick","healthy","deceased","animal","calculateStats","classy","Select","labelId","index","MenuItem","s","species_id","shrink","defaultValue","toDateString","noValidate","autoComplete","marginBottom","marginRight","clsx","textField","handleReset","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","toString","split","animal_id","EnclosureDetailed","match","loading","setLoading","openDialog","setOpenDialog","currentAnimal","setCurretAnimal","deleteDialog","setDeleteDialog","setEnclosure","closeDeleteDialog","params","LinearProgress","handleModalOpen","openDeleteDialog","put","delete","Navbar","AppBar","Toolbar","IconButton","edge","purchases","setPurchases","purchase","product_name","transaction_id","GiftShop","GiftShopCard","image","GiftShopList","giftShops","setGiftShops","shop","location_image","GiftShopDetailed","quantities","from","_","openDialogedit","setOpenDialogedit","openDialogRemove","setOpenDialogRemove","currentProduct","setCurrentProduct","newProductError","setNewProductError","stock_amount","location_sold","giftShop","getProducts","CreateNewProduct","products","each","quantity_selected","amount_due","products2","filter","product","setProducts","setGiftShop","findIndex","elem","item_id","newProducts","handleSelectQuantity","q","handleModalOpenEdit","handleModalRemove","product_id","AdminEmployeeSection","employees","setEmployees","editDialog","setEditDialog","work_location","currentEmployee","setCurrentEmployee","locations","setLocations","getAllEmployees","job_title","worK_location","handleCreateEmployee","alignItems","employee","wage","openEditDialog","employee_id","newEmployee","new_location","AdminRevenueSection","purchaseHistory","setPurchaseHistory","totalSales","setTotalSales","from_date","to_date","amount_spent","purchase_history","shops","setShops","computeTotalSales","AdminDashboard","setValue","Tabs","Tab","UserDashboard","purchaseItems","setPurchaseItems","birth_day","shop_name","Number","isInteger","paddingRight","displayEmpty","Messages","messages","setMessages","parseInt","mes","message","message_id","new_messages","App","exact","path","PurchaseHistory","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db02c85c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zoo.c40cb5df.jpg\";","export default __webpack_public_path__ + \"static/media/home_elephant.5cbc5780.jpg\";","export default __webpack_public_path__ + \"static/media/home_bird.679bf162.jpg\";","export default __webpack_public_path__ + \"static/media/home_monkey.42150678.jpg\";","export default __webpack_public_path__ + \"static/media/home_penguin.1bf0d67a.jpg\";","export default __webpack_public_path__ + \"static/media/home_tiger.3e7c7b0f.jpg\";","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport background from \"./images/zoo.jpg\";\r\nimport elephant from \"./images/home_elephant.jpg\";\r\nimport bird from \"./images/home_bird.jpg\";\r\nimport monkey from \"./images/home_monkey.jpg\";\r\nimport penguin from \"./images/home_penguin.jpg\";\r\nimport tiger from \"./images/home_tiger.jpg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nfunction Home() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    function handleListKeyDown(event) {\r\n        if (event.key === \"Tab\") {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    // temporary home page\r\n    // need to figure out loggin in\r\n    const tileData = [\r\n        {\r\n            img: background,\r\n            // title: ,\r\n            cols: 2,\r\n\r\n            featured: true\r\n        },\r\n        {\r\n            img: bird,\r\n\r\n            cols: 2,\r\n            // featured: true\r\n        },\r\n        {\r\n            img: elephant,\r\n\r\n            cols: 2,\r\n\r\n            // featured: true\r\n        },\r\n        {\r\n            img: monkey,\r\n\r\n            cols: 2,\r\n\r\n            // featured: true\r\n        },\r\n        {\r\n            img: penguin,\r\n\r\n            cols: 2,\r\n\r\n            //  featured: true\r\n        },\r\n        {\r\n            img: tiger,\r\n\r\n            cols: 2,\r\n\r\n            // featured: true\r\n        },\r\n    ];\r\n    const theStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: 'transparent',\r\n            position: 'absolute',\r\n            width: '80%',\r\n            height: '400%',\r\n            fontColor: '#194d33',\r\n            fontSize: '27px',\r\n        },\r\n        paper: {\r\n            width: '350px',\r\n            padding: theme.spacing(2),\r\n            textAlign: 'left',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    }));\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n\r\n            display: 'flex',\r\n            justify: 'center',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        gridList: {\r\n            width: '80%',\r\n            height: '350%',\r\n        },\r\n        icon: {\r\n            color: 'rgba(255, 255, 255, 0.54)',\r\n        },\r\n    }));\r\n    const theclasses = theStyles();\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n\r\n                    {/* <Button component={Link} to=\"/ticket\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: '25%',\r\n                            borderRadius: 5,\r\n                            backgroundColor: \"white\",\r\n                            padding: \"7px 26px\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bold'\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"white\"\r\n                        ref={anchorRef}\r\n                        onClick={handleToggle}>\r\n                        Ticket\r\n          </Button> */}\r\n                    <Button component={Link} to=\"/enclosure\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: '25%',\r\n                            borderRadius: 5,\r\n                            backgroundColor: \"white\",\r\n                            padding: \"7px 26px\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bold'\r\n\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"white\"\r\n                        ref={anchorRef}\r\n                        onClick={handleToggle}>\r\n                        Enclosures\r\n          </Button>\r\n                    {/* <Button component={Link} to=\"/giftshops\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: '25%',\r\n                            borderRadius: 5,\r\n                            backgroundColor: \"white\",\r\n                            padding: \"7px 26px\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bold'\r\n\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"white\"\r\n                        ref={anchorRef}\r\n                        onClick={handleToggle}>\r\n                        GiftShop\r\n          </Button> */}\r\n\r\n                    <div className={classes.root}>\r\n\r\n                        <GridList cellHeight={350} className={classes.gridList}>\r\n                            <GridListTile key=\"Subheader\" cols={1} style={{ height: 'auto' }}>\r\n                                <ListSubheader component=\"div\"></ListSubheader>\r\n                            </GridListTile>\r\n                            {tileData.map((tile) => (\r\n                                <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n                                    <img src={tile.img} alt={tile.title} />\r\n                                    <GridListTileBar\r\n                                        style={{\r\n\r\n                                            backgroundColor: 'transparent'\r\n                                        }}\r\n                                        title={tile.title}\r\n                                    // subtitle={<span>by: {tile.author}</span>}\r\n                                    // actionIcon={\r\n                                    //<IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\r\n                                    //<InfoIcon />\r\n                                    //</IconButton>\r\n                                    //}\r\n                                    />\r\n                                </GridListTile>\r\n                            ))}\r\n                        </GridList>\r\n\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState({\r\n    name: sessionStorage.getItem(\"username\"),\r\n    auth: sessionStorage.getItem(\"auth\") === \"true\",\r\n    role: sessionStorage.getItem(\"role\"),\r\n    userID: sessionStorage.getItem(\"userID\"),\r\n  });\r\n\r\n  const login = (name, role, userID) => {\r\n    setUser(() => ({\r\n      name: name,\r\n      auth: true,\r\n      role: role,\r\n      userID: userID,\r\n    }));\r\n    sessionStorage.setItem(\"username\", name);\r\n    sessionStorage.setItem(\"auth\", true);\r\n    sessionStorage.setItem(\"role\", role);\r\n    sessionStorage.setItem(\"userID\", userID);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(() => ({\r\n      name: \"guest\",\r\n      auth: false,\r\n    }));\r\n    sessionStorage.setItem(\"username\", \"guest\");\r\n    sessionStorage.setItem(\"auth\", false);\r\n    sessionStorage.setItem(\"role\", null);\r\n    sessionStorage.setItem(\"userID\", null);\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\n// NEED TO RUN \"npm i @date-io/date-fns@1.3.13\" COMMANDS IF YOU GET\r\n// RangeError: Format string contains an unescaped latin alphabet character n\r\n\r\nfunction Ticket() {\r\n  const { user } = useContext(UserContext);\r\n\r\n  const [adultTicketCount, setAdultTicketCount] = useState(0);\r\n  const [childTicketCount, setChildTicketCount] = useState(0);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [showTotalCost, setShowTotalCost] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    Moment(new Date()).format(\"MM-DD-YYYY\")\r\n  );\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(Moment(date).format(\"MM-DD-YYYY\"));\r\n  };\r\n\r\n  // ticket number doesn't go below 0\r\n  function decrement(ticketCount, setTicketCount) {\r\n    if (ticketCount - 1 < 0) {\r\n      setTicketCount(0);\r\n    } else {\r\n      setTicketCount(ticketCount - 1);\r\n    }\r\n  }\r\n\r\n  function calculateTotalCost() {\r\n    setTotalCost(childTicketCount * 5 + adultTicketCount * 10);\r\n  }\r\n\r\n  // emptying all state values after confirming/cancelling purchase\r\n  function emptyStates() {\r\n    setAdultTicketCount(0);\r\n    setChildTicketCount(0);\r\n    setTotalCost(0);\r\n    setShowTotalCost(false);\r\n    setSelectedDate(Moment(new Date()).format(\"MM-DD-YYYY\"));\r\n  }\r\n\r\n  // redirect to login page when trying to purchase tickets while not signed in\r\n  const history = useHistory();\r\n\r\n  const goToLogInPage = () => {\r\n    let path = \"/login\";\r\n    history.push(path);\r\n  };\r\n\r\n  // sending ticket info to db\r\n  const handleSubmit = (values) => {\r\n    console.log(\"purchasing tickets...\");\r\n    axios\r\n      .post(`/purchasehistory`, {\r\n        item_purchased: values.item_purchased,\r\n        customer_id: values.customer_id,\r\n        quantity_purchased: values.quantity_purchased,\r\n        total_purchase_cost: values.total_purchase_cost,\r\n        purchase_time: values.purchase_time,\r\n        ticket_date: values.ticket_date,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"failed!\");\r\n      });\r\n  };\r\n\r\n  // constructor for ticket info thats going to be sent to db\r\n  function dbInfoForTickets(\r\n    item_purchased,\r\n    quantity_purchased,\r\n    price,\r\n    ticket_date\r\n  ) {\r\n    this.item_purchased = item_purchased;\r\n    this.customer_id = user.userID;\r\n    this.quantity_purchased = quantity_purchased;\r\n    this.total_purchase_cost = quantity_purchased * price;\r\n    this.purchase_time = new Date();\r\n    this.ticket_date = ticket_date;\r\n  }\r\n\r\n  // ticket card box\r\n  const TicketCard = ({ name, age, price, ticketCount, setTicketCount }) => {\r\n    return (\r\n      <Grid item xs={6}>\r\n        <Card className=\"ticketCard\" variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n              {age}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {price}\r\n            </Typography>\r\n            <Typography className=\"taxIncludedText\" color=\"textSecondary\">\r\n              tax included.\r\n            </Typography>\r\n            <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n              <Button onClick={() => decrement(ticketCount, setTicketCount)}>\r\n                -\r\n              </Button>\r\n              <Button color=\"primary\">{ticketCount}</Button>\r\n              <Button onClick={() => setTicketCount(ticketCount + 1)}>+</Button>\r\n            </ButtonGroup>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tickets</h1>\r\n\r\n      {/* ticket card boxes */}\r\n      <Grid container spacing={4}>\r\n        <TicketCard\r\n          name=\"Adult Ticket\"\r\n          age=\"Age 18+\"\r\n          price=\"$10\"\r\n          ticketCount={adultTicketCount}\r\n          setTicketCount={setAdultTicketCount}\r\n        />\r\n\r\n        <TicketCard\r\n          name=\"Child Ticket\"\r\n          age=\"Age 3-17\"\r\n          price=\"$5\"\r\n          ticketCount={childTicketCount}\r\n          setTicketCount={setChildTicketCount}\r\n        />\r\n      </Grid>\r\n\r\n      {/* ticket date */}\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          label=\"date\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          disablePast\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n\r\n      <br />\r\n\r\n      {/* purchase button */}\r\n      <Button\r\n        className=\"purchaseButton\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          calculateTotalCost();\r\n          setShowTotalCost(true);\r\n        }}>\r\n        Purchase\r\n      </Button>\r\n\r\n      {/* only display once the user clicks \"purchase\" button  \r\n        need to add \"please log in\" if not logged in */}\r\n      {showTotalCost && totalCost !== 0 && (\r\n        <div>\r\n          <h3>Your total cost is: ${totalCost}</h3>\r\n\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              if (user.auth) {\r\n                alert(\r\n                  adultTicketCount +\r\n                    \" adult ticket(s) \" +\r\n                    childTicketCount +\r\n                    \" child ticket(s) on \" +\r\n                    selectedDate +\r\n                    \" for $\" +\r\n                    totalCost\r\n                );\r\n                if (adultTicketCount > 0) {\r\n                  handleSubmit(\r\n                    new dbInfoForTickets(8, adultTicketCount, 10, selectedDate)\r\n                  );\r\n                  console.log(\r\n                    new dbInfoForTickets(8, adultTicketCount, 10, selectedDate)\r\n                  );\r\n                }\r\n                if (childTicketCount > 0) {\r\n                  handleSubmit(\r\n                    new dbInfoForTickets(7, childTicketCount, 5, selectedDate)\r\n                  );\r\n                  console.log(\r\n                    new dbInfoForTickets(7, childTicketCount, 5, selectedDate)\r\n                  );\r\n                }\r\n                emptyStates();\r\n              } else {\r\n                goToLogInPage();\r\n              }\r\n            }}>\r\n            Confirm\r\n          </Button>\r\n\r\n          <Button variant=\"outlined\" onClick={emptyStates}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ticket;\r\n","export default __webpack_public_path__ + \"static/media/Elephant.658a10fe.jpg\";","export default __webpack_public_path__ + \"static/media/Giraffe.7902b660.jpg\";","export default __webpack_public_path__ + \"static/media/Lion.0e205570.jpg\";","export default __webpack_public_path__ + \"static/media/Rhinoceros.7dcca251.jpg\";","export default __webpack_public_path__ + \"static/media/Tiger.3aeda941.jpg\";","export default __webpack_public_path__ + \"static/media/The_Safari.0b128bf7.jpg\";","import React, { useEffect, useState, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n//Import images\r\nimport Elephant from \"../images/Elephant.jpg\";\r\nimport Giraffe from \"../images/Giraffe.jpg\";\r\nimport Lion from \"../images/Lion.jpg\";\r\nimport Rhinoceros from \"../images/Rhinoceros.jpg\";\r\nimport Tiger from \"../images/Tiger.jpg\";\r\nimport The_Safari from \"../images/The_Safari.jpg\";\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  Input,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\nimport { base_url } from \"../config\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { images_path } from \"../config\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\nimport { useFormik } from \"formik\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst enclosure_data = [\r\n  {\r\n    enclosureName: \"Elepant\",\r\n    img: Elephant,\r\n    description: \"This enclosure consists of Afriran American Elephants\",\r\n  },\r\n  {\r\n    enclosureName: \"Rhinoceros\",\r\n    img: Rhinoceros,\r\n    description: \"Come witness on of the most magnificent mammals\",\r\n  },\r\n  {\r\n    enclosureName: \"Giraffe\",\r\n    img: Giraffe,\r\n    description: \"Come meet the tallest terrestrial animal\",\r\n  },\r\n  {\r\n    enclosureName: \"Tiger\",\r\n    img: Tiger,\r\n    description: \"The Largest and most fierce cat\",\r\n  },\r\n  {\r\n    enclosureName: \"Lion\",\r\n    img: Lion,\r\n    description: \"The King of the Junge is here!\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  listCategory: {\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  divider: {\r\n    height: \"5px\",\r\n    backgroundColor: \"green\",\r\n    width: \"100%\",\r\n  },\r\n  grid: {\r\n    padding: \"10px\",\r\n  },\r\n});\r\n\r\nconst cardStyles = makeStyles({\r\n  root: {\r\n    width: \"280px\",\r\n    // height: \"300px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst EnclosureCard = ({ name, description, source, id }) => {\r\n  let { url } = useRouteMatch();\r\n  const classes = cardStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <div>\r\n          <CardActionArea>\r\n            <CardMedia className={classes.media} component=\"img\" src={source} />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </div>\r\n        <div>\r\n          <Link style={{ textDecoration: \"none\" }} href={`${url}/${id}`}>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EnclosureList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [enclosures, setEnclosures] = useState([]);\r\n\r\n  const convert_base_64 = () => {\r\n    return new Promise((res, rej) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(selectedFile);\r\n      fileReader.onload = () => {\r\n        res(fileReader.result);\r\n      };\r\n\r\n      fileReader.onerror = (err) => {\r\n        rej(err);\r\n      };\r\n    });\r\n  };\r\n\r\n  const getAllEnclosures = () => {\r\n    axios\r\n      .get(`/locations/all_enclosures`)\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        // console.log(res);\r\n        // const with_image = res.data.map((e) => {\r\n        //   return {\r\n        //     ...e,\r\n        //     location_img: URL.createObjectURL(new Blob(e.image.data, {type: \"application/zip\"}),\r\n        //   };\r\n        // });\r\n        // console.log(res.data);\r\n        setEnclosures(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const { user } = useContext(UserContext);\r\n  const [alertError, setAlertError] = useState(null);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(false);\r\n  const openAddDialog = () => {\r\n    setAddDialog(true);\r\n  };\r\n\r\n  const closeAddDialog = () => {\r\n    setLocationName(\"\");\r\n    setSelectedFile(null);\r\n    setAlertError(\"\");\r\n    setAddDialog(false);\r\n  };\r\n\r\n  const [location_name, setLocationName] = useState(\"\");\r\n  const [location_type, setLocationType] = useState(\"Enclosure\");\r\n\r\n  const handleCreateEnclosure = async () => {\r\n    const base64 = await convert_base_64();\r\n    console.log(base64);\r\n    const data = new FormData();\r\n    data.append(\"location_name\", location_name);\r\n    data.append(\"location_type\", location_type);\r\n    data.append(\"location_image\", selectedFile);\r\n    data.append(\"img_64\", base64);\r\n    axios\r\n      .post(\"/locations\", data)\r\n      .then((res) => {\r\n        // console.log(res);\r\n        getAllEnclosures();\r\n        setAddDialog(false);\r\n      })\r\n      .catch((err) => {\r\n        //Creating new location failed.\r\n        setAlertError(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllEnclosures();\r\n    // console.log(enclosures);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.categoryContainer}>\r\n      {/* <Navbar></Navbar> */}\r\n\r\n      <Typography className={classes.listCategory}>Enclosures</Typography>\r\n\r\n      <Grid direction=\"row\" container spacing={2} className={classes.grid}>\r\n        {enclosures.map((enclosure, i) => {\r\n          return (\r\n            <Grid item key={i}>\r\n              <EnclosureCard\r\n                name={enclosure.location_name}\r\n                source={enclosure.img_64}\r\n                id={enclosure.location_id}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      {user.role == \"Admin\" ? (\r\n        <Grid item>\r\n          <Button variant=\"contained\" onClick={openAddDialog}>\r\n            Add Enclosure\r\n          </Button>\r\n        </Grid>\r\n      ) : null}\r\n\r\n      {/* Modal for adding new Enclosure */}\r\n      <div>\r\n        <Dialog open={addDialog} onClose={closeAddDialog}>\r\n          <DialogTitle>Add New Enclosure</DialogTitle>\r\n          <DialogContent>\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"column\"\r\n              className={classes.root}>\r\n              <Typography className={classes.formTitle}></Typography>\r\n              {alertError ? (\r\n                <Alert severity=\"error\" style={{ paddingBottom: \"10px\" }}>\r\n                  {alertError}\r\n                </Alert>\r\n              ) : null}\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  id=\"location_name\"\r\n                  onChange={(e) => {\r\n                    setLocationName(e.target.value);\r\n                  }}\r\n                  name=\"location_name\"\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button variant=\"contained\" component=\"label\">\r\n                  Upload File\r\n                  <input\r\n                    id=\"file\"\r\n                    name=\"location_image\"\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={(event) => {\r\n                      setSelectedFile(event.target.files[0]);\r\n                    }}\r\n                  />\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={handleCreateEnclosure}\r\n              disabled={location_name == \"\" || selectedFile == \"\"}\r\n              variant=\"contained\"\r\n              color=\"secondary\">\r\n              Save\r\n            </Button>\r\n            <Button\r\n              onClick={closeAddDialog}\r\n              variant=\"contained\"\r\n              color=\"secondary\">\r\n              CANCEL\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnclosureList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    width: \"50ch\",\r\n    position: \"fixed\",\r\n    top: \"25%\",\r\n    left: \"50%\",\r\n    textAlign: \"center\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formTitle: {\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  signUp: {\r\n    float: \"left\",\r\n  },\r\n}));\r\n\r\nfunction CreateUser(props) {\r\n  const classes = useStyles();\r\n\r\n  const { login } = useContext(UserContext);\r\n\r\n  const [alertError, setAlertError] = useState(null);\r\n  let history = useHistory();\r\n\r\n  const handleSignup = (values) => {\r\n    axios\r\n      .post(\"/signup\", {\r\n        full_name: values.full_name,\r\n        email: values.email,\r\n        password: values.password,\r\n        role_id: \"Customer\",\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        //role_id, full_name, user_id\r\n        login(res.data.full_name, res.data.role_id, res.data.user_id);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        console.log(\"Errors: \", err.response.data);\r\n        let errors_response = err.response.data.errors;\r\n        let new_errors = { email: \"\", password: \"\" };\r\n        if (Array.isArray(errors_response)) {\r\n          errors_response.forEach((error) => {\r\n            new_errors[error.param] = error.msg;\r\n          });\r\n          setErrors(new_errors);\r\n        } else {\r\n          setAlertError(err.response.data.error);\r\n        }\r\n      });\r\n  };\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.full_name) {\r\n      errors.password = \"Required\";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    } else if (values.email.length > 25) {\r\n      errors.email = \"Max 25 characters\";\r\n    }\r\n    if (values.password.length < 4) {\r\n      errors.password = \"Minimum 4 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleSignup(values);\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  return (\r\n    <Grid container spacing={1} direction=\"column\" className={classes.root}>\r\n      <Typography className={classes.formTitle}>Sign Up</Typography>\r\n      {alertError ? (\r\n        <Alert severity=\"error\" style={{ paddingBottom: \"10px\" }}>\r\n          {alertError}\r\n        </Alert>\r\n      ) : null}\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          id=\"full_name\"\r\n          onChange={formik.handleChange}\r\n          name=\"full_name\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          error={errors.full_name || formik.errors.full_name}\r\n          helperText={\r\n            errors.full_name !== \"\"\r\n              ? errors.full_name\r\n              : formik.errors.full_name !== \"\"\r\n              ? formik.errors.full_name\r\n              : \"\"\r\n          }\r\n        />\r\n      </Grid>\r\n      {props.createEmployee ? (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"Email\"\r\n            id=\"email\"\r\n            onChange={formik.handleChange}\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            error={errors.email || formik.errors.email}\r\n            helperText={\r\n              errors.email !== \"\"\r\n                ? errors.email\r\n                : formik.errors.email !== \"\"\r\n                ? formik.errors.email\r\n                : \"\"\r\n            }\r\n          />\r\n        </Grid>\r\n      ) : null}\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          id=\"email\"\r\n          onChange={formik.handleChange}\r\n          name=\"email\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          error={errors.email || formik.errors.email}\r\n          helperText={\r\n            errors.email !== \"\"\r\n              ? errors.email\r\n              : formik.errors.email !== \"\"\r\n              ? formik.errors.email\r\n              : \"\"\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          onChange={formik.handleChange}\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          error={errors.password || formik.errors.password}\r\n          helperText={\r\n            errors.password !== \"\"\r\n              ? errors.password\r\n              : formik.errors.password !== \"\"\r\n              ? formik.errors.password\r\n              : \"\"\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        onClick={formik.handleSubmit}\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\">\r\n        Sign Up\r\n      </Button>\r\n    </Grid>\r\n  );\r\n  // Only customers should be able to create their own accounts\r\n  // We have to make employee accounts beforehand, they should end with \"@zoo-staff\" to signify they're an employee so we know which table to check in db with our queries\r\n}\r\n\r\nexport default CreateUser;\r\n","import React, { useState, useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\n// import { AlternateEmail, DriveEtaTwoTone } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    width: \"50ch\",\r\n    position: \"fixed\",\r\n    top: \"25%\",\r\n    left: \"50%\",\r\n    textAlign: \"center\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formTitle: {\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  signUp: {\r\n    float: \"left\",\r\n  },\r\n}));\r\n\r\nconst UserLogin = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { login } = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const [alertError, setAlertError] = useState(null);\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    } else if (values.email.length > 25) {\r\n      errors.email = \"Max 25 characters\";\r\n    }\r\n    if (values.password.length < 4) {\r\n      errors.password = \"Minimum 4 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleLogin = (values) => {\r\n    axios\r\n      .post(\"/login\", {\r\n        email: values.email,\r\n        password: values.password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        login(res.data.full_name, res.data.role_id, res.data.user_id);\r\n        console.log(\"Login successful\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        setAlertError(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleLogin(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} direction=\"column\" className={classes.root}>\r\n        <Typography className={classes.formTitle}>Log In</Typography>\r\n        {alertError ? (\r\n          <Alert severity=\"error\" style={{ paddingBottom: \"10px\" }}>\r\n            {alertError}\r\n          </Alert>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"Username\"\r\n            id=\"email\"\r\n            onChange={formik.handleChange}\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            error={formik.errors.email}\r\n            helperText={formik.errors.email !== \"\" ? formik.errors.email : \"\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={formik.handleChange}\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            error={formik.errors.password}\r\n            helperText={\r\n              formik.errors.password !== \"\" ? formik.errors.password : \"\"\r\n            }\r\n          />\r\n        </Grid>\r\n        <Button\r\n          onClick={formik.handleSubmit}\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\">\r\n          Log In\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormLabel,\r\n  InputLabel,\r\n  Input,\r\n  FormHelperText,\r\n  Button,\r\n  FormControl,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nconst CreateSpecies = (props) => {\r\n  const [successMesage, setSuccessMessage] = useState(\"\");\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const validate = (values) => {\r\n    console.log(values);\r\n    let errors = {};\r\n    if (values.name == \"\") {\r\n      errors.name = \"Required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      axios\r\n        .post(\"/species/create\", {\r\n          species_name: values.name,\r\n        })\r\n        .then((res) => {\r\n          props.getSpecies();\r\n          console.log(res);\r\n          setSuccessMessage(\"Successfully Added New Species\");\r\n          setOpen(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setErrMsg(err.response.data.error);\r\n          setOpen(true);\r\n        });\r\n    },\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Grid container style={{ marginLeft: \"10px\" }}>\r\n      <Grid item>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"name\">Species Name</InputLabel>\r\n          <Input\r\n            id=\"name\"\r\n            onChange={formik.handleChange}\r\n            name=\"name\"\r\n            error={formik.errors.name}\r\n          />\r\n          <FormHelperText style={{ color: \"red\" }}>\r\n            {formik.errors.name}\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button variant=\"outlined\" onClick={formik.handleSubmit} type=\"submit\">\r\n          Add Species\r\n        </Button>\r\n      </Grid>\r\n\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        onClose={() => {\r\n          setSuccessMessage(\"\");\r\n          setErrMsg(\"\");\r\n          setOpen(false);\r\n        }}>\r\n        <div>\r\n          {successMesage !== \"\" ? (\r\n            <Alert severity=\"success\">{successMesage}</Alert>\r\n          ) : (\r\n            <Alert severity=\"error\">{errMsg}</Alert>\r\n          )}\r\n        </div>\r\n      </Snackbar>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CreateSpecies;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  // TextField,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Grid,\r\n  FormHelperText,\r\n  TableRow,\r\n  TableCell,\r\n  Table,\r\n  Paper,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  CardContent,\r\n  Card,\r\n  Snackbar,\r\n  // Modal,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\n// import { base_url } from \"../config\";\r\nimport { useFormik } from \"formik\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport CreateSpecies from \"./CreateSpecies\";\r\nconst theStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"900px\",\r\n    variant: \"contained\",\r\n    position: \"right\",\r\n    border: \"3px solid #4A90E2\",\r\n    borderColor: \"gray\",\r\n    color: \"black\",\r\n    align: \"right\",\r\n    minWidth: 50,\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(4),\r\n      width: \"10ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst EmployeeDashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  //Get all the enclosure names:\r\n  const [enclosureNames, setEnclosureNames] = useState([]);\r\n  const [species, setSpecies] = useState([]);\r\n  const [animals, setAnimals] = useState([]);\r\n\r\n  const [animalsCount, setAnimalsCount] = useState(0);\r\n  const [healthyCount, setHealthyCount] = useState(0);\r\n  const [sickCount, setSickCount] = useState(0);\r\n  const [deceasedCount, setDeceasedCount] = useState(0);\r\n\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n  const [failMsg, setFailMsg] = useState(\"\");\r\n  const [snackOpen, setSnackOpen] = useState(false);\r\n\r\n  //Create new species\r\n  let species_error = \"\";\r\n\r\n  const [animal, setAnimal] = useState({\r\n    date_arrived: null,\r\n    deceased_date: null,\r\n    birth_date: null,\r\n    location: \"\",\r\n    animal_name: \"\",\r\n  });\r\n\r\n  const getEnclosureNames = () => {\r\n    axios\r\n      .get(`/locations/all_enclosures`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setEnclosureNames(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getAllSpecies = () => {\r\n    axios\r\n      .get(`/species`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSpecies(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEnclosureNames();\r\n    getAllSpecies();\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.animal_name) {\r\n      errors.animal_name = \"Required\";\r\n    }\r\n    if (!values.location) {\r\n      errors.location = \"Required\";\r\n    }\r\n    if (!values.date_arrived) {\r\n      errors.date_arrived = \"Required\";\r\n    }\r\n    if (!values.birth_date) {\r\n      errors.birth_date = \"Required\";\r\n    }\r\n    if (!values.species) {\r\n      errors.species = \"Required\";\r\n    }\r\n    if (\r\n      values.birth_date &&\r\n      values.date_arrived &&\r\n      values.birth_date > values.date_arrived\r\n    ) {\r\n      errors.date_arrived = \"Date Arrived Cannot be before Date of Birth\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    axios\r\n      .post(`/animals`, {\r\n        date_arrived: values.date_arrived,\r\n        deceased_date: values.deceased_date,\r\n        birth_date: values.birth_date,\r\n        location: values.location,\r\n        animal_name: values.animal_name,\r\n        species: values.species,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setSuccessMsg(\"Added New Animal\");\r\n        setSnackOpen(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      date_arrived: \"\",\r\n      deceased_date: null,\r\n      birth_date: \"\",\r\n      location: \"\",\r\n      animal_name: \"\",\r\n      species: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleSubmit(values);\r\n    },\r\n  });\r\n\r\n  const reportForm = useFormik({\r\n    initialValues: {\r\n      date_from: \"\",\r\n      date_to: \"\",\r\n      species: \"\",\r\n      health_status: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      // console.log(values);\r\n      axios\r\n        .post(\"/reports/employee_report\", values)\r\n        .then((res) => {\r\n          setAnimals(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  const calculateStats = () => {\r\n    let total = 0;\r\n    let sick = 0;\r\n    let healthy = 0;\r\n    let deceased = 0;\r\n    animals.forEach((animal) => {\r\n      if (animal.health_status == \"Healthy\") {\r\n        healthy += 1;\r\n      }\r\n      if (animal.health_status == \"Sick\") {\r\n        sick += 1;\r\n      }\r\n      if (animal.health_status == \"Deceased\") {\r\n        deceased += 1;\r\n      }\r\n      total += 1;\r\n    });\r\n    setAnimalsCount(total);\r\n    setSickCount(sick);\r\n    setHealthyCount(healthy);\r\n    setDeceasedCount(deceased);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Calculate stats\r\n    calculateStats();\r\n  }, [animals]);\r\n  const classy = theStyles();\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\">\r\n        <Grid container spacing={2} style={{ padding: \"10px\" }}>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n              <Input\r\n                id=\"name\"\r\n                onChange={formik.handleChange}\r\n                name=\"animal_name\"\r\n                error={formik.errors.animal_name}\r\n              />\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.animal_name}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"enclosureName\">Enclosure Name</InputLabel>\r\n              <Select\r\n                labelId=\"enclosureName\"\r\n                onChange={formik.handleChange}\r\n                name=\"location\"\r\n                error={formik.errors.location}\r\n                className={classes.select}>\r\n                {enclosureNames.map((e, index) => (\r\n                  <MenuItem key={index} value={e.location_id}>\r\n                    {e.location_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.location}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"species\">Species</InputLabel>\r\n              <Select\r\n                labelId=\"species\"\r\n                onChange={formik.handleChange}\r\n                name=\"species\"\r\n                error={formik.errors.species}\r\n                className={classes.select}>\r\n                {species.map((s, index) => (\r\n                  <MenuItem key={index} value={s.species_id}>\r\n                    {s.species_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.species}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"dob\" shrink>\r\n                Date of Birth\r\n              </InputLabel>\r\n              <Input\r\n                labelId=\"dob\"\r\n                type=\"date\"\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.birth_date}\r\n                name=\"birth_date\"\r\n              />\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.birth_date}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"dob\" shrink>\r\n                Arrival Date\r\n              </InputLabel>\r\n              <Input\r\n                labelId=\"dob\"\r\n                type=\"date\"\r\n                defaultValue={new Date().toDateString()}\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.date_arrived}\r\n                name=\"date_arrived\"\r\n              />\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.date_arrived}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={formik.handleSubmit}\r\n              type=\"submit\">\r\n              Add Animal\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <div>\r\n          <Snackbar\r\n            open={snackOpen}\r\n            autoHideDuration={2000}\r\n            onClose={() => {\r\n              setSnackOpen(false);\r\n            }}>\r\n            <div>\r\n              {successMsg !== \"\" ? (\r\n                <Alert severity=\"success\">{successMsg}</Alert>\r\n              ) : null}\r\n            </div>\r\n          </Snackbar>\r\n        </div>\r\n      </form>\r\n\r\n      <CreateSpecies getSpecies={getAllSpecies}></CreateSpecies>\r\n      <form>\r\n        <div\r\n          className={classy.root}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          style={{ margin: \"10px\" }}>\r\n          <div>\r\n            <Typography\r\n              style={{\r\n                align: \"middle\",\r\n                fontSize: \"16px\",\r\n              }}>\r\n              Report Request\r\n            </Typography>\r\n            <Typography\r\n              align=\"left\"\r\n              style={{\r\n                fontSize: \"22px\",\r\n                fontWeight: \"bold\",\r\n              }}></Typography>\r\n          </div>\r\n          <div>\r\n            <FormControl\r\n              style={{\r\n                marginBottom: \"20px\",\r\n                width: \"40%\",\r\n                marginRight: \"10px\",\r\n              }}\r\n              className={clsx(classy.margin, classy.textField)}>\r\n              <InputLabel htmlFor=\"species\">Species</InputLabel>\r\n              <Select\r\n                labelId=\"species\"\r\n                onChange={reportForm.handleChange}\r\n                name=\"species\"\r\n                value={reportForm.values.species}\r\n                className={classes.select}>\r\n                {species.map((s, index) => (\r\n                  <MenuItem key={index} value={s.species_id}>\r\n                    {s.species_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              style={{ marginBottom: \"20px\", width: \"40%\" }}\r\n              className={clsx(classy.margin, classy.textField)}>\r\n              <InputLabel htmlFor=\"health_status\">Health Status</InputLabel>\r\n              <Select\r\n                labelId=\"health_status\"\r\n                onChange={reportForm.handleChange}\r\n                value={reportForm.values.health_status}\r\n                name=\"health_status\"\r\n                className={classes.select}>\r\n                <MenuItem value=\"Healthy\">Healthy</MenuItem>\r\n                <MenuItem value=\"Sick\">Sick</MenuItem>\r\n                <MenuItem value=\"Deceased\">Deceased</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <FormControl style={{ marginBottom: \"20px\", marginRight: \"40px\" }}>\r\n            <InputLabel id=\"date_from\" shrink>\r\n              Date Arrived From:\r\n            </InputLabel>\r\n            <Input\r\n              labelId=\"activity-from\"\r\n              name=\"date_from\"\r\n              type=\"date\"\r\n              value={reportForm.values.date_from}\r\n              onChange={reportForm.handleChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel id=\"date_to\" shrink>\r\n              Date Arrived To:\r\n            </InputLabel>\r\n            <Input\r\n              labelId=\"activity-to\"\r\n              name=\"date_to\"\r\n              type=\"date\"\r\n              value={reportForm.values.date_to}\r\n              onChange={reportForm.handleChange}\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={reportForm.handleSubmit}\r\n            style={{ marginRight: \"10px\" }}>\r\n            Get Report\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={reportForm.handleReset}>\r\n            Clear\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Table to display the animals */}\r\n      <>\r\n        {animals.length > 0 ? (\r\n          <Grid container>\r\n            <Grid id=\"left\" item xs={6}>\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ width: 800, paddingTop: \"10px\", marginLeft: \"10px\" }}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Name </TableCell>\r\n                      <TableCell align=\"center\">Species</TableCell>\r\n                      <TableCell align=\"center\">Date of Birth</TableCell>\r\n                      <TableCell align=\"center\">Date Arrived</TableCell>\r\n                      <TableCell align=\"center\">Health Status</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {animals.map((animal) => (\r\n                      <TableRow key={animal.animal_id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {animal.animal_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.species_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.birth_date.toString().split(\"T\")[0]}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.date_arrived.toString().split(\"T\")[0]}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.health_status}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n            <Grid id=\"right\" item container xs={6}>\r\n              <Grid item>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      Animals Summary\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{`Total Animals: ${animalsCount}`}</Typography>\r\n                    <Typography color=\"textSecondary\">{`Healthy: ${healthyCount}`}</Typography>\r\n                    <Typography color=\"textSecondary\">{`Sick: ${sickCount}`}</Typography>\r\n                    <Typography color=\"textSecondary\">{`Deceased: ${deceasedCount}`}</Typography>\r\n                    <Typography variant=\"body2\" component=\"p\"></Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ) : null}\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeDashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    ListItemIcon,\r\n    Typography,\r\n    Grid,\r\n    Chip,\r\n    ListItemText,\r\n    LinearProgress,\r\n    Paper,\r\n    Modal,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Select,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    select: {\r\n        minWidth: 150,\r\n    },\r\n    errMessage: {\r\n        color: \"red\",\r\n    },\r\n});\r\nconst EnclosureDetailed = ({ match }) => {\r\n    // console.log(match);\r\n\r\n    const { user } = useContext(UserContext);\r\n\r\n    let history = useHistory();\r\n    console.log(history);\r\n    const classes = useStyles();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    //Modal\r\n    const [currentAnimal, setCurretAnimal] = useState({\r\n        animal_name: \"\",\r\n    });\r\n    const [open, setOpen] = useState(false);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n\r\n    const handleModalOpen = (animal) => {\r\n        console.log(\"Animal\", animal);\r\n        setCurretAnimal(animal);\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleHealthStatusChange = (e) => {\r\n        setCurretAnimal({\r\n            ...currentAnimal,\r\n            health_status: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSave = () => {\r\n        axios\r\n            .put(\"/animals/change_health\", currentAnimal)\r\n            .then((res) => {\r\n                setOpenDialog(false);\r\n                console.log(res);\r\n            })\r\n            .catch((err) => {\r\n                setOpenDialog(true);\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    //Get animals in the Enclosure.\r\n\r\n    const [animals, setAnimals] = useState([]);\r\n\r\n    const [enclosure, setEnclosure] = useState({});\r\n\r\n    const getEnclosure = () => {\r\n        axios\r\n            .get(`/locations/by_id`, {\r\n                params: { location: match.params.id },\r\n            })\r\n            .then((res) => {\r\n                console.log(\"Enclosure: \", res);\r\n                setEnclosure(res.data[0]);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const handleDeleteAnimal = () => {\r\n        axios\r\n            .delete(`/animals/delete/${currentAnimal.animal_id}`)\r\n            .then((res) => {\r\n                console.log(res);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const openDeleteDialog = (animal) => {\r\n        setCurretAnimal(animal);\r\n        setDeleteDialog(true);\r\n        console.log(animal);\r\n    };\r\n\r\n    const closeDeleteDialog = () => {\r\n        setDeleteDialog(false);\r\n    };\r\n    const getAnimals = () => {\r\n        axios\r\n            .get(`/animals/list_by_enclosure/`, {\r\n                params: { location: match.params.id },\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n                setAnimals(res.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEnclosure();\r\n        getAnimals();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            {loading ? (\r\n                <LinearProgress color=\"primary\" />\r\n            ) : (\r\n                    <>\r\n                        {animals.length > 0 ? (\r\n                            <>\r\n                                <Typography>{`Animals in ${enclosure.location_name} Enclosure`}</Typography>\r\n                                <TableContainer\r\n                                    component={Paper}\r\n                                    style={{ width: 800, paddingTop: \"10px\" }}>\r\n                                    <Table aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Name </TableCell>\r\n                                                <TableCell align=\"right\">Species</TableCell>\r\n                                                <TableCell align=\"right\">Date of Birth</TableCell>\r\n                                                <TableCell align=\"right\">Date Arrived</TableCell>\r\n\r\n                                                {user.role == \"Employee\" ? (\r\n                                                    <TableCell align=\"right\">Health Status</TableCell>\r\n                                                ) : null}\r\n                                                {user.role == \"Employee\" ? (\r\n                                                    <TableCell align=\"right\">Actions</TableCell>\r\n                                                ) : null}\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {animals.map((animal) => (\r\n                                                <TableRow key={animal.animal_id}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {animal.animal_name}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {animal.species_name}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">{animal.birth_date.toString().split(\"T\")[0]}</TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {animal.date_arrived.toString().split(\"T\")[0]}\r\n\r\n                                                    </TableCell>\r\n                                                    {user.role == \"Employee\" ? (\r\n                                                        <TableCell align=\"right\">\r\n                                                            {animal.health_status}\r\n                                                        </TableCell>) : null}\r\n                                                    {user.role == \"Employee\" ? (\r\n                                                        <TableCell align=\"right\">\r\n                                                            <Button\r\n                                                                variant=\"outlined\"\r\n                                                                onClick={() => {\r\n                                                                    handleModalOpen(animal);\r\n                                                                }}>\r\n                                                                Edit\r\n                            </Button>\r\n                                                            <Button\r\n                                                                variant=\"outlined\"\r\n                                                                onClick={() => {\r\n                                                                    openDeleteDialog(animal);\r\n                                                                }}>\r\n                                                                Delete\r\n                                </Button>\r\n                                                        </TableCell>\r\n                                                    ) : null}\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n\r\n                                {/* Modal for changing health status */}\r\n                                <div>\r\n                                    <Dialog open={openDialog}>\r\n                                        <DialogTitle>\r\n                                            Change the Health of {currentAnimal.animal_name}\r\n                                        </DialogTitle>\r\n                                        <DialogContent>\r\n                                            <Select\r\n                                                id=\"health_status\"\r\n                                                value={currentAnimal.health_status}\r\n                                                onChange={handleHealthStatusChange}>\r\n                                                <MenuItem value={\"Healthy\"}>Healthy</MenuItem>\r\n                                                <MenuItem value={\"Sick\"}>Sick</MenuItem>\r\n                                                <MenuItem value={\"Deceased\"}>Deceased</MenuItem>\r\n                                            </Select>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                            <Button\r\n                                                onClick={handleSave}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\">\r\n                                                Save\r\n                    </Button>\r\n                                            <Button\r\n                                                onClick={handleCancel}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\">\r\n                                                CANCEL\r\n                    </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Dialog open={deleteDialog} onClose={closeDeleteDialog}>\r\n                                        {/* <DialogTitle>Delete Employee</DialogTitle> */}\r\n                                        <DialogContent>\r\n                                            <Grid\r\n                                                container\r\n                                                spacing={1}\r\n                                                direction=\"column\"\r\n                                                className={classes.root}>\r\n                                                <Typography className={classes.formTitle}>\r\n                                                    {`Are you sure you want to remove ${currentAnimal.animal_name}`}\r\n                                                </Typography>\r\n                                                <Grid item xs={12}></Grid>\r\n                                                <Grid item xs={12}></Grid>\r\n                                            </Grid>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                            <Button\r\n                                                onClick={handleDeleteAnimal}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\">\r\n                                                YES\r\n                    </Button>\r\n                                            <Button\r\n                                                onClick={closeDeleteDialog}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\">\r\n                                                NO\r\n                    </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                                <Typography style={{ padding: \"10px\" }}>No Animals</Typography>\r\n                            )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnclosureDetailed;\r\n","import React, { useContext } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n// styling should change a little bit\r\nfunction Navbar() {\r\n  const { user, logout } = useContext(UserContext);\r\n\r\n  let { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const goBackToHomePage = () => {\r\n    let path = \"/\";\r\n    history.push(path);\r\n  };\r\n\r\n  const goToLogInPage = () => {\r\n    let path = \"/login\";\r\n    history.push(path);\r\n  };\r\n\r\n  const goToSignUpPage = () => {\r\n    let path = \"/create\";\r\n    history.push(path);\r\n  };\r\n\r\n  // needs to go to account page/purchase history when it's created.\r\n  const goToAccountPage = () => {\r\n    let path = \"/history\";\r\n    history.push(path);\r\n  };\r\n\r\n  const goToTicketPage = (role) => {\r\n    if (role) {\r\n      let path = \"/ticket\";\r\n      history.push(path);\r\n    }\r\n  };\r\n\r\n  const goToGiftShop = (role) => {\r\n    if (role) {\r\n      let path = \"/giftshops\";\r\n      history.push(path);\r\n    }\r\n  };\r\n\r\n  const goToDashboard = (role) => {\r\n    if (role == \"Admin\") {\r\n      history.push(\"/admin_dashboard\");\r\n    } else if (role == \"Employee\") {\r\n      history.push(\"/employee_dashboard\");\r\n    } else {\r\n      history.push(\"/user_dashboard\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\" style={{ padding: 0 }}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={goBackToHomePage}>\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Better Houston Zoo</Typography>\r\n          {!user.auth && (\r\n            <div>\r\n              <Button onClick={goToLogInPage}>Log in</Button>\r\n              <Button onClick={goToSignUpPage}>Sign up</Button>\r\n            </div>\r\n          )}\r\n\r\n          {user.auth && (\r\n            <div>\r\n              <Button>Welcome, {user.name}</Button>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n                onClick={goToAccountPage}>\r\n                <AccountCircleIcon />\r\n              </IconButton>\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  history.push(\"/\");\r\n                  logout();\r\n                }}>\r\n                Sign out\r\n              </Button>\r\n              {user.auth ? (\r\n                <>\r\n                  {user.role === \"Admin\" ? (\r\n                    <Link href={`/admin_dashboard`}>\r\n                      <Button>Dash Board</Button>\r\n                    </Link>\r\n                  ) : null}\r\n                  {user.role === \"Employee\" ? (\r\n                    <>\r\n                      <Link href={`/employee_dashboard`}>\r\n                        <Button>Dash Board</Button>\r\n                      </Link>\r\n                      <Link href={`/messages`}>\r\n                        <Button>Messages</Button>\r\n                      </Link>\r\n                    </>\r\n                  ) : null}\r\n                  {user.role === \"Customer\" ? (\r\n                    <Link href={`/user_dashboard`}>\r\n                      <Button>Dash Board</Button>\r\n                    </Link>\r\n                  ) : null}\r\n                </>\r\n              ) : null}\r\n\r\n              {user.auth ? (\r\n                <>\r\n                  {user.role === \"Customer\" ? (\r\n                    <Link href={`/history`}>\r\n                      <Button>Purchase History</Button>\r\n                    </Link>\r\n                  ) : null}\r\n                  \r\n                    <Link href={`/giftshops`}>\r\n                      <Button>Gift Shop</Button>\r\n                    </Link>\r\n                  \r\n                  {user.role === \"Customer\" ? (\r\n                    <Link href={`/ticket`}>\r\n                      <Button>Buy Tickets</Button>\r\n                    </Link>\r\n                  ) : null}\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    ListItemIcon,\r\n    Typography,\r\n    Grid,\r\n    Chip,\r\n    ListItemText,\r\n    LinearProgress,\r\n    Paper,\r\n    Modal,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Select,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst EnclosureDetailed = ({ match }) => {\r\n    const { user } = useContext(UserContext);\r\n    let id = user.userID;\r\n\r\n    let history = useHistory();\r\n\r\n    //Get purchase history.\r\n    const [purchases, setPurchases] = useState([]);\r\n\r\n    const getPurchases = () => {\r\n        axios\r\n            .get(`/purchaseHistory/history`, {\r\n                params: { userID: id },\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n                setPurchases(res.data);\r\n                // setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPurchases();\r\n    }, []);\r\n\r\n    console.log(purchases); \r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n             \r\n                    <>\r\n                        {purchases.length > 0 ? (\r\n                            <>\r\n                                <Typography>{`Purchase History`}</Typography>\r\n                                <TableContainer\r\n                                    component={Paper}\r\n                                    style={{ width: 800, paddingTop: \"10px\" }}>\r\n                                    <Table aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Name </TableCell>\r\n                                                <TableCell align=\"right\">Purchase Date</TableCell>\r\n                                                \r\n                                                <TableCell align=\"right\">Quantity</TableCell>\r\n                                                <TableCell align = \"right\">Total Cost</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {purchases.map((purchase) => (\r\n                                                <TableRow key={purchase.transaction_id}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {purchase.product_name}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                    {purchase.purchase_time.toString().split(\"T\")[0]}\r\n                                                    </TableCell>\r\n                                                    \r\n                                                    <TableCell align=\"right\">{purchase.quantity_purchased}</TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {\"$\" + purchase.total_purchase_cost}\r\n\r\n                                                    </TableCell>\r\n                                                    \r\n\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </>\r\n                        ) : (\r\n                                <Typography style={{ padding: \"10px\" }}>No Purchases</Typography>\r\n                            )}\r\n                    </>\r\n                \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnclosureDetailed;\r\n","import React, { useState, useContext } from \"react\"; \r\nimport { UserContext } from \"./UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction GiftShop(){\r\n    const { user } = useContext(UserContext); \r\n\r\n    return <>\r\n        <div className = 'primary'>\r\n            <div className = 'primary-container'>\r\n                <h4 className = 'title'> Zoovenirs </h4>\r\n            </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"container\">\r\n            <div className=\"multiline\"></div>\r\n                <div> Some Item </div>\r\n                    <button> Purchase </button>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default GiftShop","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport axios from \"axios\";\r\nimport { base_url } from \"../config\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { images_path } from \"../config\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  listCategory: {\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  divider: {\r\n    height: \"5px\",\r\n    backgroundColor: \"green\",\r\n    width: \"100%\",\r\n  },\r\n  grid: {\r\n    padding: \"10px\",\r\n  },\r\n});\r\n\r\nconst cardStyles = makeStyles({\r\n  root: {\r\n    width: \"280px\",\r\n    // height: \"300px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst GiftShopCard = ({ name, description, image, id }) => {\r\n  let { url } = useRouteMatch();\r\n  const classes = cardStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <div>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={image}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </div>\r\n        <div>\r\n          <Link style={{ textDecoration: \"none\" }} href={`${url}/${id}`}>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GiftShopList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [giftShops, setGiftShops] = useState([]);\r\n\r\n  const getAllGiftShops = () => {\r\n    axios\r\n      .get(`/locations/all_gift_shops`)\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        // console.log(res);\r\n        // const with_image = res.data.map((e) => {\r\n        //   return {\r\n        //     ...e,\r\n        //     location_img: URL.createObjectURL(new Blob(e.image.data, {type: \"application/zip\"}),\r\n        //   };\r\n        // });\r\n        console.log(res.data);\r\n        setGiftShops(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllGiftShops();\r\n    // console.log(enclosures);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.categoryContainer}>\r\n      {/* <Navbar></Navbar> */}\r\n      <Typography className={classes.listCategory}>Gift Shops</Typography>\r\n      <Grid direction=\"row\" container spacing={2} className={classes.grid}>\r\n        {giftShops.map((shop, i) => {\r\n          return (\r\n            <Grid item key={i}>\r\n              <GiftShopCard\r\n                name={shop.location_name}\r\n                image={`/uploads/${shop.location_image}`}\r\n                id={shop.location_id}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GiftShopList;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  Input,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\nimport { CloudQueueRounded, LensOutlined } from \"@material-ui/icons\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst GiftShopDetailed = ({ match }) => {\r\n  // console.log(match);\r\n\r\n  let quantities = Array.from({ length: 10 }, (_, index) => {\r\n    return {\r\n      value: index + 1,\r\n    };\r\n  });\r\n\r\n  console.log(quantities);\r\n  const classes = useStyles();\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const [openDialogedit, setOpenDialogedit] = useState(false);\r\n\r\n  const [openDialogRemove, setOpenDialogRemove] = useState(false);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n\r\n  //Modal\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [newProductError, setNewProductError] = useState(\"\");\r\n\r\n  const [alertError, setAlertError] = useState(null);\r\n\r\n  const handleModalOpen = (product) => {\r\n    // console.log(\"Animal\", animal);\r\n    setCurrentProduct(product);\r\n    setOpenDialog(true);\r\n  };\r\n  const handleModalOpenEdit = (product) => {\r\n    // console.log(\"Animal\", animal);\r\n    setCurrentProduct(product);\r\n    setOpenDialogedit(true);\r\n  };\r\n\r\n  const handleModalRemove = (product) => {\r\n    setCurrentProduct(product);\r\n    setOpenDialogRemove(true);\r\n  };\r\n\r\n  const handleModalCloseRemove = () => {\r\n    setNewProductError(\"\");\r\n    setOpenDialogRemove(false);\r\n  };\r\n\r\n  const handleModalCloseEdit = () => {\r\n    setOpenDialogedit(false);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setOpenDialogedit(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const closeAddDialog = () => {\r\n    setNewProductError(\"\");\r\n    setAddDialog(false);\r\n  };\r\n\r\n  const handleHealthStatusChange = (e) => {\r\n    setCurrentProduct({\r\n      ...currentProduct,\r\n      stock_amount: e.target.value,\r\n    });\r\n  };\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.stock_amount) {\r\n      errors.stock_amount = \"Required\";\r\n    }\r\n    if (!values.price) {\r\n      errors.price = \"Required\";\r\n    }\r\n    if (!values.product_name) {\r\n      errors.product_name = \"Required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const CreateNewProduct = (values) => {\r\n    axios\r\n      .post(\"/merchandise/additem\", {\r\n        stock_amount: values.stock_amount,\r\n        price: values.price,\r\n        product_name: values.product_name,\r\n        location_sold: giftShop.location_id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        getProducts();\r\n        setAddDialog(false);\r\n      })\r\n      .catch((err) => {\r\n        //Creating new product failed\r\n        console.log(err.response);\r\n        setNewProductError(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      stock_amount: \"\",\r\n      price: \"\",\r\n      product_name: \"\",\r\n      location_sold: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      CreateNewProduct(values);\r\n    },\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddDialog(true);\r\n  };\r\n\r\n  const getProducts = () => {\r\n    axios\r\n      .get(`/merchandise/all_products/`, {\r\n        params: { location: match.params.id },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        let products = res.data.map((each) => {\r\n          return {\r\n            ...each,\r\n            quantity_selected: 0,\r\n            amount_due: 0,\r\n          };\r\n        });\r\n        if (user.role == \"Customer\") {\r\n          let products2 = products.filter(\r\n            (product) => product.stock_amount > 10\r\n          );\r\n          setProducts(products2);\r\n        } else {\r\n          setProducts(products);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleRemove = (product_name) => {\r\n    axios\r\n      .post(\"/merchandise/removeItem\", { product: product_name })\r\n      .then((res) => {\r\n        getProducts();\r\n        setOpenDialogRemove(false);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setOpenDialogRemove(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    axios\r\n      .put(\"/merchandise/change_stock\", currentProduct)\r\n      .then((res) => {\r\n        getProducts();\r\n        setOpenDialogedit(false);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setOpenDialogedit(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Get animals in the Enclosure.\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const [giftShop, setGiftShop] = useState({});\r\n\r\n  const getGiftShop = () => {\r\n    axios\r\n      .get(`/locations/by_id`, {\r\n        params: { location: match.params.id },\r\n      })\r\n      .then((res) => {\r\n        setGiftShop(res.data[0]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSelectQuantity = (e, product) => {\r\n    const index = products.findIndex((elem) => elem.item_id == product.item_id);\r\n    let newProducts = [...products];\r\n    newProducts[index] = {\r\n      ...newProducts[index],\r\n      quantity_selected: e.target.value,\r\n      amount_due: e.target.value * product.price,\r\n    };\r\n    setProducts(newProducts);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    axios\r\n      .post(\"/merchandise/buy\", {\r\n        user_id: user.userID,\r\n        ...currentProduct,\r\n      })\r\n      .then((res) => {\r\n        getProducts();\r\n        setOpenDialog(false);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setOpenDialog(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGiftShop();\r\n    getProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      {loading ? (\r\n        <LinearProgress color=\"primary\" />\r\n      ) : (\r\n        <>\r\n          {products.length > 0 ? (\r\n            <>\r\n              <Typography>{`Products in ${giftShop.location_name} Enclosure`}</Typography>\r\n\r\n              {user.role == \"Admin\" || user.role == \"Employee\" ? (\r\n                <Grid item>\r\n                  <Button variant=\"contained\" onClick={openAddDialog}>\r\n                    Add Item\r\n                  </Button>\r\n                </Grid>\r\n              ) : null}\r\n\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ width: 800, paddingTop: \"10px\" }}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Product Name </TableCell>\r\n                      <TableCell align=\"center\">Product Stock</TableCell>\r\n                      <TableCell align=\"center\">Product Price</TableCell>\r\n                      {user.role == \"Customer\" ? (\r\n                        <TableCell align=\"center\">Select Quantity</TableCell>\r\n                      ) : null}\r\n\r\n                      {user.role == \"Customer\" ||\r\n                      user.role == \"Admin\" ||\r\n                      user.role == \"Employee\" ? (\r\n                        <TableCell align=\"center\">Actions</TableCell>\r\n                      ) : null}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {products.map((product) => (\r\n                      <TableRow key={product.product_id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {product.product_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {product.stock_amount}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {\"$\" + product.price}\r\n                        </TableCell>\r\n\r\n                        {user.role == \"Customer\" ? (\r\n                          <TableCell align=\"right\">\r\n                            <Select\r\n                              name=\"quantity_selected\"\r\n                              style={{ width: \"75px\" }}\r\n                              value={product.quantity_selected}\r\n                              onChange={(e) => {\r\n                                handleSelectQuantity(e, product);\r\n                              }}>\r\n                              {quantities.map((q) => {\r\n                                return (\r\n                                  <MenuItem key={q.value} value={q.value}>\r\n                                    {q.value}\r\n                                  </MenuItem>\r\n                                );\r\n                              })}\r\n                            </Select>\r\n                          </TableCell>\r\n                        ) : null}\r\n\r\n                        {user.role == \"Customer\" ? (\r\n                          <TableCell align=\"right\">\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              disabled={product.quantity_selected == 0}\r\n                              onClick={() => {\r\n                                handleModalOpen(product);\r\n                              }}>\r\n                              Buy\r\n                            </Button>\r\n                          </TableCell>\r\n                        ) : null}\r\n                        {user.role == \"Admin\" || user.role == \"Employee\" ? (\r\n                          <TableCell align=\"right\">\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              onClick={() => {\r\n                                handleModalOpenEdit(product);\r\n                              }}>\r\n                              Edit Stock\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              onClick={() => {\r\n                                handleModalRemove(product);\r\n                              }}>\r\n                              REMOVE\r\n                            </Button>\r\n                          </TableCell>\r\n                        ) : null}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n              {/* Modal for buying merchandise */}\r\n              <div>\r\n                <Dialog open={openDialog}>\r\n                  <DialogTitle>Transaction Details</DialogTitle>\r\n                  <DialogContent>\r\n                    <Typography>{`The Total Cost of ${currentProduct.product_name} is $${currentProduct.amount_due}`}</Typography>\r\n                    <Typography>Are you sure you want to buy?</Typography>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleConfirm}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CONFIRM\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleCancel}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              {/* Modal for adding new item to gift shop */}\r\n              <div>\r\n                <Dialog open={addDialog} onClose={closeAddDialog}>\r\n                  <DialogTitle>Add New Item</DialogTitle>\r\n                  {newProductError != \"\" ? (\r\n                    <Alert severity=\"error\">{newProductError}</Alert>\r\n                  ) : null}\r\n                  <DialogContent>\r\n                    <Grid\r\n                      container\r\n                      spacing={1}\r\n                      direction=\"column\"\r\n                      className={classes.root}>\r\n                      <Typography className={classes.formTitle}>\r\n                        Add New Item\r\n                      </Typography>\r\n                      {alertError ? (\r\n                        <Alert\r\n                          severity=\"error\"\r\n                          style={{ paddingBottom: \"10px\" }}>\r\n                          {alertError}\r\n                        </Alert>\r\n                      ) : null}\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          label=\"Stock Amount\"\r\n                          id=\"stock_amount\"\r\n                          onChange={formik.handleChange}\r\n                          name=\"stock_amount\"\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"100%\" }}\r\n                          error={formik.errors.stock_amount}\r\n                          helperText={\r\n                            formik.errors.stock_amount !== \"\"\r\n                              ? formik.errors.stock_amount\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          label=\"Price\"\r\n                          id=\"price\"\r\n                          onChange={formik.handleChange}\r\n                          name=\"price\"\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"100%\" }}\r\n                          error={formik.errors.price}\r\n                          helperText={\r\n                            formik.errors.price !== \"\"\r\n                              ? formik.errors.price\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          label=\"Product Name\"\r\n                          id=\"product_name\"\r\n                          name=\"product_name\"\r\n                          onChange={formik.handleChange}\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"100%\" }}\r\n                          error={formik.errors.product_name}\r\n                          helperText={\r\n                            formik.errors.product_name !== \"\"\r\n                              ? formik.errors.product_name\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={formik.handleSubmit}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={closeAddDialog}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              {/* Modal for removing item */}\r\n              <div>\r\n                <Dialog open={openDialogRemove}>\r\n                  <DialogTitle>\r\n                    Remove {currentProduct.product_name}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Typography className={classes.formTitle}>\r\n                      Are you sure?\r\n                    </Typography>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={() => {\r\n                        handleRemove(currentProduct.product_name);\r\n                      }}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleModalCloseRemove}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              {/* Modal for changing stock amount */}\r\n              <div>\r\n                <Dialog open={openDialogedit}>\r\n                  <DialogTitle>\r\n                    Change the Stock of {currentProduct.product_name}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <InputLabel htmlFor=\"amount_spent\">\r\n                      Increase by how much\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"stock_amount\"\r\n                      value={currentProduct.stock_amount}\r\n                      onChange={handleHealthStatusChange}></Input>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleSave}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleCancelEdit}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Typography style={{ padding: \"10px\" }}>No Products</Typography>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GiftShopDetailed;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  FormHelperText,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\nimport { SubdirectoryArrowLeftSharp } from \"@material-ui/icons\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst AdminEmployeeSection = () => {\r\n  const classes = useStyles();\r\n\r\n  let history = useHistory();\r\n  const { login } = useContext(UserContext);\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const [alertError, setAlertError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [currentEmployee, setCurrentEmployee] = useState({\r\n    full_name: \"\",\r\n    work_location: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  const getAllEmployees = () => {\r\n    axios\r\n      .get(`/employees/all`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setEmployees(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getLocations = () => {\r\n    axios\r\n      .get(`/locations`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLocations(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n    getLocations();\r\n  }, []);\r\n\r\n  //Edit Dialog functions.\r\n  const openEditDialog = (employee) => {\r\n    setCurrentEmployee(employee);\r\n    setEditDialog(true);\r\n  };\r\n\r\n  const handleWorkLocationChange = (e) => {\r\n    let newEmployee = {\r\n      ...currentEmployee,\r\n      work_location: e.target.value,\r\n    };\r\n    setCurrentEmployee(newEmployee);\r\n  };\r\n\r\n  const handleEditConfirm = () => {\r\n    axios\r\n      .put(\"/employees/change_work_location\", {\r\n        new_location: currentEmployee.work_location,\r\n        employee_id: currentEmployee.employee_id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        getAllEmployees();\r\n        setEditDialog(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditDialog(false);\r\n  };\r\n\r\n  const closeEditDialog = () => {\r\n    setEditDialog(false);\r\n  };\r\n\r\n  //Adding new Employee functions.\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    } else if (values.email.length > 25) {\r\n      errors.email = \"Max 25 characters\";\r\n    }\r\n    if (values.password.length < 4) {\r\n      errors.password = \"Minimum 4 characters\";\r\n    }\r\n    if (values.full_name == \"\") {\r\n      errors.full_name = \"Required\";\r\n    }\r\n    if (values.worK_location == \"\") {\r\n      errors.work_location = \"Required\";\r\n    }\r\n    if (values.job_title == \"\") {\r\n      errors.job_title = \"Required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleCreateEmployee = (values) => {\r\n    axios\r\n      .post(\"/signup\", {\r\n        full_name: values.full_name,\r\n        email: values.email,\r\n        password: values.password,\r\n        role_id: \"Employee\",\r\n        work_location: values.work_location,\r\n        job_title: values.job_title,\r\n      })\r\n      .then((res) => {\r\n        setAddDialog(false);\r\n        getAllEmployees();\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        console.log(\"Errors: \", err.response.data);\r\n        let errors_response = err.response.data.errors;\r\n        let new_errors = { email: \"\", password: \"\" };\r\n        if (Array.isArray(errors_response)) {\r\n          errors_response.forEach((error) => {\r\n            new_errors[error.param] = error.msg;\r\n          });\r\n          setErrors(new_errors);\r\n        } else {\r\n          setAlertError(err.response.data.error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      full_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      job_title: \"\",\r\n      work_location: 0,\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleCreateEmployee(values);\r\n    },\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddDialog(true);\r\n  };\r\n\r\n  const closeAddDialog = () => {\r\n    setAlertError(\"\");\r\n    setAddDialog(false);\r\n  };\r\n\r\n  const openDeleteDialog = (employee) => {\r\n    setCurrentEmployee(employee);\r\n    setDeleteDialog(true);\r\n    console.log(employee);\r\n  };\r\n\r\n  const closeDeleteDialog = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n  const handleDeleteEmployee = () => {\r\n    axios\r\n      .delete(`/employees/delete/${currentEmployee.employee_id}`)\r\n      .then((res) => {\r\n        getAllEmployees();\r\n        setDeleteDialog(false);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // console.log(currentEmployee);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      {loading ? (\r\n        <LinearProgress color=\"primary\" />\r\n      ) : (\r\n        <>\r\n          <Button variant=\"contained\" onClick={openAddDialog}>\r\n            Add Employee\r\n          </Button>\r\n          {employees.length > 0 && locations.length > 0 ? (\r\n            <>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"flex-start\"\r\n                spacing={2}>\r\n                <Grid item></Grid>\r\n                <Grid item>\r\n                  <TableContainer\r\n                    component={Paper}\r\n                    style={{ width: 800, paddingTop: \"10px\" }}>\r\n                    <Table aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Name </TableCell>\r\n                          <TableCell align=\"right\">Job Title</TableCell>\r\n                          <TableCell align=\"right\">Wage</TableCell>\r\n                          <TableCell align=\"right\">Work Location</TableCell>\r\n                          {user.role == \"Admin\" ? (\r\n                            <TableCell align=\"right\">Actions</TableCell>\r\n                          ) : null}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {employees.map((employee) => (\r\n                          <TableRow key={employee.employee_id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {employee.full_name}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {employee.job_title}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{employee.wage}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {employee.location_name}\r\n                            </TableCell>\r\n                            {user.role == \"Admin\" ? (\r\n                              <TableCell align=\"right\">\r\n                                <Button\r\n                                  style={{ marginRight: \"10px\" }}\r\n                                  variant=\"contained\"\r\n                                  onClick={() => {\r\n                                    openEditDialog(employee);\r\n                                  }}>\r\n                                  Edit\r\n                                </Button>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  onClick={() => {\r\n                                    openDeleteDialog(employee);\r\n                                  }}>\r\n                                  Delete\r\n                                </Button>\r\n                              </TableCell>\r\n                            ) : null}\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {/* Modal for changing work Location */}\r\n              <div>\r\n                <Dialog open={editDialog} onClose={closeEditDialog}>\r\n                  <DialogTitle>\r\n                    Change the Work location of {currentEmployee.full_name}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Select\r\n                      style={{ width: \"100%\" }}\r\n                      id=\"health_status\"\r\n                      value={currentEmployee.health_status}\r\n                      onChange={handleWorkLocationChange}>\r\n                      {locations.map((location) => {\r\n                        return (\r\n                          <MenuItem\r\n                            value={location.location_id}\r\n                            key={location.location_id}>\r\n                            {location.location_name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleEditConfirm}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleEditCancel}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              {/* Modal for adding new employee */}\r\n\r\n              {/* Modal for deleting employee */}\r\n              <div>\r\n                <Dialog open={deleteDialog} onClose={closeDeleteDialog}>\r\n                  {/* <DialogTitle>Delete Employee</DialogTitle> */}\r\n                  <DialogContent>\r\n                    <Grid\r\n                      container\r\n                      spacing={1}\r\n                      direction=\"column\"\r\n                      className={classes.root}>\r\n                      <Typography className={classes.formTitle}>\r\n                        {`Are you sure you want to remove ${currentEmployee.full_name}`}\r\n                      </Typography>\r\n                      <Grid item xs={12}></Grid>\r\n                      <Grid item xs={12}></Grid>\r\n                    </Grid>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleDeleteEmployee}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      YES\r\n                    </Button>\r\n                    <Button\r\n                      onClick={closeDeleteDialog}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      NO\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          ) : null}\r\n\r\n          <div>\r\n            <Dialog open={addDialog} onClose={closeAddDialog}>\r\n              <DialogTitle>Add New Employee</DialogTitle>\r\n              <DialogContent>\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  direction=\"column\"\r\n                  className={classes.root}>\r\n                  <Typography className={classes.formTitle}>\r\n                    Add New Employee\r\n                  </Typography>\r\n                  {alertError ? (\r\n                    <Alert severity=\"error\" style={{ paddingBottom: \"10px\" }}>\r\n                      {alertError}\r\n                    </Alert>\r\n                  ) : null}\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Full Name\"\r\n                      id=\"full_name\"\r\n                      onChange={formik.handleChange}\r\n                      name=\"full_name\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={formik.errors.full_name}\r\n                      helperText={\r\n                        formik.errors.full_name !== \"\"\r\n                          ? formik.errors.full_name\r\n                          : \"\"\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Email\"\r\n                      id=\"email\"\r\n                      onChange={formik.handleChange}\r\n                      name=\"email\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={formik.errors.email}\r\n                      helperText={\r\n                        formik.errors.email !== \"\" ? formik.errors.email : \"\"\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Password\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      onChange={formik.handleChange}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={formik.errors.password}\r\n                      helperText={\r\n                        formik.errors.password !== \"\"\r\n                          ? formik.errors.password\r\n                          : \"\"\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Job Title\"\r\n                      id=\"job-title\"\r\n                      name=\"job_title\"\r\n                      onChange={formik.handleChange}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={formik.errors.job_title}\r\n                      helperText={\r\n                        formik.errors.job_title !== \"\"\r\n                          ? formik.errors.job_title\r\n                          : \"\"\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <InputLabel>Work Location</InputLabel>\r\n                    <Select\r\n                      id=\"work_location\"\r\n                      style={{ width: \"100%\" }}\r\n                      name=\"work_location\"\r\n                      onChange={formik.handleChange}>\r\n                      {locations.map((location) => (\r\n                        <MenuItem\r\n                          value={location.location_id}\r\n                          key={location.location_id}>\r\n                          {location.location_name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    {formik.errors.work_location !== \"\" ? (\r\n                      <FormHelperText>\r\n                        {formik.errors.work_location}\r\n                      </FormHelperText>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={formik.handleSubmit}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\">\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  onClick={closeAddDialog}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\">\r\n                  CANCEL\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminEmployeeSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  OutlinedInput,\r\n  Grid,\r\n  Paper,\r\n  FormHelperText,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@material-ui/core\";\r\n\r\nimport clsx from \"clsx\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst theStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"900px\",\r\n    variant: \"contained\",\r\n    position: \"right\",\r\n    border: \"3px solid #4A90E2\",\r\n    borderColor: \"gray\",\r\n    color: \"black\",\r\n    align: \"right\",\r\n    minWidth: 50,\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(4),\r\n      width: \"10ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst AdminRevenueSection = () => {\r\n  const [purchaseHistory, setPurchaseHistory] = useState([]);\r\n  const [total, setTotal] = useState();\r\n\r\n  const [totalSales, setTotalSales] = useState();\r\n\r\n  const computeTotalSales = () => {\r\n    let total = 0;\r\n    purchaseHistory.forEach((product) => {\r\n      total = total + product.total_purchase_cost;\r\n    });\r\n    setTotalSales(total);\r\n  };\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (\r\n      values.from_date &&\r\n      values.to_date &&\r\n      values.from_date >= values.to_date\r\n    ) {\r\n      errors.from_date = \"From Date cannot be after to To Date\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const reportForm = useFormik({\r\n    initialValues: {\r\n      product_name: \"\",\r\n      from_date: \"\",\r\n      to_date: \"\",\r\n      shop: \"\",\r\n      amount_spent: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      axios\r\n        .post(\"/reports/admin_report\", values)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setPurchaseHistory(res.data.purchase_history);\r\n          //   setTotal(res.data.total);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  const [shops, setShops] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/locations/all_shops\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setShops(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    computeTotalSales();\r\n  }, [purchaseHistory]);\r\n\r\n  const classes = theStyles();\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <form>\r\n        <div className={classes.root} noValidate autoComplete=\"off\">\r\n          <div style={{ paddingTop: \"10px\" }}>\r\n            <FormControl\r\n              style={{\r\n                marginBottom: \"20px\",\r\n                width: \"40%\",\r\n                marginRight: \"10px\",\r\n              }}>\r\n              <InputLabel htmlFor=\"product-name\">Product Name</InputLabel>\r\n              <Input\r\n                id=\"product-name\"\r\n                onChange={reportForm.handleChange}\r\n                name=\"product_name\"\r\n                value={reportForm.values.product_name}\r\n                // label=\"product)name\"\r\n              />\r\n            </FormControl>\r\n            <FormControl\r\n              style={{\r\n                marginBottom: \"20px\",\r\n                width: \"40%\",\r\n                marginRight: \"10px\",\r\n              }}\r\n              className={clsx(classes.margin, classes.textField)}>\r\n              <InputLabel htmlFor=\"shop\">Shops</InputLabel>\r\n              <Select\r\n                // labelId=\"shops\"\r\n                onChange={reportForm.handleChange}\r\n                name=\"shop\"\r\n                value={reportForm.values.shop}\r\n                className={classes.select}>\r\n                {shops.map((shop, index) => (\r\n                  <MenuItem key={index} value={shop.location_id}>\r\n                    {shop.location_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <FormControl style={{ marginBottom: \"20px\", marginRight: \"40px\" }}>\r\n              <InputLabel id=\"from_date\" shrink>\r\n                Date From:\r\n              </InputLabel>\r\n              <Input\r\n                labelId=\"from_date\"\r\n                name=\"from_date\"\r\n                type=\"date\"\r\n                value={reportForm.values.from_date}\r\n                onChange={reportForm.handleChange}\r\n              />\r\n              <FormHelperText style={{ color: \"red\" }}>\r\n                {reportForm.errors.from_date}\r\n              </FormHelperText>\r\n            </FormControl>\r\n            <FormControl>\r\n              <InputLabel id=\"to_date\" shrink>\r\n                Date To:\r\n              </InputLabel>\r\n              <Input\r\n                labelId=\"activity-to\"\r\n                name=\"to_date\"\r\n                type=\"date\"\r\n                value={reportForm.values.to_date}\r\n                onChange={reportForm.handleChange}\r\n              />\r\n            </FormControl>\r\n          </div>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={reportForm.handleSubmit}\r\n            style={{ marginBottom: \"10px\", marginRight: \"10px\" }}>\r\n            Get Report\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={reportForm.handleReset}\r\n            style={{ marginBottom: \"10px\" }}>\r\n            CLEAR\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      {purchaseHistory.length > 0 ? (\r\n        <Grid container id=\"master\" alignItems=\"flex-start\">\r\n          <Grid\r\n            container\r\n            item\r\n            id=\"left\"\r\n            direction=\"column\"\r\n            alignItems=\"flex-start\"\r\n            xs={6}\r\n            spacing={2}>\r\n            <Grid item>\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ width: 800, paddingTop: \"10px\" }}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"right\">Transaction ID</TableCell>\r\n                      <TableCell align=\"right\">Product Name</TableCell>\r\n                      <TableCell align=\"right\">Location Sold</TableCell>\r\n                      <TableCell align=\"right\">Quantity Purchased</TableCell>\r\n                      <TableCell align=\"right\">Amount Spent</TableCell>\r\n                      <TableCell align=\"right\">Transaction Date</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {purchaseHistory.map((item) => (\r\n                      <TableRow key={item.transaction_id}>\r\n                        <TableCell align=\"right\">\r\n                          {item.transaction_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{item.product_name}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {item.location_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {item.quantity_purchased}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {`$${item.total_purchase_cost}.00`}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {item.purchase_time.toString().split(\"T\")[0]}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item id=\"right\" direction=\"column\" xs={6}>\r\n            <Grid item>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h5\" component=\"h2\">\r\n                    Sales Summary\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\">{`Total Sales $${totalSales}.00`}</Typography>\r\n                  <Typography variant=\"body2\" component=\"p\"></Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRevenueSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  FormHelperText,\r\n  InputLabel,\r\n  Tabs,\r\n  Tab,\r\n} from \"@material-ui/core\";\r\n\r\nimport AdminEmployeeSection from \"./AdminEmployeeSection\";\r\nimport AdminRevenueSection from \"./AdminRevenueSection\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleTabChange = (e, value) => {\r\n    setValue(value);\r\n  };\r\n\r\n  const TabPanel = (props) => {\r\n    const { children, value, index } = props;\r\n    return <>{value === index && { children }}</>;\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <Tabs value={value} onChange={handleTabChange}>\r\n        <Tab label=\"Employees\" />\r\n        <Tab label=\"Revenue\" />\r\n      </Tabs>\r\n      {value === 0 && <AdminEmployeeSection />}\r\n      {value === 1 && <AdminRevenueSection />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  // TextField,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Grid,\r\n  FormHelperText,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  TableHead,\r\n  Table,\r\n  TableContainer,\r\n  Paper,\r\n  Card,\r\n  CardContent,\r\n  // Modal,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\n// import { base_url } from \"../config\";\r\nimport { useFormik } from \"formik\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst theStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"900px\",\r\n    variant: \"contained\",\r\n    position: \"right\",\r\n    border: \"3px solid #4A90E2\",\r\n    borderColor: \"gray\",\r\n    color: \"black\",\r\n    align: \"right\",\r\n    minWidth: 50,\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(4),\r\n      width: \"10ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst UserDashboard = () => {\r\n  const classes = useStyles();\r\n  const { user } = useContext(UserContext);\r\n\r\n  //Get all the enclosure names:\r\n  const [shops, setShops] = useState([]);\r\n\r\n  const [purchaseItems, setPurchaseItems] = useState([]);\r\n\r\n  const [animal, setAnimal] = useState({\r\n    date_arrived: null,\r\n    deceased_date: null,\r\n    birth_day: null,\r\n    location: \"\",\r\n    animal_name: \"\",\r\n  });\r\n\r\n  const getAllShops = () => {\r\n    axios\r\n      .get(`/locations/all_shops`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        setShops(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllShops();\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    console.log(\"testing...\");\r\n    let errors = {};\r\n    if (\r\n      values.amount_spent.length > 0 &&\r\n      !Number.isInteger(Number(values.amount_spent))\r\n    ) {\r\n      errors.amount_spent = \"Must be a valid number\";\r\n    }\r\n    if (\r\n      values.date_from &&\r\n      values.date_to &&\r\n      values.date_from > values.date_to\r\n    ) {\r\n      errors.date_from = \"Date From Cannot be after Date to\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const reportForm = useFormik({\r\n    initialValues: {\r\n      date_from: \"\",\r\n      date_to: \"\",\r\n      shop_name: \"\",\r\n      amount_spent: \"\",\r\n      customer_id: user.userID,\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      axios\r\n        .post(\"/reports/customer_report\", values)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setPurchaseItems(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  const [totalSales, setTotalSales] = useState();\r\n\r\n  const computeTotalSales = () => {\r\n    let total = 0;\r\n    purchaseItems.forEach((product) => {\r\n      total = total + product.total_purchase_cost;\r\n    });\r\n    setTotalSales(total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    computeTotalSales();\r\n  }, [purchaseItems]);\r\n\r\n  const classy = theStyles();\r\n\r\n  return (\r\n    <div style={{ margin: \"10px\" }}>\r\n      <div className={classy.root} noValidate autoComplete=\"off\">\r\n        <div>\r\n          <Typography\r\n            style={{\r\n              align: \"middle\",\r\n              fontSize: \"32px\",\r\n            }}>\r\n            Report Request\r\n          </Typography>\r\n          <Typography\r\n            align=\"left\"\r\n            style={{\r\n              fontSize: \"22px\",\r\n              fontWeight: \"bold\",\r\n            }}></Typography>\r\n        </div>\r\n        <div>\r\n          <FormControl\r\n            spacing={2}\r\n            style={{ marginBottom: \"20px\", width: \"40%\" }}\r\n            className={clsx(classy.margin, classy.textField)}\r\n            variant=\"outlined\"></FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl style={{ paddingRight: \"10px\" }}>\r\n            <InputLabel id=\"shop_name\">Shop Name</InputLabel>\r\n            <Select\r\n              labelId=\"shop_name\"\r\n              onChange={reportForm.handleChange}\r\n              name=\"shop_name\"\r\n              error={reportForm.errors.shop_name}\r\n              value={reportForm.values.shop_name}\r\n              displayEmpty\r\n              className={classes.select}>\r\n              {shops.map((s, index) => (\r\n                <MenuItem key={index} value={s.location_id}>\r\n                  {s.location_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <FormHelperText className={classes.errMessage}>\r\n              {reportForm.errors.shop_name}\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            style={{ marginBottom: \"20px\", width: \"40%\" }}\r\n            className={clsx(classy.margin, classy.textField)}\r\n            variant=\"outlined\">\r\n            <InputLabel htmlFor=\"amount_spent\">\r\n              Purchases above this value\r\n            </InputLabel>\r\n            <Input\r\n              id=\"amount_spent\"\r\n              onChange={reportForm.handleChange}\r\n              name=\"amount_spent\"\r\n              value={reportForm.values.amount_spent}\r\n              error={reportForm.errors.amount_spent}\r\n            />\r\n            <FormHelperText style={{ color: \"red\" }}>\r\n              {reportForm.errors.amount_spent}\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n        <div></div>\r\n        <FormControl style={{ marginBottom: \"20px\", marginRight: \"40px\" }}>\r\n          <InputLabel id=\"date_from\" shrink>\r\n            Date From:\r\n          </InputLabel>\r\n          <Input\r\n            labelId=\"activity-from\"\r\n            name=\"date_from\"\r\n            type=\"date\"\r\n            value={reportForm.values.date_from}\r\n            onChange={reportForm.handleChange}\r\n          />\r\n          <FormHelperText style={{ color: \"red\" }}>\r\n            {reportForm.errors.date_from}\r\n          </FormHelperText>\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel id=\"date_to\" shrink>\r\n            Date To:\r\n          </InputLabel>\r\n          <Input\r\n            labelId=\"activity-to\"\r\n            name=\"date_to\"\r\n            type=\"date\"\r\n            value={reportForm.values.date_to}\r\n            onChange={reportForm.handleChange}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={reportForm.handleSubmit}\r\n          style={{ marginRight: \"10px\" }}>\r\n          Get Report\r\n        </Button>\r\n        <Button onClick={reportForm.handleReset} variant=\"outlined\">\r\n          Clear\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Table to display the animals */}\r\n      {purchaseItems.length > 0 ? (\r\n        <Grid container id=\"master\" alignItems=\"flex-start\" spacing={2}>\r\n          <Grid item id=\"left\" xs={6}>\r\n            <TableContainer component={Paper} style={{ paddingTop: \"10px\" }}>\r\n              <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Location Bought </TableCell>\r\n                    <TableCell align=\"right\">Item(s) Purchased</TableCell>\r\n                    <TableCell align=\"right\">Amount Spent</TableCell>\r\n                    <TableCell align=\"right\">Date Purchased</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {purchaseItems.map((item) => (\r\n                    <TableRow key={item.customer_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {item.location_name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {item.quantity_purchased + \" \" + item.product_name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {\"$\" + item.total_purchase_cost}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {item.purchase_time.toString().split(\"T\")[0]}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <Grid id=\"right\" item>\r\n            <Grid item>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h5\" component=\"h2\">\r\n                    Sales Summary\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\">{`Total Sales $${totalSales}.00`}</Typography>\r\n                  <Typography variant=\"body2\" component=\"p\"></Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { Typography, Snackbar, IconButton, Button } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport axios from \"axios\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { IndeterminateCheckBoxOutlined } from \"@material-ui/icons\";\r\n\r\nconst Messages = () => {\r\n  const { user } = useContext(UserContext);\r\n  const [messages, setMessages] = useState([]);\r\n  //   Get all messages for this user.\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"/messages\", {\r\n        user_id: parseInt(user.userID),\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setMessages(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const deleteMessage = (message) => {\r\n    console.log(message);\r\n    axios\r\n      .delete(`/messages/delete/${message.message_id}`, message)\r\n      .then((res) => {\r\n        let new_messages = messages.filter(\r\n          (mes) => mes.message_id != message.message_id\r\n        );\r\n        console.log(\"New messages: \", new_messages);\r\n        setMessages(new_messages);\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {messages.length > 0 ? (\r\n        <div style={{ width: \"50%\" }}>\r\n          {messages.map((mes) => (\r\n            <Alert\r\n              key={mes.message_id}\r\n              onClose={() => {\r\n                deleteMessage(mes);\r\n              }}>\r\n              {mes.message}\r\n            </Alert>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <Typography>No Messages</Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Ticket from \"./components/Ticket\";\r\nimport EnclosureList from \"./components/EnclosureList\";\r\nimport CreateUser from \"./components/CreateUser\";\r\nimport UserLogin from \"./components/UserLogin\";\r\nimport EmployeeDashboard from \"./components/EmployeeDashboard\";\r\nimport EnclosureDetailed from \"./components/EnclosureDetailed\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport PurchaseHistory from \"./components/PurchaseHistory\";\r\nimport GiftShop from \"./components/GiftShop\";\r\nimport \"./App.css\";\r\nimport GiftShopList from \"./components/GiftShopList\";\r\nimport GiftShopDetailed from \"./components/GiftShopDetailed\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\nimport UserDashboard from \"./components/UserDashboard\";\r\nimport Messages from \"./components/Messages\";\r\n// NEED TO \"npm install\" @material-ui dependencies\r\n// npm install @material-ui/core\r\n// npm install @material-ui/pickers\r\n// npm install date-fns @date-io/date-fns@1\r\n// npm install --save moment\r\n// there may be other material uis too\r\n// there may be other material uis too\r\n\r\nfunction App() {\r\n  // to initialize session storage if not created yet\r\n  if (sessionStorage.getItem(\"auth\") === null) {\r\n    sessionStorage.setItem(\"auth\", false);\r\n  }\r\n\r\n  if (sessionStorage.getItem(\"username\") === null) {\r\n    sessionStorage.setItem(\"username\", \"guest\");\r\n  }\r\n\r\n  if (sessionStorage.getItem(\"role\") === null) {\r\n    sessionStorage.setItem(\"role\", null);\r\n  }\r\n\r\n  if (sessionStorage.getItem(\"userID\") === null) {\r\n    sessionStorage.setItem(\"userID\", null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* add your pages here  */}\r\n\r\n      <BrowserRouter>\r\n        <Navbar></Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/ticket\" component={Ticket} />\r\n          <Route exact path=\"/giftshops\" component={GiftShopList} />\r\n          <Route exact path=\"/giftshops/:id\" component={GiftShopDetailed} />\r\n          <Route exact path=\"/enclosure\" component={EnclosureList} />\r\n          <Route exact path=\"/enclosure/:id\" component={EnclosureDetailed} />\r\n          <Route exact path=\"/create\" component={CreateUser} />\r\n          <Route exact path=\"/login\" component={UserLogin} />\r\n          <Route\r\n            exact\r\n            path=\"/employee_dashboard\"\r\n            component={EmployeeDashboard}\r\n          />\r\n          <Route exact path=\"/admin_dashboard\" component={AdminDashboard} />\r\n          <Route exact path=\"/user_dashboard\" component={UserDashboard} />\r\n          <Route exact path=\"/history\" component={PurchaseHistory} />\r\n          <Route exact path=\"/shop\" component={GiftShop} />\r\n          <Route exact path=\"/messages\" component={Messages} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport axios from \"axios\";\r\nimport { UserProvider } from \"./components/UserContext\";\r\naxios.defaults.baseURL = \"https://zoo-backend-test.herokuapp.com/\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}