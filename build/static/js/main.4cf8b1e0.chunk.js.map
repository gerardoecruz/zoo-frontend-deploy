{"version":3,"sources":["images/zoo.jpg","images/home_elephant.jpg","images/home_bird.jpg","images/home_monkey.jpg","images/home_penguin.jpg","images/home_tiger.jpg","Home.js","components/UserContext.js","components/Ticket.js","images/Elephant.jpg","images/Giraffe.jpg","images/Lion.jpg","images/Rhinoceros.jpg","images/Tiger.jpg","images/The_Safari.jpg","components/EnclosureList.js","components/CreateUser.js","components/UserLogin.js","components/EmployeeDashboard.js","components/EnclosureDetailed.js","components/Navbar.js","components/PurchaseHistory.js","components/GiftShop.js","components/GiftShopList.js","components/GiftShopDetailed.js","components/AdminEmployeeSection.js","components/AdminRevenueSection.js","components/AdminDashboard.js","components/UserDashboard.js","components/Messages.js","App.js","index.js"],"names":["Home","React","useState","open","setOpen","anchorRef","useRef","prevOpen","useEffect","current","focus","tileData","img","background","cols","featured","bird","elephant","monkey","penguin","tiger","theStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","position","width","height","fontColor","fontSize","paper","padding","spacing","textAlign","color","palette","text","secondary","useStyles","justify","gridList","icon","classes","Button","component","Link","to","style","borderRadius","fontWeight","variant","ref","onClick","className","GridList","cellHeight","GridListTile","ListSubheader","map","tile","src","alt","title","GridListTileBar","UserContext","createContext","UserProvider","children","name","sessionStorage","getItem","auth","role","userID","user","setUser","Provider","value","login","setItem","logout","Ticket","useContext","adultTicketCount","setAdultTicketCount","childTicketCount","setChildTicketCount","totalCost","setTotalCost","showTotalCost","setShowTotalCost","Moment","Date","format","selectedDate","setSelectedDate","emptyStates","history","useHistory","handleSubmit","values","console","log","axios","post","item_purchased","customer_id","quantity_purchased","total_purchase_cost","purchase_time","ticket_date","then","res","catch","err","alert","dbInfoForTickets","price","this","TicketCard","age","ticketCount","setTicketCount","Grid","item","xs","Card","CardContent","Typography","gutterBottom","ButtonGroup","size","aria-label","decrement","container","utils","DateFnsUtils","label","onChange","date","disablePast","push","listCategory","textTransform","paddingTop","divider","grid","cardStyles","flexDirection","media","EnclosureCard","description","image","id","url","useRouteMatch","CardActionArea","CardMedia","textDecoration","href","CardActions","EnclosureList","enclosures","setEnclosures","alertError","addDialog","setAddDialog","selectedFile","setSelectedFile","closeAddDialog","location_name","setLocationName","location_type","get","data","categoryContainer","direction","enclosure","i","location_image","location_id","Dialog","onClose","DialogTitle","DialogContent","formTitle","Alert","severity","paddingBottom","TextField","e","target","type","event","files","DialogActions","FormData","append","response","errors","top","left","transform","marginTop","signUp","float","CreateUser","props","setAlertError","formik","useFormik","initialValues","email","password","validate","full_name","test","length","onSubmit","role_id","user_id","errors_response","new_errors","Array","isArray","forEach","error","param","msg","setErrors","handleSignup","handleChange","helperText","createEmployee","UserLogin","handleLogin","border","borderColor","align","minWidth","margin","select","errMessage","EmployeeDashboard","enclosureNames","setEnclosureNames","species","setSpecies","animals","setAnimals","date_arrived","deceased_date","birth_date","location","animal_name","investigator","checked","purchase","animal","customer","dateFrom","dateTo","reportForm","date_from","date_to","health_status","classy","FormControl","InputLabel","htmlFor","Input","FormHelperText","Select","labelId","index","MenuItem","s","species_id","species_name","shrink","defaultValue","toDateString","noValidate","autoComplete","marginBottom","clsx","textField","marginRight","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","toString","split","animal_id","EnclosureDetailed","match","loading","setLoading","openDialog","setOpenDialog","currentAnimal","setCurretAnimal","deleteDialog","setDeleteDialog","setEnclosure","closeDeleteDialog","params","LinearProgress","handleModalOpen","openDeleteDialog","put","delete","Navbar","AppBar","Toolbar","IconButton","edge","purchases","setPurchases","product_name","transaction_id","GiftShop","GiftShopCard","GiftShopList","giftShops","setGiftShops","shop","GiftShopDetailed","quantities","from","_","openDialogedit","setOpenDialogedit","openDialogRemove","setOpenDialogRemove","currentProduct","setCurrentProduct","stock_amount","location_sold","handleCreateEmployee","products","setProducts","giftShop","setGiftShop","each","quantity_selected","amount_due","product","findIndex","elem","item_id","newProducts","handleSelectQuantity","q","disabled","handleModalOpenEdit","handleModalRemove","product_id","window","reload","AdminEmployeeSection","employees","setEmployees","editDialog","setEditDialog","work_location","currentEmployee","setCurrentEmployee","locations","setLocations","worK_location","alignItems","employee","job_title","wage","openEditDialog","employee_id","newEmployee","new_location","AdminRevenueSection","purchaseHistory","setPurchaseHistory","from_date","to_date","amount_spent","purchase_history","shops","setShops","OutlinedInput","AdminDashboard","setValue","Tabs","Tab","UserDashboard","birth_day","shop_name","Number","isInteger","Messages","messages","setMessages","parseInt","mes","message","message_id","new_messages","filter","App","exact","path","PurchaseHistory","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cf8b1e0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zoo.c40cb5df.jpg\";","export default __webpack_public_path__ + \"static/media/home_elephant.5cbc5780.jpg\";","export default __webpack_public_path__ + \"static/media/home_bird.679bf162.jpg\";","export default __webpack_public_path__ + \"static/media/home_monkey.42150678.jpg\";","export default __webpack_public_path__ + \"static/media/home_penguin.5f4b3f5a.jpg\";","export default __webpack_public_path__ + \"static/media/home_tiger.3e7c7b0f.jpg\";","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport background from \"./images/zoo.jpg\";\r\nimport elephant from \"./images/home_elephant.jpg\";\r\nimport bird from \"./images/home_bird.jpg\";\r\nimport monkey from \"./images/home_monkey.jpg\";\r\nimport penguin from \"./images/home_penguin.jpg\";\r\nimport tiger from \"./images/home_tiger.jpg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nfunction Home() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    function handleListKeyDown(event) {\r\n        if (event.key === \"Tab\") {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    // temporary home page\r\n    // need to figure out loggin in\r\n    const tileData = [\r\n        {\r\n            img: background,\r\n            // title: ,\r\n            cols: 2,\r\n\r\n            featured: true\r\n        },\r\n        {\r\n            img: bird,\r\n\r\n            cols: 2,\r\n            // featured: true\r\n        },\r\n        {\r\n            img: elephant,\r\n\r\n            cols: 2,\r\n\r\n            // featured: true\r\n        },\r\n        {\r\n            img: monkey,\r\n\r\n            cols: 2,\r\n\r\n            // featured: true\r\n        },\r\n        {\r\n            img: penguin,\r\n\r\n            cols: 2,\r\n\r\n            //  featured: true\r\n        },\r\n        {\r\n            img: tiger,\r\n\r\n            cols: 2,\r\n\r\n            // featured: true\r\n        },\r\n    ];\r\n    const theStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: 'transparent',\r\n            position: 'absolute',\r\n            width: '80%',\r\n            height: '400%',\r\n            fontColor: '#194d33',\r\n            fontSize: '27px',\r\n        },\r\n        paper: {\r\n            width: '350px',\r\n            padding: theme.spacing(2),\r\n            textAlign: 'left',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    }));\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n\r\n            display: 'flex',\r\n            justify: 'center',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        gridList: {\r\n            width: '80%',\r\n            height: '350%',\r\n        },\r\n        icon: {\r\n            color: 'rgba(255, 255, 255, 0.54)',\r\n        },\r\n    }));\r\n    const theclasses = theStyles();\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n\r\n                    {/* <Button component={Link} to=\"/ticket\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: '25%',\r\n                            borderRadius: 5,\r\n                            backgroundColor: \"white\",\r\n                            padding: \"7px 26px\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bold'\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"white\"\r\n                        ref={anchorRef}\r\n                        onClick={handleToggle}>\r\n                        Ticket\r\n          </Button> */}\r\n                    <Button component={Link} to=\"/enclosure\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: '25%',\r\n                            borderRadius: 5,\r\n                            backgroundColor: \"white\",\r\n                            padding: \"7px 26px\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bold'\r\n\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"white\"\r\n                        ref={anchorRef}\r\n                        onClick={handleToggle}>\r\n                        Enclosures\r\n          </Button>\r\n                    {/* <Button component={Link} to=\"/giftshops\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: '25%',\r\n                            borderRadius: 5,\r\n                            backgroundColor: \"white\",\r\n                            padding: \"7px 26px\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: 'bold'\r\n\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"white\"\r\n                        ref={anchorRef}\r\n                        onClick={handleToggle}>\r\n                        GiftShop\r\n          </Button> */}\r\n\r\n                    <div className={classes.root}>\r\n\r\n                        <GridList cellHeight={350} className={classes.gridList}>\r\n                            <GridListTile key=\"Subheader\" cols={1} style={{ height: 'auto' }}>\r\n                                <ListSubheader component=\"div\"></ListSubheader>\r\n                            </GridListTile>\r\n                            {tileData.map((tile) => (\r\n                                <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n                                    <img src={tile.img} alt={tile.title} />\r\n                                    <GridListTileBar\r\n                                        style={{\r\n\r\n                                            backgroundColor: 'transparent'\r\n                                        }}\r\n                                        title={tile.title}\r\n                                    // subtitle={<span>by: {tile.author}</span>}\r\n                                    // actionIcon={\r\n                                    //<IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\r\n                                    //<InfoIcon />\r\n                                    //</IconButton>\r\n                                    //}\r\n                                    />\r\n                                </GridListTile>\r\n                            ))}\r\n                        </GridList>\r\n\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState({\r\n    name: sessionStorage.getItem(\"username\"),\r\n    auth: sessionStorage.getItem(\"auth\") === \"true\",\r\n    role: sessionStorage.getItem(\"role\"),\r\n    userID: sessionStorage.getItem(\"userID\"),\r\n  });\r\n\r\n  const login = (name, role, userID) => {\r\n    setUser(() => ({\r\n      name: name,\r\n      auth: true,\r\n      role: role,\r\n      userID: userID,\r\n    }));\r\n    sessionStorage.setItem(\"username\", name);\r\n    sessionStorage.setItem(\"auth\", true);\r\n    sessionStorage.setItem(\"role\", role);\r\n    sessionStorage.setItem(\"userID\", userID);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(() => ({\r\n      name: \"guest\",\r\n      auth: false,\r\n    }));\r\n    sessionStorage.setItem(\"username\", \"guest\");\r\n    sessionStorage.setItem(\"auth\", false);\r\n    sessionStorage.setItem(\"role\", null);\r\n    sessionStorage.setItem(\"userID\", null);\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\n// NEED TO RUN \"npm i @date-io/date-fns@1.3.13\" COMMANDS IF YOU GET\r\n// RangeError: Format string contains an unescaped latin alphabet character n\r\n\r\nfunction Ticket() {\r\n  const { user } = useContext(UserContext);\r\n\r\n  const [adultTicketCount, setAdultTicketCount] = useState(0);\r\n  const [childTicketCount, setChildTicketCount] = useState(0);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [showTotalCost, setShowTotalCost] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    Moment(new Date()).format(\"MM-DD-YYYY\")\r\n  );\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(Moment(date).format(\"MM-DD-YYYY\"));\r\n  };\r\n\r\n  // ticket number doesn't go below 0\r\n  function decrement(ticketCount, setTicketCount) {\r\n    if (ticketCount - 1 < 0) {\r\n      setTicketCount(0);\r\n    } else {\r\n      setTicketCount(ticketCount - 1);\r\n    }\r\n  }\r\n\r\n  function calculateTotalCost() {\r\n    setTotalCost(childTicketCount * 5 + adultTicketCount * 10);\r\n  }\r\n\r\n  // emptying all state values after confirming/cancelling purchase\r\n  function emptyStates() {\r\n    setAdultTicketCount(0);\r\n    setChildTicketCount(0);\r\n    setTotalCost(0);\r\n    setShowTotalCost(false);\r\n    setSelectedDate(Moment(new Date()).format(\"MM-DD-YYYY\"));\r\n  }\r\n\r\n  // redirect to login page when trying to purchase tickets while not signed in\r\n  const history = useHistory();\r\n\r\n  const goToLogInPage = () => {\r\n    let path = \"/login\";\r\n    history.push(path);\r\n  };\r\n\r\n  // sending ticket info to db\r\n  const handleSubmit = (values) => {\r\n    console.log(\"purchasing tickets...\");\r\n    axios\r\n      .post(`https://zoo-backend-test.herokuapp.com/purchasehistory`, {\r\n        item_purchased: values.item_purchased,\r\n        customer_id: values.customer_id,\r\n        quantity_purchased: values.quantity_purchased,\r\n        total_purchase_cost: values.total_purchase_cost,\r\n        purchase_time: values.purchase_time,\r\n        ticket_date: values.ticket_date,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"failed!\");\r\n      });\r\n  };\r\n\r\n  // constructor for ticket info thats going to be sent to db\r\n  function dbInfoForTickets(\r\n    item_purchased,\r\n    quantity_purchased,\r\n    price,\r\n    ticket_date\r\n  ) {\r\n    this.item_purchased = item_purchased;\r\n    this.customer_id = user.userID;\r\n    this.quantity_purchased = quantity_purchased;\r\n    this.total_purchase_cost = quantity_purchased * price;\r\n    this.purchase_time = new Date();\r\n    this.ticket_date = ticket_date;\r\n  }\r\n\r\n  // ticket card box\r\n  const TicketCard = ({ name, age, price, ticketCount, setTicketCount }) => {\r\n    return (\r\n      <Grid item xs={6}>\r\n        <Card className=\"ticketCard\" variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n              {age}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {price}\r\n            </Typography>\r\n            <Typography className=\"taxIncludedText\" color=\"textSecondary\">\r\n              tax included.\r\n            </Typography>\r\n            <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n              <Button onClick={() => decrement(ticketCount, setTicketCount)}>\r\n                -\r\n              </Button>\r\n              <Button color=\"primary\">{ticketCount}</Button>\r\n              <Button onClick={() => setTicketCount(ticketCount + 1)}>+</Button>\r\n            </ButtonGroup>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tickets</h1>\r\n\r\n      {/* ticket card boxes */}\r\n      <Grid container spacing={4}>\r\n        <TicketCard\r\n          name=\"Adult Ticket\"\r\n          age=\"Age 18+\"\r\n          price=\"$10\"\r\n          ticketCount={adultTicketCount}\r\n          setTicketCount={setAdultTicketCount}\r\n        />\r\n\r\n        <TicketCard\r\n          name=\"Child Ticket\"\r\n          age=\"Age 3-17\"\r\n          price=\"$5\"\r\n          ticketCount={childTicketCount}\r\n          setTicketCount={setChildTicketCount}\r\n        />\r\n      </Grid>\r\n\r\n      {/* ticket date */}\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          label=\"date\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          disablePast\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n\r\n      <br />\r\n\r\n      {/* purchase button */}\r\n      <Button\r\n        className=\"purchaseButton\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          calculateTotalCost();\r\n          setShowTotalCost(true);\r\n        }}>\r\n        Purchase\r\n      </Button>\r\n\r\n      {/* only display once the user clicks \"purchase\" button  \r\n        need to add \"please log in\" if not logged in */}\r\n      {showTotalCost && totalCost !== 0 && (\r\n        <div>\r\n          <h3>Your total cost is: ${totalCost}</h3>\r\n\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              if (user.auth) {\r\n                alert(\r\n                  adultTicketCount +\r\n                    \" adult ticket(s) \" +\r\n                    childTicketCount +\r\n                    \" child ticket(s) on \" +\r\n                    selectedDate +\r\n                    \" for $\" +\r\n                    totalCost\r\n                );\r\n                if (adultTicketCount > 0) {\r\n                  handleSubmit(\r\n                    new dbInfoForTickets(8, adultTicketCount, 10, selectedDate)\r\n                  );\r\n                  console.log(\r\n                    new dbInfoForTickets(8, adultTicketCount, 10, selectedDate)\r\n                  );\r\n                }\r\n                if (childTicketCount > 0) {\r\n                  handleSubmit(\r\n                    new dbInfoForTickets(7, childTicketCount, 5, selectedDate)\r\n                  );\r\n                  console.log(\r\n                    new dbInfoForTickets(7, childTicketCount, 5, selectedDate)\r\n                  );\r\n                }\r\n                emptyStates();\r\n              } else {\r\n                goToLogInPage();\r\n              }\r\n            }}>\r\n            Confirm\r\n          </Button>\r\n\r\n          <Button variant=\"outlined\" onClick={emptyStates}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ticket;\r\n","export default __webpack_public_path__ + \"static/media/Elephant.658a10fe.jpg\";","export default __webpack_public_path__ + \"static/media/Giraffe.7902b660.jpg\";","export default __webpack_public_path__ + \"static/media/Lion.0e205570.jpg\";","export default __webpack_public_path__ + \"static/media/Rhinoceros.7dcca251.jpg\";","export default __webpack_public_path__ + \"static/media/Tiger.3aeda941.jpg\";","export default __webpack_public_path__ + \"static/media/The_Safari.74f19edb.jpg\";","import React, { useEffect, useState, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n//Import images\r\nimport Elephant from \"../images/Elephant.jpg\";\r\nimport Giraffe from \"../images/Giraffe.jpg\";\r\nimport Lion from \"../images/Lion.jpg\";\r\nimport Rhinoceros from \"../images/Rhinoceros.jpg\";\r\nimport Tiger from \"../images/Tiger.jpg\";\r\nimport The_Safari from \"../images/The_Safari.jpg\";\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  Input,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\nimport { base_url } from \"../config\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { images_path } from \"../config\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\nimport { useFormik } from \"formik\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst enclosure_data = [\r\n  {\r\n    enclosureName: \"Elepant\",\r\n    img: Elephant,\r\n    description: \"This enclosure consists of Afriran American Elephants\",\r\n  },\r\n  {\r\n    enclosureName: \"Rhinoceros\",\r\n    img: Rhinoceros,\r\n    description: \"Come witness on of the most magnificent mammals\",\r\n  },\r\n  {\r\n    enclosureName: \"Giraffe\",\r\n    img: Giraffe,\r\n    description: \"Come meet the tallest terrestrial animal\",\r\n  },\r\n  {\r\n    enclosureName: \"Tiger\",\r\n    img: Tiger,\r\n    description: \"The Largest and most fierce cat\",\r\n  },\r\n  {\r\n    enclosureName: \"Lion\",\r\n    img: Lion,\r\n    description: \"The King of the Junge is here!\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  listCategory: {\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  divider: {\r\n    height: \"5px\",\r\n    backgroundColor: \"green\",\r\n    width: \"100%\",\r\n  },\r\n  grid: {\r\n    padding: \"10px\",\r\n  },\r\n});\r\n\r\nconst cardStyles = makeStyles({\r\n  root: {\r\n    width: \"280px\",\r\n    // height: \"300px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst EnclosureCard = ({ name, description, image, id }) => {\r\n  let { url } = useRouteMatch();\r\n  const classes = cardStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <div>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={image}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </div>\r\n        <div>\r\n          <Link style={{ textDecoration: \"none\" }} href={`${url}/${id}`}>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EnclosureList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [enclosures, setEnclosures] = useState([]);\r\n\r\n  const getAllEnclosures = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations/all_enclosures`)\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        // console.log(res);\r\n        // const with_image = res.data.map((e) => {\r\n        //   return {\r\n        //     ...e,\r\n        //     location_img: URL.createObjectURL(new Blob(e.image.data, {type: \"application/zip\"}),\r\n        //   };\r\n        // });\r\n        console.log(res.data);\r\n        setEnclosures(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const { user } = useContext(UserContext);\r\n  const [alertError, setAlertError] = useState(null);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(false);\r\n  const openAddDialog = () => {\r\n    setAddDialog(true);\r\n  };\r\n\r\n  const closeAddDialog = () => {\r\n    setAddDialog(false);\r\n  };\r\n\r\n  const [location_name, setLocationName] = useState(\"\");\r\n  const [location_type, setLocationType] = useState(\"Enclosure\");\r\n\r\n  const handleCreateEnclosure = () => {\r\n    const data = new FormData();\r\n    data.append(\"location_name\", location_name);\r\n    data.append(\"location_type\", location_type);\r\n    data.append(\"location_image\", selectedFile);\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/locations\", data)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        console.log(\"Errors: \", err.response.data);\r\n        let errors_response = err.response.data.errors;\r\n        // let new_errors = { email: \"\", password: \"\" };\r\n        // if (Array.isArray(errors_response)) {\r\n        //   errors_response.forEach((error) => {\r\n        //     new_errors[error.param] = error.msg;\r\n        //   });\r\n        //   setErrors(new_errors);\r\n        // } else {\r\n        //   setAlertError(err.response.data.error);\r\n        // }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllEnclosures();\r\n    // console.log(enclosures);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.categoryContainer}>\r\n      {/* <Navbar></Navbar> */}\r\n\r\n      <Typography className={classes.listCategory}>Enclosures</Typography>\r\n\r\n      <Grid direction=\"row\" container spacing={2} className={classes.grid}>\r\n        {enclosures.map((enclosure, i) => {\r\n          return (\r\n            <Grid item key={i}>\r\n              <EnclosureCard\r\n                name={enclosure.location_name}\r\n                image={`/uploads/${enclosure.location_image}`}\r\n                id={enclosure.location_id}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      {user.role == \"Admin\" ? (\r\n        <Grid item>\r\n          <Button variant=\"contained\" onClick={openAddDialog}>\r\n            Add Enclosure\r\n          </Button>\r\n        </Grid>\r\n      ) : null}\r\n\r\n      {/* Modal for adding new item to gift shop */}\r\n      <div>\r\n        <Dialog open={addDialog} onClose={closeAddDialog}>\r\n          <DialogTitle>Add New Enclosure</DialogTitle>\r\n          <DialogContent>\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"column\"\r\n              className={classes.root}>\r\n              <Typography className={classes.formTitle}></Typography>\r\n              {alertError ? (\r\n                <Alert severity=\"error\" style={{ paddingBottom: \"10px\" }}>\r\n                  {alertError}\r\n                </Alert>\r\n              ) : null}\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  id=\"location_name\"\r\n                  onChange={(e) => {\r\n                    setLocationName(e.target.value);\r\n                  }}\r\n                  name=\"location_name\"\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button variant=\"contained\" component=\"label\">\r\n                  Upload File\r\n                  <input\r\n                    id=\"file\"\r\n                    name=\"location_name\"\r\n                    type=\"file\"\r\n                    onChange={(event) => {\r\n                      setSelectedFile(event.target.files[0]);\r\n                    }}\r\n                  />\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={handleCreateEnclosure}\r\n              variant=\"contained\"\r\n              color=\"secondary\">\r\n              Save\r\n            </Button>\r\n            <Button\r\n              onClick={closeAddDialog}\r\n              variant=\"contained\"\r\n              color=\"secondary\">\r\n              CANCEL\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnclosureList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    width: \"50ch\",\r\n    position: \"fixed\",\r\n    top: \"25%\",\r\n    left: \"50%\",\r\n    textAlign: \"center\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formTitle: {\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  signUp: {\r\n    float: \"left\",\r\n  },\r\n}));\r\n\r\nfunction CreateUser(props) {\r\n  const classes = useStyles();\r\n\r\n  const { login } = useContext(UserContext);\r\n\r\n  const [alertError, setAlertError] = useState(null);\r\n  let history = useHistory();\r\n\r\n  const handleSignup = (values) => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/signup\", {\r\n        full_name: values.full_name,\r\n        email: values.email,\r\n        password: values.password,\r\n        role_id: \"Customer\",\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        //role_id, full_name, user_id\r\n        login(res.data.full_name, res.data.role_id, res.data.user_id);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        console.log(\"Errors: \", err.response.data);\r\n        let errors_response = err.response.data.errors;\r\n        let new_errors = { email: \"\", password: \"\" };\r\n        if (Array.isArray(errors_response)) {\r\n          errors_response.forEach((error) => {\r\n            new_errors[error.param] = error.msg;\r\n          });\r\n          setErrors(new_errors);\r\n        } else {\r\n          setAlertError(err.response.data.error);\r\n        }\r\n      });\r\n  };\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.full_name) {\r\n      errors.password = \"Required\";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    } else if (values.email.length > 25) {\r\n      errors.email = \"Max 25 characters\";\r\n    }\r\n    if (values.password.length < 4) {\r\n      errors.password = \"Minimum 4 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleSignup(values);\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  return (\r\n    <Grid container spacing={1} direction=\"column\" className={classes.root}>\r\n      <Typography className={classes.formTitle}>Sign Up</Typography>\r\n      {alertError ? (\r\n        <Alert severity=\"error\" style={{ paddingBottom: \"10px\" }}>\r\n          {alertError}\r\n        </Alert>\r\n      ) : null}\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          id=\"full_name\"\r\n          onChange={formik.handleChange}\r\n          name=\"full_name\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          error={errors.full_name || formik.errors.full_name}\r\n          helperText={\r\n            errors.full_name !== \"\"\r\n              ? errors.full_name\r\n              : formik.errors.full_name !== \"\"\r\n              ? formik.errors.full_name\r\n              : \"\"\r\n          }\r\n        />\r\n      </Grid>\r\n      {props.createEmployee ? (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"Email\"\r\n            id=\"email\"\r\n            onChange={formik.handleChange}\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            error={errors.email || formik.errors.email}\r\n            helperText={\r\n              errors.email !== \"\"\r\n                ? errors.email\r\n                : formik.errors.email !== \"\"\r\n                ? formik.errors.email\r\n                : \"\"\r\n            }\r\n          />\r\n        </Grid>\r\n      ) : null}\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          id=\"email\"\r\n          onChange={formik.handleChange}\r\n          name=\"email\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          error={errors.email || formik.errors.email}\r\n          helperText={\r\n            errors.email !== \"\"\r\n              ? errors.email\r\n              : formik.errors.email !== \"\"\r\n              ? formik.errors.email\r\n              : \"\"\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          onChange={formik.handleChange}\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          error={errors.password || formik.errors.password}\r\n          helperText={\r\n            errors.password !== \"\"\r\n              ? errors.password\r\n              : formik.errors.password !== \"\"\r\n              ? formik.errors.password\r\n              : \"\"\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        onClick={formik.handleSubmit}\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\">\r\n        Sign Up\r\n      </Button>\r\n    </Grid>\r\n  );\r\n  // Only customers should be able to create their own accounts\r\n  // We have to make employee accounts beforehand, they should end with \"@zoo-staff\" to signify they're an employee so we know which table to check in db with our queries\r\n}\r\n\r\nexport default CreateUser;\r\n","import React, { useState, useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\n// import { AlternateEmail, DriveEtaTwoTone } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    width: \"50ch\",\r\n    position: \"fixed\",\r\n    top: \"25%\",\r\n    left: \"50%\",\r\n    textAlign: \"center\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formTitle: {\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  signUp: {\r\n    float: \"left\",\r\n  },\r\n}));\r\n\r\nconst UserLogin = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { login } = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const [alertError, setAlertError] = useState(null);\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    } else if (values.email.length > 25) {\r\n      errors.email = \"Max 25 characters\";\r\n    }\r\n    if (values.password.length < 4) {\r\n      errors.password = \"Minimum 4 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleLogin = (values) => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/login\", {\r\n        email: values.email,\r\n        password: values.password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        login(res.data.full_name, res.data.role_id, res.data.user_id);\r\n        console.log(\"Login successful\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        setAlertError(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleLogin(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} direction=\"column\" className={classes.root}>\r\n        <Typography className={classes.formTitle}>Log In</Typography>\r\n        {alertError ? (\r\n          <Alert severity=\"error\" style={{ paddingBottom: \"10px\" }}>\r\n            {alertError}\r\n          </Alert>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"Username\"\r\n            id=\"email\"\r\n            onChange={formik.handleChange}\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            error={formik.errors.email}\r\n            helperText={formik.errors.email !== \"\" ? formik.errors.email : \"\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            onChange={formik.handleChange}\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            error={formik.errors.password}\r\n            helperText={\r\n              formik.errors.password !== \"\" ? formik.errors.password : \"\"\r\n            }\r\n          />\r\n        </Grid>\r\n        <Button\r\n          onClick={formik.handleSubmit}\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\">\r\n          Log In\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  // TextField,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Grid,\r\n  FormHelperText,\r\n  TableRow,\r\n  TableCell,\r\n  Table,\r\n  Paper,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  // Modal,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\n// import { base_url } from \"../config\";\r\nimport { useFormik } from \"formik\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nconst theStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"900px\",\r\n    variant: \"contained\",\r\n    position: \"right\",\r\n    border: \"3px solid #4A90E2\",\r\n    borderColor: \"gray\",\r\n    color: \"black\",\r\n    align: \"right\",\r\n    minWidth: 50,\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(4),\r\n      width: \"10ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst EmployeeDashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  //Get all the enclosure names:\r\n  const [enclosureNames, setEnclosureNames] = useState([]);\r\n  const [species, setSpecies] = useState([]);\r\n  const [animals, setAnimals] = useState([]);\r\n\r\n  const [animal, setAnimal] = useState({\r\n    date_arrived: null,\r\n    deceased_date: null,\r\n    birth_date: null,\r\n    location: \"\",\r\n    animal_name: \"\",\r\n  });\r\n\r\n  const getEnclosureNames = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations/all_enclosures`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        setEnclosureNames(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getAllSpecies = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/species`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSpecies(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEnclosureNames();\r\n    getAllSpecies();\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.animal_name) {\r\n      errors.animal_name = \"Required\";\r\n    }\r\n    if (!values.location) {\r\n      errors.location = \"Required\";\r\n    }\r\n    if (!values.date_arrived) {\r\n      errors.date_arrived = \"Required\";\r\n    }\r\n    if (!values.birth_date) {\r\n      errors.birth_date = \"Required\";\r\n    }\r\n    if (!values.species) {\r\n      errors.species = \"Required\";\r\n    }\r\n    return errors;\r\n  };\r\n  const [values, setValues] = useState({\r\n    investigator: \"\",\r\n    checked: true,\r\n    purchase: \"\",\r\n    enclosure: \"\",\r\n    animal: \"\",\r\n    customer: \"\",\r\n    dateFrom: \"\",\r\n    dateTo: \"\",\r\n  });\r\n  const handleReport = (values) => {\r\n    console.log(\"handleReport called\");\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/values\", {\r\n        investigator: values.investigator,\r\n        checked: true,\r\n        purchase: values.purchase,\r\n        enclosure: values.ensloure,\r\n        animal: values.animal,\r\n        customer: values.customer,\r\n        dateFrom: values.dateFrom,\r\n        dateTo: values.dateTo,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  const handlecheck = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    console.log(\"handleSubmit called\");\r\n    axios\r\n      .post(`https://zoo-backend-test.herokuapp.com/animals`, {\r\n        date_arrived: values.date_arrived,\r\n        deceased_date: values.deceased_date,\r\n        birth_date: values.birth_date,\r\n        location: values.location,\r\n        animal_name: values.animal_name,\r\n        species: values.species,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      date_arrived: \"\",\r\n      deceased_date: null,\r\n      birth_date: \"\",\r\n      location: \"\",\r\n      animal_name: \"\",\r\n      species: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleSubmit(values);\r\n    },\r\n  });\r\n\r\n  const reportForm = useFormik({\r\n    initialValues: {\r\n      date_from: \"\",\r\n      date_to: \"\",\r\n      species: \"\",\r\n      health_status: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      // console.log(values);\r\n      axios\r\n        .post(\"https://zoo-backend-test.herokuapp.com/login/employee_report\", values)\r\n        .then((res) => {\r\n          setAnimals(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n  const classy = theStyles();\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\">\r\n        <Typography>Add Animal to Zoo</Typography>\r\n        <Grid container spacing={2} style={{ padding: \"10px\" }}>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n              <Input\r\n                id=\"name\"\r\n                onChange={formik.handleChange}\r\n                name=\"animal_name\"\r\n                error={formik.errors.animal_name}\r\n              />\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.animal_name}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"enclosureName\">Enclosure Name</InputLabel>\r\n              <Select\r\n                labelId=\"enclosureName\"\r\n                onChange={formik.handleChange}\r\n                name=\"location\"\r\n                error={formik.errors.location}\r\n                className={classes.select}>\r\n                {enclosureNames.map((e, index) => (\r\n                  <MenuItem key={index} value={e.location_id}>\r\n                    {e.location_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.location}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"species\">Species</InputLabel>\r\n              <Select\r\n                labelId=\"species\"\r\n                onChange={formik.handleChange}\r\n                name=\"species\"\r\n                error={formik.errors.species}\r\n                className={classes.select}>\r\n                {species.map((s, index) => (\r\n                  <MenuItem key={index} value={s.species_id}>\r\n                    {s.species_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.species}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"dob\" shrink>\r\n                Date of Birth\r\n              </InputLabel>\r\n              <Input\r\n                labelId=\"dob\"\r\n                type=\"date\"\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.birth_date}\r\n                name=\"birth_date\"\r\n              />\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.birth_date}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"dob\" shrink>\r\n                Arrival Date\r\n              </InputLabel>\r\n              <Input\r\n                labelId=\"dob\"\r\n                type=\"date\"\r\n                defaultValue={new Date().toDateString()}\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.date_arrived}\r\n                name=\"date_arrived\"\r\n              />\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.date_arrived}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={formik.handleSubmit}\r\n              type=\"submit\">\r\n              Add Animal\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n\r\n      <form>\r\n        <div className={classy.root} noValidate autoComplete=\"off\">\r\n          <div>\r\n            <Typography\r\n              style={{\r\n                align: \"middle\",\r\n                fontSize: \"32px\",\r\n              }}>\r\n              Report Request\r\n            </Typography>\r\n            <Typography\r\n              align=\"left\"\r\n              style={{\r\n                fontSize: \"22px\",\r\n                fontWeight: \"bold\",\r\n              }}>\r\n             \r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <FormControl\r\n              spacing={2}\r\n              style={{ marginBottom: \"20px\", width: \"40%\" }}\r\n              className={clsx(classy.margin, classy.textField)}\r\n              variant=\"outlined\">\r\n              \r\n            </FormControl>\r\n\r\n            \r\n          </div>\r\n\r\n          <Typography\r\n            align=\"left\"\r\n            style={{\r\n              fontSize: \"18px\",\r\n            }}>\r\n            Select atleast one item:{\" \"}\r\n          </Typography>\r\n          <div>\r\n            <FormControl\r\n              style={{\r\n                marginBottom: \"20px\",\r\n                width: \"40%\",\r\n                marginRight: \"10px\",\r\n              }}\r\n              className={clsx(classy.margin, classy.textField)}\r\n              variant=\"outlined\">\r\n              <InputLabel id=\"species\">Species</InputLabel>\r\n              <Select\r\n                labelId=\"species\"\r\n                onChange={reportForm.handleChange}\r\n                name=\"species\"\r\n                className={classes.select}>\r\n                {species.map((s, index) => (\r\n                  <MenuItem key={index} value={s.species_id}>\r\n                    {s.species_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              style={{ marginBottom: \"20px\", width: \"40%\" }}\r\n              className={clsx(classy.margin, classy.textField)}\r\n              variant=\"outlined\">\r\n              <InputLabel id=\"health_status\">Health Status</InputLabel>\r\n              <Select\r\n                labelId=\"health_status\"\r\n                onChange={reportForm.handleChange}\r\n                name=\"health_status\"\r\n                className={classes.select}>\r\n                <MenuItem value=\"Healthy\">Healthy</MenuItem>\r\n                <MenuItem value=\"Sick\">Sick</MenuItem>\r\n                <MenuItem value=\"Deceased\">Deceased</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <FormControl style={{ marginBottom: \"20px\", marginRight: \"40px\" }}>\r\n            <InputLabel id=\"date_from\" shrink>\r\n              Date From:\r\n            </InputLabel>\r\n            <Input\r\n              labelId=\"activity-from\"\r\n              name=\"date_from\"\r\n              type=\"date\"\r\n              onChange={reportForm.handleChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel id=\"date_to\" shrink>\r\n              Date To:\r\n            </InputLabel>\r\n            <Input\r\n              labelId=\"activity-to\"\r\n              name=\"date_to\"\r\n              type=\"date\"\r\n              onChange={reportForm.handleChange}\r\n            />\r\n          </FormControl>\r\n          <Button variant=\"contained\" onClick={reportForm.handleSubmit}>\r\n            Get Report\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Table to display the animals */}\r\n      <>\r\n        {\r\n          animals.length > 0 ? (\r\n            <>\r\n              <Typography>{`Report Result`}</Typography>\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ width: 800, paddingTop: \"10px\" }}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Name </TableCell>\r\n                      <TableCell align=\"right\">Species</TableCell>\r\n                      <TableCell align=\"right\">Date of Birth</TableCell>\r\n                      <TableCell align=\"right\">Date Arrived</TableCell>\r\n                      <TableCell align=\"right\">Health Status</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {animals.map((animal) => (\r\n                      <TableRow key={animal.animal_id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {animal.animal_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.species_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.birth_date.toString().split(\"T\")[0]}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.date_arrived.toString().split(\"T\")[0]}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.health_status}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          ) : null\r\n          //   <Typography style={{ padding: \"10px\" }}>No Animals</Typography>\r\n        }\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeDashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    ListItemIcon,\r\n    Typography,\r\n    Grid,\r\n    Chip,\r\n    ListItemText,\r\n    LinearProgress,\r\n    Paper,\r\n    Modal,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Select,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    select: {\r\n        minWidth: 150,\r\n    },\r\n    errMessage: {\r\n        color: \"red\",\r\n    },\r\n});\r\nconst EnclosureDetailed = ({ match }) => {\r\n    // console.log(match);\r\n\r\n    const { user } = useContext(UserContext);\r\n\r\n    let history = useHistory();\r\n    console.log(history);\r\n    const classes = useStyles();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    //Modal\r\n    const [currentAnimal, setCurretAnimal] = useState({\r\n        animal_name: \"\",\r\n    });\r\n    const [open, setOpen] = useState(false);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n\r\n    const handleModalOpen = (animal) => {\r\n        console.log(\"Animal\", animal);\r\n        setCurretAnimal(animal);\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleHealthStatusChange = (e) => {\r\n        setCurretAnimal({\r\n            ...currentAnimal,\r\n            health_status: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSave = () => {\r\n        axios\r\n            .put(\"https://zoo-backend-test.herokuapp.com/animals/change_health\", currentAnimal)\r\n            .then((res) => {\r\n                setOpenDialog(false);\r\n                console.log(res);\r\n            })\r\n            .catch((err) => {\r\n                setOpenDialog(true);\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    //Get animals in the Enclosure.\r\n\r\n    const [animals, setAnimals] = useState([]);\r\n\r\n    const [enclosure, setEnclosure] = useState({});\r\n\r\n    const getEnclosure = () => {\r\n        axios\r\n            .get(`https://zoo-backend-test.herokuapp.com/locations/by_id`, {\r\n                params: { location: match.params.id },\r\n            })\r\n            .then((res) => {\r\n                console.log(\"Enclosure: \", res);\r\n                setEnclosure(res.data[0]);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const handleDeleteAnimal = () => {\r\n        axios\r\n            .delete(`https://zoo-backend-test.herokuapp.com/animals/delete/${currentAnimal.animal_id}`)\r\n            .then((res) => {\r\n                console.log(res);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const openDeleteDialog = (animal) => {\r\n        setCurretAnimal(animal);\r\n        setDeleteDialog(true);\r\n        console.log(animal);\r\n    };\r\n\r\n    const closeDeleteDialog = () => {\r\n        setDeleteDialog(false);\r\n    };\r\n    const getAnimals = () => {\r\n        axios\r\n            .get(`https://zoo-backend-test.herokuapp.com/animals/list_by_enclosure/`, {\r\n                params: { location: match.params.id },\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n                setAnimals(res.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEnclosure();\r\n        getAnimals();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n            {loading ? (\r\n                <LinearProgress color=\"primary\" />\r\n            ) : (\r\n                    <>\r\n                        {animals.length > 0 ? (\r\n                            <>\r\n                                <Typography>{`Animals in ${enclosure.location_name} Enclosure`}</Typography>\r\n                                <TableContainer\r\n                                    component={Paper}\r\n                                    style={{ width: 800, paddingTop: \"10px\" }}>\r\n                                    <Table aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Name </TableCell>\r\n                                                <TableCell align=\"right\">Species</TableCell>\r\n                                                <TableCell align=\"right\">Date of Birth</TableCell>\r\n                                                <TableCell align=\"right\">Date Arrived</TableCell>\r\n\r\n                                                {user.role == \"Employee\" ? (\r\n                                                    <TableCell align=\"right\">Health Status</TableCell>\r\n                                                ) : null}\r\n                                                {user.role == \"Employee\" ? (\r\n                                                    <TableCell align=\"right\">Actions</TableCell>\r\n                                                ) : null}\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {animals.map((animal) => (\r\n                                                <TableRow key={animal.animal_id}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {animal.animal_name}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {animal.species_name}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">{animal.birth_date.toString().split(\"T\")[0]}</TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {animal.date_arrived.toString().split(\"T\")[0]}\r\n\r\n                                                    </TableCell>\r\n                                                    {user.role == \"Employee\" ? (\r\n                                                        <TableCell align=\"right\">\r\n                                                            {animal.health_status}\r\n                                                        </TableCell>) : null}\r\n                                                    {user.role == \"Employee\" ? (\r\n                                                        <TableCell align=\"right\">\r\n                                                            <Button\r\n                                                                variant=\"outlined\"\r\n                                                                onClick={() => {\r\n                                                                    handleModalOpen(animal);\r\n                                                                }}>\r\n                                                                Edit\r\n                            </Button>\r\n                                                            <Button\r\n                                                                variant=\"outlined\"\r\n                                                                onClick={() => {\r\n                                                                    openDeleteDialog(animal);\r\n                                                                }}>\r\n                                                                Delete\r\n                                </Button>\r\n                                                        </TableCell>\r\n                                                    ) : null}\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n\r\n                                {/* Modal for changing health status */}\r\n                                <div>\r\n                                    <Dialog open={openDialog}>\r\n                                        <DialogTitle>\r\n                                            Change the Health of {currentAnimal.animal_name}\r\n                                        </DialogTitle>\r\n                                        <DialogContent>\r\n                                            <Select\r\n                                                id=\"health_status\"\r\n                                                value={currentAnimal.health_status}\r\n                                                onChange={handleHealthStatusChange}>\r\n                                                <MenuItem value={\"Healthy\"}>Healthy</MenuItem>\r\n                                                <MenuItem value={\"Sick\"}>Sick</MenuItem>\r\n                                                <MenuItem value={\"Deceased\"}>Deceased</MenuItem>\r\n                                            </Select>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                            <Button\r\n                                                onClick={handleSave}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\">\r\n                                                Save\r\n                    </Button>\r\n                                            <Button\r\n                                                onClick={handleCancel}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\">\r\n                                                CANCEL\r\n                    </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Dialog open={deleteDialog} onClose={closeDeleteDialog}>\r\n                                        {/* <DialogTitle>Delete Employee</DialogTitle> */}\r\n                                        <DialogContent>\r\n                                            <Grid\r\n                                                container\r\n                                                spacing={1}\r\n                                                direction=\"column\"\r\n                                                className={classes.root}>\r\n                                                <Typography className={classes.formTitle}>\r\n                                                    {`Are you sure you want to remove ${currentAnimal.animal_name}`}\r\n                                                </Typography>\r\n                                                <Grid item xs={12}></Grid>\r\n                                                <Grid item xs={12}></Grid>\r\n                                            </Grid>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                            <Button\r\n                                                onClick={handleDeleteAnimal}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\">\r\n                                                YES\r\n                    </Button>\r\n                                            <Button\r\n                                                onClick={closeDeleteDialog}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\">\r\n                                                NO\r\n                    </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                                <Typography style={{ padding: \"10px\" }}>No Animals</Typography>\r\n                            )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnclosureDetailed;\r\n","import React, { useContext } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n// styling should change a little bit\r\nfunction Navbar() {\r\n  const { user, logout } = useContext(UserContext);\r\n\r\n  let { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const goBackToHomePage = () => {\r\n    let path = \"/\";\r\n    history.push(path);\r\n  };\r\n\r\n  const goToLogInPage = () => {\r\n    let path = \"/login\";\r\n    history.push(path);\r\n  };\r\n\r\n  const goToSignUpPage = () => {\r\n    let path = \"/create\";\r\n    history.push(path);\r\n  };\r\n\r\n  // needs to go to account page/purchase history when it's created.\r\n  const goToAccountPage = () => {\r\n    let path = \"/history\";\r\n    history.push(path);\r\n  };\r\n\r\n  const goToTicketPage = (role) => {\r\n    if (role) {\r\n      let path = \"/ticket\";\r\n      history.push(path);\r\n    }\r\n  };\r\n\r\n  const goToGiftShop = (role) => {\r\n    if (role) {\r\n      let path = \"/giftshops\";\r\n      history.push(path);\r\n    }\r\n  };\r\n\r\n  const goToDashboard = (role) => {\r\n    if (role == \"Admin\") {\r\n      history.push(\"/admin_dashboard\");\r\n    } else if (role == \"Employee\") {\r\n      history.push(\"/employee_dashboard\");\r\n    } else {\r\n      history.push(\"/user_dashboard\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\" style={{ padding: 0 }}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={goBackToHomePage}>\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Better Houston Zoo</Typography>\r\n          {!user.auth && (\r\n            <div>\r\n              <Button onClick={goToLogInPage}>Log in</Button>\r\n              <Button onClick={goToSignUpPage}>Sign up</Button>\r\n            </div>\r\n          )}\r\n\r\n          {user.auth && (\r\n            <div>\r\n              <Button>Welcome, {user.name}</Button>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n                onClick={goToAccountPage}>\r\n                <AccountCircleIcon />\r\n              </IconButton>\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  history.push(\"/\");\r\n                  logout();\r\n                }}>\r\n                Sign out\r\n              </Button>\r\n              {user.auth ? (\r\n                <>\r\n                  {user.role === \"Admin\" ? (\r\n                    <Link href={`/admin_dashboard`}>\r\n                      <Button>Dash Board</Button>\r\n                    </Link>\r\n                  ) : null}\r\n                  {user.role === \"Employee\" ? (\r\n                    <>\r\n                      <Link href={`/employee_dashboard`}>\r\n                        <Button>Dash Board</Button>\r\n                      </Link>\r\n                      <Link href={`/messages`}>\r\n                        <Button>Messages</Button>\r\n                      </Link>\r\n                    </>\r\n                  ) : null}\r\n                  {user.role === \"Customer\" ? (\r\n                    <Link href={`/user_dashboard`}>\r\n                      <Button>Dash Board</Button>\r\n                    </Link>\r\n                  ) : null}\r\n                </>\r\n              ) : null}\r\n\r\n              {user.auth ? (\r\n                <>\r\n                  {user.role === \"Customer\" ? (\r\n                    <Link href={`/history`}>\r\n                      <Button>Purchase History</Button>\r\n                    </Link>\r\n                  ) : null}\r\n                  \r\n                    <Link href={`/giftshops`}>\r\n                      <Button>Gift Shop</Button>\r\n                    </Link>\r\n                  \r\n                  {user.role === \"Customer\" ? (\r\n                    <Link href={`/ticket`}>\r\n                      <Button>Buy Tickets</Button>\r\n                    </Link>\r\n                  ) : null}\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    ListItemIcon,\r\n    Typography,\r\n    Grid,\r\n    Chip,\r\n    ListItemText,\r\n    LinearProgress,\r\n    Paper,\r\n    Modal,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Select,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst EnclosureDetailed = ({ match }) => {\r\n    const { user } = useContext(UserContext);\r\n    let id = user.userID;\r\n\r\n    let history = useHistory();\r\n\r\n    //Get purchase history.\r\n    const [purchases, setPurchases] = useState([]);\r\n\r\n    const getPurchases = () => {\r\n        axios\r\n            .get(`https://zoo-backend-test.herokuapp.com/purchaseHistory/history`, {\r\n                params: { userID: id },\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n                setPurchases(res.data);\r\n                // setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPurchases();\r\n    }, []);\r\n\r\n    console.log(purchases); \r\n\r\n    return (\r\n        <div style={{ padding: \"10px\" }}>\r\n             \r\n                    <>\r\n                        {purchases.length > 0 ? (\r\n                            <>\r\n                                <Typography>{`Purchase History`}</Typography>\r\n                                <TableContainer\r\n                                    component={Paper}\r\n                                    style={{ width: 800, paddingTop: \"10px\" }}>\r\n                                    <Table aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Name </TableCell>\r\n                                                <TableCell align=\"right\">Purchase Date</TableCell>\r\n                                                \r\n                                                <TableCell align=\"right\">Quantity</TableCell>\r\n                                                <TableCell align = \"right\">Total Cost</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {purchases.map((purchase) => (\r\n                                                <TableRow key={purchase.transaction_id}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {purchase.product_name}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                    {purchase.purchase_time.toString().split(\"T\")[0]}\r\n                                                    </TableCell>\r\n                                                    \r\n                                                    <TableCell align=\"right\">{purchase.quantity_purchased}</TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {\"$\" + purchase.total_purchase_cost}\r\n\r\n                                                    </TableCell>\r\n                                                    \r\n\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </>\r\n                        ) : (\r\n                                <Typography style={{ padding: \"10px\" }}>No Purchases</Typography>\r\n                            )}\r\n                    </>\r\n                \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnclosureDetailed;\r\n","import React, { useState, useContext } from \"react\"; \r\nimport { UserContext } from \"./UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction GiftShop(){\r\n    const { user } = useContext(UserContext); \r\n\r\n    return <>\r\n        <div className = 'primary'>\r\n            <div className = 'primary-container'>\r\n                <h4 className = 'title'> Zoovenirs </h4>\r\n            </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"container\">\r\n            <div className=\"multiline\"></div>\r\n                <div> Some Item </div>\r\n                    <button> Purchase </button>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default GiftShop","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport axios from \"axios\";\r\nimport { base_url } from \"../config\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { images_path } from \"../config\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  listCategory: {\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  divider: {\r\n    height: \"5px\",\r\n    backgroundColor: \"green\",\r\n    width: \"100%\",\r\n  },\r\n  grid: {\r\n    padding: \"10px\",\r\n  },\r\n});\r\n\r\nconst cardStyles = makeStyles({\r\n  root: {\r\n    width: \"280px\",\r\n    // height: \"300px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst GiftShopCard = ({ name, description, image, id }) => {\r\n  let { url } = useRouteMatch();\r\n  const classes = cardStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <div>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={image}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </div>\r\n        <div>\r\n          <Link style={{ textDecoration: \"none\" }} href={`${url}/${id}`}>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GiftShopList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [giftShops, setGiftShops] = useState([]);\r\n\r\n  const getAllGiftShops = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations/all_gift_shops`)\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        // console.log(res);\r\n        // const with_image = res.data.map((e) => {\r\n        //   return {\r\n        //     ...e,\r\n        //     location_img: URL.createObjectURL(new Blob(e.image.data, {type: \"application/zip\"}),\r\n        //   };\r\n        // });\r\n        console.log(res.data);\r\n        setGiftShops(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllGiftShops();\r\n    // console.log(enclosures);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.categoryContainer}>\r\n      {/* <Navbar></Navbar> */}\r\n      <Typography className={classes.listCategory}>Gift Shops</Typography>\r\n      <Grid direction=\"row\" container spacing={2} className={classes.grid}>\r\n        {giftShops.map((shop, i) => {\r\n          return (\r\n            <Grid item key={i}>\r\n              <GiftShopCard\r\n                name={shop.location_name}\r\n                image={`/uploads/${shop.location_image}`}\r\n                id={shop.location_id}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GiftShopList;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  Input,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\nimport { CloudQueueRounded, LensOutlined } from \"@material-ui/icons\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst GiftShopDetailed = ({ match }) => {\r\n  // console.log(match);\r\n\r\n  let quantities = Array.from({ length: 10 }, (_, index) => {\r\n    return {\r\n      value: index + 1,\r\n    };\r\n  });\r\n\r\n  console.log(quantities);\r\n  const classes = useStyles();\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const [openDialogedit, setOpenDialogedit] = useState(false);\r\n\r\n  const [openDialogRemove, setOpenDialogRemove] = useState(false);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n\r\n  //Modal\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [alertError, setAlertError] = useState(null);\r\n\r\n  const handleModalOpen = (product) => {\r\n    // console.log(\"Animal\", animal);\r\n    setCurrentProduct(product);\r\n    setOpenDialog(true);\r\n  };\r\n  const handleModalOpenEdit = (product) => {\r\n    // console.log(\"Animal\", animal);\r\n    setCurrentProduct(product);\r\n    setOpenDialogedit(true);\r\n  };\r\n\r\n  const handleModalRemove = (product) => {\r\n    setCurrentProduct(product);\r\n    setOpenDialogRemove(true);\r\n  };\r\n\r\n  const handleModalCloseRemove = () => {\r\n    setOpenDialogRemove(false);\r\n  };\r\n\r\n  const handleModalCloseEdit = () => {\r\n    setOpenDialogedit(false);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setOpenDialogedit(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleHealthStatusChange = (e) => {\r\n    setCurrentProduct({\r\n      ...currentProduct,\r\n      stock_amount: e.target.value,\r\n    });\r\n  };\r\n\r\n  // const [errors, setErrors] = useState({\r\n  //   email: \"\",\r\n  //   password: \"\",\r\n  // });\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.stock_amount) {\r\n      errors.stock_amount = \"Required\";\r\n    } //else if (\r\n    //   !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    // ) {\r\n    //   errors.email = \"Invalid email address\";\r\n    // } else if (values.email.length > 25) {\r\n    //   errors.email = \"Max 25 characters\";\r\n    // }\r\n    // if (values.password.length < 4) {\r\n    //   errors.password = \"Minimum 4 characters\";\r\n    // }\r\n    if (values.price == \"\") {\r\n      errors.price = \"Required\";\r\n    }\r\n    if (values.product_name == \"\") {\r\n      errors.product_name = \"Required\";\r\n    }\r\n\r\n    // if (values.worK_location == \"\") {\r\n    //   errors.work_location = \"Required\";\r\n    // }\r\n    return errors;\r\n  };\r\n\r\n  const handleCreateEmployee = (values) => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/merchandise/additem\", {\r\n        stock_amount: values.stock_amount,\r\n        price: values.price,\r\n        product_name: values.product_name,\r\n        location_sold: 24,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        console.log(\"Errors: \", err.response.data);\r\n        let errors_response = err.response.data.errors;\r\n        // let new_errors = { email: \"\", password: \"\" };\r\n        // if (Array.isArray(errors_response)) {\r\n        //   errors_response.forEach((error) => {\r\n        //     new_errors[error.param] = error.msg;\r\n        //   });\r\n        //   setErrors(new_errors);\r\n        // } else {\r\n        //   setAlertError(err.response.data.error);\r\n        // }\r\n      });\r\n  };\r\n\r\n  const closeAddDialog = () => {\r\n    setAddDialog(false);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      stock_amount: \"\",\r\n      price: \"\",\r\n      product_name: \"\",\r\n      location_sold: 24,\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleCreateEmployee(values);\r\n      setAddDialog(false);\r\n    },\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddDialog(true);\r\n  };\r\n\r\n  const handleRemove = (product_name) => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/merchandise/removeItem\", { product: product_name })\r\n      .then((res) => {\r\n        setOpenDialogRemove(false);\r\n        console.log(res);\r\n        window.location.reload(false);\r\n      })\r\n      .catch((err) => {\r\n        setOpenDialogRemove(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    axios\r\n      .put(\"https://zoo-backend-test.herokuapp.com/merchandise/change_stock\", currentProduct)\r\n      .then((res) => {\r\n        setOpenDialogedit(false);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setOpenDialogedit(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Get animals in the Enclosure.\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const [giftShop, setGiftShop] = useState({});\r\n\r\n  const getGiftShop = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations/by_id`, {\r\n        params: { location: match.params.id },\r\n      })\r\n      .then((res) => {\r\n        setGiftShop(res.data[0]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getProducts = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/merchandise/all_products/`, {\r\n        params: { location: match.params.id },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        let products = res.data.map((each) => {\r\n          return {\r\n            ...each,\r\n            quantity_selected: 0,\r\n            amount_due: 0,\r\n          };\r\n        });\r\n        setProducts(products);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSelectQuantity = (e, product) => {\r\n    const index = products.findIndex((elem) => elem.item_id == product.item_id);\r\n    let newProducts = [...products];\r\n    newProducts[index] = {\r\n      ...newProducts[index],\r\n      quantity_selected: e.target.value,\r\n      amount_due: e.target.value * product.price,\r\n    };\r\n    setProducts(newProducts);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/merchandise/buy\", {\r\n        user_id: user.userID,\r\n        ...currentProduct,\r\n      })\r\n      .then((res) => {\r\n        setOpenDialog(false);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setOpenDialog(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGiftShop();\r\n    getProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      {loading ? (\r\n        <LinearProgress color=\"primary\" />\r\n      ) : (\r\n        <>\r\n          {products.length > 0 ? (\r\n            <>\r\n              <Typography>{`Products in ${giftShop.location_name} Enclosure`}</Typography>\r\n\r\n              {user.role == \"Admin\" ? (\r\n                <Grid item>\r\n                  <Button variant=\"contained\" onClick={openAddDialog}>\r\n                    Add Item\r\n                  </Button>\r\n                </Grid>\r\n              ) : null}\r\n\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ width: 800, paddingTop: \"10px\" }}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Product Name </TableCell>\r\n                      <TableCell align=\"right\">Product Stock</TableCell>\r\n                      <TableCell align=\"right\">Product Price</TableCell>\r\n\r\n                      {user.role == \"Customer\" ? (\r\n                        <TableCell align=\"right\">Select Quantity</TableCell>\r\n                      ) : null}\r\n\r\n                      {user.role == \"Customer\" ? (\r\n                        <TableCell align=\"right\">Actions</TableCell>\r\n                      ) : null}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {products.map((product) => (\r\n                      <TableRow key={product.product_id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {product.product_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {product.stock_amount}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {\"$\" + product.price}\r\n                        </TableCell>\r\n\r\n                        {user.role == \"Customer\" ? (\r\n                          <TableCell align=\"right\">\r\n                            <Select\r\n                              name=\"quantity_selected\"\r\n                              style={{ width: \"75px\" }}\r\n                              value={product.quantity_selected}\r\n                              onChange={(e) => {\r\n                                handleSelectQuantity(e, product);\r\n                              }}>\r\n                              {quantities.map((q) => {\r\n                                return (\r\n                                  <MenuItem key={q.value} value={q.value}>\r\n                                    {q.value}\r\n                                  </MenuItem>\r\n                                );\r\n                              })}\r\n                            </Select>\r\n                          </TableCell>\r\n                        ) : null}\r\n\r\n                        {user.role == \"Customer\" ? (\r\n                          <TableCell align=\"right\">\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              disabled={product.quantity_selected == 0}\r\n                              onClick={() => {\r\n                                handleModalOpen(product);\r\n                              }}>\r\n                              Buy\r\n                            </Button>\r\n                          </TableCell>\r\n                        ) : null}\r\n                        {user.role == \"Admin\" ? (\r\n                          <TableCell align=\"right\">\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              onClick={() => {\r\n                                handleModalOpenEdit(product);\r\n                              }}>\r\n                              Edit Stock\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              onClick={() => {\r\n                                handleModalRemove(product);\r\n                              }}>\r\n                              REMOVE\r\n                            </Button>\r\n                          </TableCell>\r\n                        ) : null}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n              {/* Modal for changing health status */}\r\n              <div>\r\n                <Dialog open={openDialog}>\r\n                  <DialogTitle>Transaction Details</DialogTitle>\r\n                  <DialogContent>\r\n                    <Typography>{`The Total Cost of ${currentProduct.product_name} is $${currentProduct.amount_due}`}</Typography>\r\n                    <Typography>Are you sure you want to buy?</Typography>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleConfirm}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CONFIRM\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleCancel}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              {/* Modal for adding new item to gift shop */}\r\n              <div>\r\n                <Dialog open={addDialog} onClose={closeAddDialog}>\r\n                  <DialogTitle>Add New Item</DialogTitle>\r\n                  <DialogContent>\r\n                    <Grid\r\n                      container\r\n                      spacing={1}\r\n                      direction=\"column\"\r\n                      className={classes.root}>\r\n                      <Typography className={classes.formTitle}>\r\n                        Add New Item\r\n                      </Typography>\r\n                      {alertError ? (\r\n                        <Alert\r\n                          severity=\"error\"\r\n                          style={{ paddingBottom: \"10px\" }}>\r\n                          {alertError}\r\n                        </Alert>\r\n                      ) : null}\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          label=\"Stock Amount\"\r\n                          id=\"stock_amount\"\r\n                          onChange={formik.handleChange}\r\n                          name=\"stock_amount\"\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"100%\" }}\r\n                          // error={formik.errors.full_name}\r\n                          // helperText={\r\n                          //   formik.errors.full_name !== \"\"\r\n                          //     ? formik.errors.full_name\r\n                          //     : \"\"\r\n                          // }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          label=\"Price\"\r\n                          id=\"email\"\r\n                          onChange={formik.handleChange}\r\n                          name=\"price\"\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"100%\" }}\r\n                          // error={formik.errors.email}\r\n                          // helperText={\r\n                          //   formik.errors.email !== \"\"\r\n                          //     ? formik.errors.email\r\n                          //     : \"\"\r\n                          // }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          label=\"Product Name\"\r\n                          id=\"product_name\"\r\n                          name=\"product_name\"\r\n                          onChange={formik.handleChange}\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"100%\" }}\r\n                          // error={formik.errors.password}\r\n                          // helperText={\r\n                          //   formik.errors.password !== \"\"\r\n                          //     ? formik.errors.password\r\n                          //     : \"\"\r\n                          // }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={formik.handleSubmit}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={closeAddDialog}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              {/* Modal for removing item */}\r\n              <div>\r\n                <Dialog open={openDialogRemove}>\r\n                  <DialogTitle>\r\n                    Remove {currentProduct.product_name}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Typography className={classes.formTitle}>\r\n                      Are you sure?\r\n                    </Typography>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={() => {\r\n                        handleRemove(currentProduct.product_name);\r\n                      }}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleModalCloseRemove}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              {/* Modal for changing stock amount */}\r\n              <div>\r\n                <Dialog open={openDialogedit}>\r\n                  <DialogTitle>\r\n                    Change the Stock of {currentProduct.product_name}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <InputLabel htmlFor=\"amount_spent\">\r\n                      Increase by how much\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"stock_amount\"\r\n                      value={currentProduct.stock_amount}\r\n                      onChange={handleHealthStatusChange}></Input>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleSave}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleCancelEdit}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Typography style={{ padding: \"10px\" }}>No Products</Typography>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GiftShopDetailed;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  FormHelperText,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\nimport { SubdirectoryArrowLeftSharp } from \"@material-ui/icons\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst AdminEmployeeSection = () => {\r\n  const classes = useStyles();\r\n\r\n  let history = useHistory();\r\n  const { login } = useContext(UserContext);\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const [alertError, setAlertError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [currentEmployee, setCurrentEmployee] = useState({\r\n    full_name: \"\",\r\n    work_location: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  const getAllEmployees = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/employees/all`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setEmployees(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getLocations = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLocations(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n    getLocations();\r\n  }, []);\r\n\r\n  //Edit Dialog functions.\r\n  const openEditDialog = (employee) => {\r\n    setCurrentEmployee(employee);\r\n    setEditDialog(true);\r\n  };\r\n\r\n  const handleWorkLocationChange = (e) => {\r\n    let newEmployee = {\r\n      ...currentEmployee,\r\n      work_location: e.target.value,\r\n    };\r\n    setCurrentEmployee(newEmployee);\r\n  };\r\n\r\n  const handleEditConfirm = () => {\r\n    axios\r\n      .put(\"https://zoo-backend-test.herokuapp.com/employees/change_work_location\", {\r\n        new_location: currentEmployee.work_location,\r\n        employee_id: currentEmployee.employee_id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setEditDialog(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditDialog(false);\r\n  };\r\n\r\n  const closeEditDialog = () => {\r\n    setEditDialog(false);\r\n  };\r\n\r\n  //Adding new Employee functions.\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    } else if (values.email.length > 25) {\r\n      errors.email = \"Max 25 characters\";\r\n    }\r\n    if (values.password.length < 4) {\r\n      errors.password = \"Minimum 4 characters\";\r\n    }\r\n    if (values.full_name == \"\") {\r\n      errors.full_name = \"Required\";\r\n    }\r\n    if (values.worK_location == \"\") {\r\n      errors.work_location = \"Required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleCreateEmployee = (values) => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/signup\", {\r\n        full_name: values.full_name,\r\n        email: values.email,\r\n        password: values.password,\r\n        role_id: \"Employee\",\r\n        work_location: values.work_location,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        console.log(\"Errors: \", err.response.data);\r\n        let errors_response = err.response.data.errors;\r\n        let new_errors = { email: \"\", password: \"\" };\r\n        if (Array.isArray(errors_response)) {\r\n          errors_response.forEach((error) => {\r\n            new_errors[error.param] = error.msg;\r\n          });\r\n          setErrors(new_errors);\r\n        } else {\r\n          setAlertError(err.response.data.error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      full_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      work_location: 0,\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleCreateEmployee(values);\r\n    },\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddDialog(true);\r\n  };\r\n\r\n  const closeAddDialog = () => {\r\n    setAddDialog(false);\r\n  };\r\n\r\n  const openDeleteDialog = (employee) => {\r\n    setCurrentEmployee(employee);\r\n    setDeleteDialog(true);\r\n    console.log(employee);\r\n  };\r\n\r\n  const closeDeleteDialog = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n  const handleDeleteEmployee = () => {\r\n    axios\r\n      .delete(`https://zoo-backend-test.herokuapp.com/employees/delete/${currentEmployee.employee_id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // console.log(currentEmployee);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      {loading ? (\r\n        <LinearProgress color=\"primary\" />\r\n      ) : (\r\n        <>\r\n          <Typography>{`All Employees`}</Typography>\r\n          <Button variant=\"contained\" onClick={openAddDialog}>\r\n            Add Employee\r\n          </Button>\r\n          {employees.length > 0 && locations.length > 0 ? (\r\n            <>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"flex-start\"\r\n                spacing={2}>\r\n                <Grid item></Grid>\r\n                <Grid item>\r\n                  <TableContainer\r\n                    component={Paper}\r\n                    style={{ width: 800, paddingTop: \"10px\" }}>\r\n                    <Table aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Name </TableCell>\r\n                          <TableCell align=\"right\">Job Title</TableCell>\r\n                          <TableCell align=\"right\">Wage</TableCell>\r\n                          <TableCell align=\"right\">Work Location</TableCell>\r\n                          {user.role == \"Admin\" ? (\r\n                            <TableCell align=\"right\">Actions</TableCell>\r\n                          ) : null}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {employees.map((employee) => (\r\n                          <TableRow key={employee.employee_id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {employee.full_name}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {employee.job_title}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{employee.wage}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {employee.location_name}\r\n                            </TableCell>\r\n                            {user.role == \"Admin\" ? (\r\n                              <TableCell align=\"right\">\r\n                                <Button\r\n                                  style={{ marginRight: \"10px\" }}\r\n                                  variant=\"contained\"\r\n                                  onClick={() => {\r\n                                    openEditDialog(employee);\r\n                                  }}>\r\n                                  Edit\r\n                                </Button>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  onClick={() => {\r\n                                    openDeleteDialog(employee);\r\n                                  }}>\r\n                                  Delete\r\n                                </Button>\r\n                              </TableCell>\r\n                            ) : null}\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {/* Modal for changing work Location */}\r\n              <div>\r\n                <Dialog open={editDialog} onClose={closeEditDialog}>\r\n                  <DialogTitle>\r\n                    Change the Work location of {currentEmployee.full_name}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Select\r\n                      id=\"health_status\"\r\n                      value={currentEmployee.health_status}\r\n                      onChange={handleWorkLocationChange}>\r\n                      {locations.map((location) => {\r\n                        return (\r\n                          <MenuItem\r\n                            value={location.location_id}\r\n                            key={location.location_id}>\r\n                            {location.location_name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleEditConfirm}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleEditCancel}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              {/* Modal for adding new employee */}\r\n              <div>\r\n                <Dialog open={addDialog} onClose={closeAddDialog}>\r\n                  <DialogTitle>Add New Employee</DialogTitle>\r\n                  <DialogContent>\r\n                    <Grid\r\n                      container\r\n                      spacing={1}\r\n                      direction=\"column\"\r\n                      className={classes.root}>\r\n                      <Typography className={classes.formTitle}>\r\n                        Add New Employee\r\n                      </Typography>\r\n                      {alertError ? (\r\n                        <Alert\r\n                          severity=\"error\"\r\n                          style={{ paddingBottom: \"10px\" }}>\r\n                          {alertError}\r\n                        </Alert>\r\n                      ) : null}\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          label=\"Full Name\"\r\n                          id=\"full_name\"\r\n                          onChange={formik.handleChange}\r\n                          name=\"full_name\"\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"100%\" }}\r\n                          error={formik.errors.full_name}\r\n                          helperText={\r\n                            formik.errors.full_name !== \"\"\r\n                              ? formik.errors.full_name\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          label=\"Email\"\r\n                          id=\"email\"\r\n                          onChange={formik.handleChange}\r\n                          name=\"email\"\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"100%\" }}\r\n                          error={formik.errors.email}\r\n                          helperText={\r\n                            formik.errors.email !== \"\"\r\n                              ? formik.errors.email\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          label=\"Password\"\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          onChange={formik.handleChange}\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"100%\" }}\r\n                          error={formik.errors.password}\r\n                          helperText={\r\n                            formik.errors.password !== \"\"\r\n                              ? formik.errors.password\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <InputLabel>Work Location</InputLabel>\r\n                        <Select\r\n                          id=\"work_location\"\r\n                          style={{ width: \"100%\" }}\r\n                          name=\"work_location\"\r\n                          onChange={formik.handleChange}>\r\n                          {locations.map((location) => {\r\n                            return (\r\n                              <MenuItem\r\n                                value={location.location_id}\r\n                                key={location.location_id}>\r\n                                {location.location_name}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                        {formik.errors.work_location !== \"\" ? (\r\n                          <FormHelperText>\r\n                            {formik.errors.work_location}\r\n                          </FormHelperText>\r\n                        ) : null}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={formik.handleSubmit}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={closeAddDialog}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n\r\n              {/* Modal for deleting employee */}\r\n              <div>\r\n                <Dialog open={deleteDialog} onClose={closeDeleteDialog}>\r\n                  {/* <DialogTitle>Delete Employee</DialogTitle> */}\r\n                  <DialogContent>\r\n                    <Grid\r\n                      container\r\n                      spacing={1}\r\n                      direction=\"column\"\r\n                      className={classes.root}>\r\n                      <Typography className={classes.formTitle}>\r\n                        {`Are you sure you want to remove ${currentEmployee.full_name}`}\r\n                      </Typography>\r\n                      <Grid item xs={12}></Grid>\r\n                      <Grid item xs={12}></Grid>\r\n                    </Grid>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleDeleteEmployee}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      YES\r\n                    </Button>\r\n                    <Button\r\n                      onClick={closeDeleteDialog}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      NO\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Typography style={{ padding: \"10px\" }}>No Animals</Typography>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminEmployeeSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  OutlinedInput,\r\n  Grid,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport clsx from \"clsx\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst theStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"900px\",\r\n    variant: \"contained\",\r\n    position: \"right\",\r\n    border: \"3px solid #4A90E2\",\r\n    borderColor: \"gray\",\r\n    color: \"black\",\r\n    align: \"right\",\r\n    minWidth: 50,\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(4),\r\n      width: \"10ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst AdminRevenueSection = () => {\r\n  const [purchaseHistory, setPurchaseHistory] = useState([]);\r\n  const [total, setTotal] = useState();\r\n\r\n  const reportForm = useFormik({\r\n    initialValues: {\r\n      product_name: \"\",\r\n      from_date: \"\",\r\n      to_date: \"\",\r\n      shop: \"\",\r\n      amount_spent: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      axios\r\n        .post(\"https://zoo-backend-test.herokuapp.com/login/admin_report\", values)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setPurchaseHistory(res.data.purchase_history);\r\n          //   setTotal(res.data.total);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  const [shops, setShops] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://zoo-backend-test.herokuapp.com/locations/all_shops\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setShops(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const classes = theStyles();\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <form>\r\n        <div className={classes.root} noValidate autoComplete=\"off\">\r\n          <div style={{ paddingTop: \"10px\" }}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{\r\n                marginBottom: \"20px\",\r\n                width: \"40%\",\r\n                marginRight: \"10px\",\r\n              }}>\r\n              <InputLabel htmlFor=\"product-name\">Product Name</InputLabel>\r\n              <OutlinedInput\r\n                id=\"product-name\"\r\n                onChange={reportForm.handleChange}\r\n                name=\"product_name\"\r\n                // label=\"product)name\"\r\n              />\r\n            </FormControl>\r\n            <FormControl\r\n              style={{\r\n                marginBottom: \"20px\",\r\n                width: \"40%\",\r\n                marginRight: \"10px\",\r\n              }}\r\n              className={clsx(classes.margin, classes.textField)}\r\n              variant=\"outlined\">\r\n              <InputLabel id=\"shops\">Shops</InputLabel>\r\n              <Select\r\n                labelId=\"shops\"\r\n                onChange={reportForm.handleChange}\r\n                name=\"shop\"\r\n                className={classes.select}>\r\n                {shops.map((shop, index) => (\r\n                  <MenuItem key={index} value={shop.location_id}>\r\n                    {shop.location_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <FormControl style={{ marginBottom: \"20px\", marginRight: \"40px\" }}>\r\n            <InputLabel id=\"from_date\" shrink>\r\n              Date From:\r\n            </InputLabel>\r\n            <Input\r\n              labelId=\"activity-from\"\r\n              name=\"from_date\"\r\n              type=\"date\"\r\n              onChange={reportForm.handleChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel id=\"to_date\" shrink>\r\n              Date To:\r\n            </InputLabel>\r\n            <Input\r\n              labelId=\"activity-to\"\r\n              name=\"to_date\"\r\n              type=\"date\"\r\n              onChange={reportForm.handleChange}\r\n            />\r\n          </FormControl>\r\n          <Button variant=\"contained\" onClick={reportForm.handleSubmit}>\r\n            Get Report\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      <Grid container direction=\"column\" alignItems=\"flex-start\" spacing={2}>\r\n        <Grid item>\r\n          <TableContainer\r\n            component={Paper}\r\n            style={{ width: 800, paddingTop: \"10px\" }}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"right\">Transaction ID</TableCell>\r\n                  <TableCell align=\"right\">Product Name</TableCell>\r\n                  <TableCell align=\"right\">Location Sold</TableCell>\r\n                  <TableCell align=\"right\">Quantity Purchased</TableCell>\r\n                  <TableCell align=\"right\">Amount Spent</TableCell>\r\n                  <TableCell align=\"right\">Transaction Date</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {purchaseHistory.map((item) => (\r\n                  <TableRow key={item.transaction_id}>\r\n                    <TableCell align=\"right\">{item.transaction_id}</TableCell>\r\n                    <TableCell align=\"right\">{item.product_name}</TableCell>\r\n                    <TableCell align=\"right\">{item.location_name}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {item.quantity_purchased}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {item.total_purchase_cost}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {item.purchase_time.toString().split(\"T\")[0]}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRevenueSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  FormHelperText,\r\n  InputLabel,\r\n  Tabs,\r\n  Tab,\r\n} from \"@material-ui/core\";\r\n\r\nimport AdminEmployeeSection from \"./AdminEmployeeSection\";\r\nimport AdminRevenueSection from \"./AdminRevenueSection\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleTabChange = (e, value) => {\r\n    setValue(value);\r\n  };\r\n\r\n  const TabPanel = (props) => {\r\n    const { children, value, index } = props;\r\n    return <>{value === index && { children }}</>;\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <Tabs value={value} onChange={handleTabChange}>\r\n        <Tab label=\"Employees\" />\r\n        <Tab label=\"Revenue\" />\r\n      </Tabs>\r\n      {value === 0 && <AdminEmployeeSection />}\r\n      {value === 1 && <AdminRevenueSection />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  // TextField,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Grid,\r\n  FormHelperText,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  TableHead,\r\n  Table,\r\n  TableContainer,\r\n  Paper,\r\n  // Modal,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\n// import { base_url } from \"../config\";\r\nimport { useFormik } from \"formik\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst theStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"900px\",\r\n    variant: \"contained\",\r\n    position: \"right\",\r\n    border: \"3px solid #4A90E2\",\r\n    borderColor: \"gray\",\r\n    color: \"black\",\r\n    align: \"right\",\r\n    minWidth: 50,\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(4),\r\n      width: \"10ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst UserDashboard = () => {\r\n  const classes = useStyles();\r\n  const { user } = useContext(UserContext);\r\n\r\n  //Get all the enclosure names:\r\n  const [enclosureNames, setEnclosureNames] = useState([]);\r\n  const [species, setSpecies] = useState([]);\r\n  const [animals, setAnimals] = useState([]);\r\n\r\n  const [animal, setAnimal] = useState({\r\n    date_arrived: null,\r\n    deceased_date: null,\r\n    birth_day: null,\r\n    location: \"\",\r\n    animal_name: \"\",\r\n  });\r\n\r\n  const getEnclosureNames = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations/all_shops`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        setEnclosureNames(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEnclosureNames();\r\n  }, []);\r\n\r\n  const [values, setValues] = useState({\r\n    investigator: \"\",\r\n    checked: true,\r\n    purchase: \"\",\r\n    enclosure: \"\",\r\n    animal: \"\",\r\n    customer: \"\",\r\n    dateFrom: \"\",\r\n    dateTo: \"\",\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  const handlecheck = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const validate = (values) => {\r\n    console.log(\"testing...\");\r\n    let errors = {};\r\n    if (\r\n      values.amount_spent.length > 0 &&\r\n      !Number.isInteger(Number(values.amount_spent))\r\n    ) {\r\n      errors.amount_spent = \"Must be a valid number\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const reportForm = useFormik({\r\n    initialValues: {\r\n      date_from: \"\",\r\n      date_to: \"\",\r\n      shop_name: \"\",\r\n      amount_spent: \"\",\r\n      customer_id: user.userID,\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n        axios\r\n          .post('https://zoo-backend-test.herokuapp.com/login/customer_report', values)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            setAnimals(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n    },\r\n  });\r\n  const classy = theStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classy.root} noValidate autoComplete=\"off\">\r\n        <div>\r\n          <Typography\r\n            style={{\r\n              align: \"middle\",\r\n              fontSize: \"32px\",\r\n            }}>\r\n            Report Request\r\n          </Typography>\r\n          <Typography\r\n            align=\"left\"\r\n            style={{\r\n              fontSize: \"22px\",\r\n              fontWeight: \"bold\",\r\n            }}>\r\n            \r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <FormControl\r\n            spacing={2}\r\n            style={{ marginBottom: \"20px\", width: \"40%\" }}\r\n            className={clsx(classy.margin, classy.textField)}\r\n            variant=\"outlined\">\r\n            \r\n            \r\n          </FormControl>\r\n        </div>\r\n\r\n        <Typography\r\n          align=\"left\"\r\n          style={{\r\n            fontSize: \"18px\",\r\n          }}>\r\n          Select atleast one item:{\" \"}\r\n        </Typography>\r\n        <div>\r\n          <FormControl>\r\n            <InputLabel id=\"shop_name\">Shop Name</InputLabel>\r\n            <Select\r\n              labelId=\"shop_name\"\r\n              onChange={reportForm.handleChange}\r\n              name=\"shop_name\"\r\n              error={reportForm.errors.shop_name}\r\n              className={classes.select}>\r\n              {enclosureNames.map((e, index) => (\r\n                <MenuItem key={index} value={e.location_id}>\r\n                  {e.location_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <FormHelperText className={classes.errMessage}>\r\n              {reportForm.errors.shop_name}\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            style={{ marginBottom: \"20px\", width: \"40%\" }}\r\n            className={clsx(classy.margin, classy.textField)}\r\n            variant=\"outlined\">\r\n            <InputLabel htmlFor=\"amount_spent\">\r\n              Purchases above this value\r\n            </InputLabel>\r\n            <Input\r\n              id=\"amount_spent\"\r\n              onChange={reportForm.handleChange}\r\n              name=\"amount_spent\"\r\n              error={reportForm.errors.amount_spent}\r\n            />\r\n            <FormHelperText style={{ color: \"red\" }}>\r\n              {reportForm.errors.amount_spent}\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n        <div></div>\r\n        <FormControl style={{ marginBottom: \"20px\", marginRight: \"40px\" }}>\r\n            <InputLabel id=\"date_from\" shrink>\r\n              Date From:\r\n            </InputLabel>\r\n            <Input\r\n              labelId=\"activity-from\"\r\n              name=\"date_from\"\r\n              type=\"date\"\r\n              onChange={reportForm.handleChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel id=\"date_to\" shrink>\r\n              Date To:\r\n            </InputLabel>\r\n            <Input\r\n              labelId=\"activity-to\"\r\n              name=\"date_to\"\r\n              type=\"date\"\r\n              onChange={reportForm.handleChange}\r\n            />\r\n          </FormControl>\r\n          <Button variant=\"contained\" onClick={reportForm.handleSubmit}>\r\n            Get Report\r\n          </Button>\r\n\r\n      </div>\r\n      \r\n\r\n      {/* Table to display the animals */}\r\n      <>\r\n        {\r\n          animals.length > 0 ? (\r\n            <>\r\n              <Typography>{`Report Result`}</Typography>\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ width: 800, paddingTop: \"10px\" }}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Location Bought </TableCell>\r\n                      <TableCell align=\"right\">Item(s) Purchased</TableCell>\r\n                      <TableCell align=\"right\">Amount Spent</TableCell>\r\n                      <TableCell align=\"right\">Date Purchased</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {animals.map((animal) => (\r\n                      <TableRow key={animal.customer_id}>\r\n                        \r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {animal.location_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.quantity_purchased + \" \" + animal.product_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {\"$\" + animal.total_purchase_cost}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.purchase_time.toString().split(\"T\")[0]}\r\n                        </TableCell>\r\n                    \r\n                        {/* <TableCell align=\"right\">\r\n                          {animal.health_status}\r\n                        </TableCell> */}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          ) : null\r\n          //   <Typography style={{ padding: \"10px\" }}>No Animals</Typography>\r\n        }\r\n      </>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { Typography, Snackbar, IconButton, Button } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport axios from \"axios\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { IndeterminateCheckBoxOutlined } from \"@material-ui/icons\";\r\n\r\nconst Messages = () => {\r\n  const { user } = useContext(UserContext);\r\n  const [messages, setMessages] = useState([]);\r\n  //   Get all messages for this user.\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/messages\", {\r\n        user_id: parseInt(user.userID),\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setMessages(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const deleteMessage = (message) => {\r\n    console.log(message);\r\n    axios\r\n      .delete(`https://zoo-backend-test.herokuapp.com/messages/delete/${message.message_id}`, message)\r\n      .then((res) => {\r\n        let new_messages = messages.filter(\r\n          (mes) => mes.message_id != message.message_id\r\n        );\r\n        console.log(\"New messages: \", new_messages);\r\n        setMessages(new_messages);\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {messages.length > 0 ? (\r\n        <div style={{ width: \"50%\" }}>\r\n          {messages.map((mes) => (\r\n            <Alert\r\n              key={mes.message_id}\r\n              onClose={() => {\r\n                deleteMessage(mes);\r\n              }}>\r\n              {mes.message}\r\n            </Alert>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <Typography>No Messages</Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Ticket from \"./components/Ticket\";\r\nimport EnclosureList from \"./components/EnclosureList\";\r\nimport CreateUser from \"./components/CreateUser\";\r\nimport UserLogin from \"./components/UserLogin\";\r\nimport EmployeeDashboard from \"./components/EmployeeDashboard\";\r\nimport EnclosureDetailed from \"./components/EnclosureDetailed\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport PurchaseHistory from \"./components/PurchaseHistory\";\r\nimport GiftShop from \"./components/GiftShop\";\r\nimport \"./App.css\";\r\nimport GiftShopList from \"./components/GiftShopList\";\r\nimport GiftShopDetailed from \"./components/GiftShopDetailed\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\nimport UserDashboard from \"./components/UserDashboard\";\r\nimport Messages from \"./components/Messages\";\r\n// NEED TO \"npm install\" @material-ui dependencies\r\n// npm install @material-ui/core\r\n// npm install @material-ui/pickers\r\n// npm install date-fns @date-io/date-fns@1\r\n// npm install --save moment\r\n// there may be other material uis too\r\n// there may be other material uis too\r\n\r\nfunction App() {\r\n  // to initialize session storage if not created yet\r\n  if (sessionStorage.getItem(\"auth\") === null) {\r\n    sessionStorage.setItem(\"auth\", false);\r\n  }\r\n\r\n  if (sessionStorage.getItem(\"username\") === null) {\r\n    sessionStorage.setItem(\"username\", \"guest\");\r\n  }\r\n\r\n  if (sessionStorage.getItem(\"role\") === null) {\r\n    sessionStorage.setItem(\"role\", null);\r\n  }\r\n\r\n  if (sessionStorage.getItem(\"userID\") === null) {\r\n    sessionStorage.setItem(\"userID\", null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* add your pages here  */}\r\n\r\n      <BrowserRouter>\r\n        <Navbar></Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/ticket\" component={Ticket} />\r\n          <Route exact path=\"/giftshops\" component={GiftShopList} />\r\n          <Route exact path=\"/giftshops/:id\" component={GiftShopDetailed} />\r\n          <Route exact path=\"/enclosure\" component={EnclosureList} />\r\n          <Route exact path=\"/enclosure/:id\" component={EnclosureDetailed} />\r\n          <Route exact path=\"/create\" component={CreateUser} />\r\n          <Route exact path=\"/login\" component={UserLogin} />\r\n          <Route\r\n            exact\r\n            path=\"/employee_dashboard\"\r\n            component={EmployeeDashboard}\r\n          />\r\n          <Route exact path=\"/admin_dashboard\" component={AdminDashboard} />\r\n          <Route exact path=\"/user_dashboard\" component={UserDashboard} />\r\n          <Route exact path=\"/history\" component={PurchaseHistory} />\r\n          <Route exact path=\"/shop\" component={GiftShop} />\r\n          <Route exact path=\"/messages\" component={Messages} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport axios from \"axios\";\r\nimport { UserProvider } from \"./components/UserContext\";\r\naxios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}