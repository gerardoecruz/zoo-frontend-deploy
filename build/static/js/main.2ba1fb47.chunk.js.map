{"version":3,"sources":["images/zoo.jpg","Home.js","components/UserContext.js","components/Ticket.js","components/EnclosureList.js","images/Elephant.jpg","images/Giraffe.jpg","images/Lion.jpg","images/Rhinoceros.jpg","images/Tiger.jpg","images/The_Safari.jpg","components/CreateUser.js","components/UserLogin.js","components/EmployeeDashboard.js","components/EnclosureDetailed.js","components/Navbar.js","components/PurchaseHistory.js","components/GiftShop.js","components/GiftShopList.js","components/GiftShopDetailed.js","components/AdminDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Home","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","style","backgroundImage","background","backgroundPosition","width","height","padding","Button","borderRadius","backgroundColor","fontSize","variant","color","ref","onClick","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","component","Link","to","UserContext","createContext","UserProvider","children","name","sessionStorage","getItem","auth","role","userID","user","setUser","Provider","value","login","setItem","logout","Ticket","useContext","adultTicketCount","setAdultTicketCount","childTicketCount","setChildTicketCount","totalCost","setTotalCost","showTotalCost","setShowTotalCost","Moment","Date","format","selectedDate","setSelectedDate","emptyStates","history","useHistory","handleSubmit","values","console","log","axios","post","item_purchased","customer_id","quantity_purchased","total_purchase_cost","purchase_time","ticket_date","then","res","catch","err","alert","dbInfoForTickets","price","this","TicketCard","age","ticketCount","setTicketCount","Grid","item","xs","Card","className","CardContent","Typography","gutterBottom","ButtonGroup","size","aria-label","decrement","container","spacing","utils","DateFnsUtils","label","onChange","date","disablePast","push","useStyles","makeStyles","listCategory","textTransform","fontWeight","paddingTop","divider","grid","cardStyles","root","display","flexDirection","justifyContent","media","EnclosureCard","description","image","id","url","useRouteMatch","classes","CardActionArea","CardMedia","title","textDecoration","href","CardActions","EnclosureList","enclosures","setEnclosures","get","data","categoryContainer","direction","map","enclosure","i","location_name","location_image","location_id","theme","position","top","left","textAlign","transform","marginTop","formTitle","signUp","float","CreateUser","props","alertError","setAlertError","formik","useFormik","initialValues","email","password","validate","errors","full_name","test","length","onSubmit","role_id","user_id","response","errors_response","new_errors","Array","isArray","forEach","error","param","msg","setErrors","handleLogin","Alert","severity","paddingBottom","TextField","handleChange","helperText","UserLogin","select","minWidth","errMessage","EmployeeDashboard","enclosureNames","setEnclosureNames","species","setSpecies","date_arrived","deceased_date","birth_day","location","animal_name","FormControl","InputLabel","htmlFor","Input","FormHelperText","Select","labelId","e","index","s","species_id","species_name","shrink","type","defaultValue","toDateString","EnclosureDetailed","match","loading","setLoading","openDialog","setOpenDialog","currentAnimal","setCurretAnimal","animals","setAnimals","setEnclosure","params","LinearProgress","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","animal","scope","health_status","handleModalOpen","animal_id","Dialog","DialogTitle","DialogContent","DialogActions","put","Navbar","AppBar","Toolbar","IconButton","edge","PurchaseHistory","customers","setCustomers","getData","a","toUpperCase","quantity","cost","GiftShop","GiftShopCard","GiftShopList","giftShops","setGiftShops","shop","GiftShopDetailed","quantities","from","_","currentProduct","setCurrentProduct","products","setProducts","giftShop","setGiftShop","each","quantity_selected","amount_due","product","product_name","findIndex","elem","item_id","newProducts","handleSelectQuantity","q","disabled","product_id","AdminDashboard","employees","setEmployees","work_location","currentEmployee","setCurrentEmployee","locations","setLocations","employee","job_title","wage","employee_id","newEmployee","new_location","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba1fb47.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zoo.c40cb5df.jpg\";","import React from \"react\";\r\n// import Navbar from \"./components/Navbar.js\";\r\nimport background from \"./images/zoo.jpg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  // temporary home page\r\n  // need to figure out loggin in\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div\r\n          style={{\r\n            backgroundImage: `url(${background})`,\r\n            backgroundPosition: \"cover\",\r\n            width: \"100%\",\r\n            height: \"888px\", // this needs to be fixed into something more modular but 100% doesn't work\r\n            padding: \"20\",\r\n          }}>\r\n          <Button\r\n            style={{\r\n              borderRadius: 5,\r\n              backgroundColor: \"white\",\r\n              padding: \"7px 26px\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"white\"\r\n            ref={anchorRef}\r\n            onClick={handleToggle}>\r\n            menu\r\n          </Button>\r\n\r\n          <Popper\r\n            open={open}\r\n            anchorEl={anchorRef.current}\r\n            transition\r\n            disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  transformOrigin:\r\n                    placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                }}>\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={handleClose}>\r\n                    <MenuList\r\n                      autoFocusItem={open}\r\n                      onKeyDown={handleListKeyDown}>\r\n                      <MenuItem component={Link} to=\"/ticket\">\r\n                        Tickets\r\n                      </MenuItem>\r\n                      <MenuItem component={Link} to=\"/enclosure\">\r\n                        Enclosures\r\n                      </MenuItem>\r\n                      <MenuItem component={Link} to=\"/giftshops\">\r\n                        Gift Shops\r\n                      </MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState({\r\n    name: sessionStorage.getItem(\"username\"),\r\n    auth: sessionStorage.getItem(\"auth\") === \"true\",\r\n    role: sessionStorage.getItem(\"role\"),\r\n    userID: sessionStorage.getItem(\"userID\"),\r\n  });\r\n\r\n  const login = (name, role, userID) => {\r\n    setUser(() => ({\r\n      name: name,\r\n      auth: true,\r\n      role: role,\r\n      userID: userID,\r\n    }));\r\n    sessionStorage.setItem(\"username\", name);\r\n    sessionStorage.setItem(\"auth\", true);\r\n    sessionStorage.setItem(\"role\", role);\r\n    sessionStorage.setItem(\"userID\", userID);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(() => ({\r\n      name: \"guest\",\r\n      auth: false,\r\n    }));\r\n    sessionStorage.setItem(\"username\", \"guest\");\r\n    sessionStorage.setItem(\"auth\", false);\r\n    sessionStorage.setItem(\"role\", null);\r\n    sessionStorage.setItem(\"userID\", null);\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\"; \r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Moment from 'moment';\r\nimport axios from \"axios\";\r\n\r\n\r\n // NEED TO RUN \"npm i @date-io/date-fns@1.3.13\" COMMANDS IF YOU GET \r\n // RangeError: Format string contains an unescaped latin alphabet character n \r\n \r\nfunction Ticket() {\r\n\r\n  const { user } = useContext(UserContext); \r\n\r\n  const [adultTicketCount, setAdultTicketCount] = useState(0); \r\n  const [childTicketCount, setChildTicketCount] = useState(0);\r\n  const [totalCost, setTotalCost] = useState(0); \r\n  const [showTotalCost, setShowTotalCost] = useState(false); \r\n  const [selectedDate, setSelectedDate] = useState(Moment(new Date()).format('MM-DD-YYYY'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(Moment(date).format('MM-DD-YYYY'));\r\n  };\r\n\r\n  // ticket number doesn't go below 0\r\n  function decrement(ticketCount, setTicketCount) {\r\n    if (ticketCount - 1 < 0) {\r\n      setTicketCount(0);\r\n    } else {\r\n      setTicketCount(ticketCount - 1); \r\n    }\r\n  }\r\n\r\n  function calculateTotalCost() {\r\n    setTotalCost(childTicketCount * 5 + adultTicketCount * 10);\r\n  }\r\n\r\n  // emptying all state values after confirming/cancelling purchase\r\n  function emptyStates() {\r\n    setAdultTicketCount(0);\r\n    setChildTicketCount(0);\r\n    setTotalCost(0);\r\n    setShowTotalCost(false); \r\n    setSelectedDate(Moment(new Date()).format('MM-DD-YYYY')); \r\n  }\r\n\r\n  // redirect to login page when trying to purchase tickets while not signed in \r\n  const history = useHistory();\r\n\r\n  const goToLogInPage = () => {\r\n    let path = '/login';\r\n    history.push(path); \r\n  }\r\n\r\n\r\n  // sending ticket info to db \r\n  const handleSubmit = (values) => {\r\n    console.log(\"purchasing tickets...\");\r\n    axios\r\n      .post(`https://zoo-backend-test.herokuapp.com/purchasehistory`, {\r\n        item_purchased: values.item_purchased, \r\n        customer_id: values.customer_id,\r\n        quantity_purchased: values.quantity_purchased,\r\n        total_purchase_cost: values.total_purchase_cost,\r\n        purchase_time: values.purchase_time,\r\n        ticket_date: values.ticket_date, \r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"failed!\"); \r\n      });\r\n  };\r\n\r\n\r\n  // constructor for ticket info thats going to be sent to db\r\n  function dbInfoForTickets(item_purchased, quantity_purchased, price, ticket_date) {\r\n    this.item_purchased = item_purchased;\r\n    this.customer_id = user.userID;\r\n    this.quantity_purchased = quantity_purchased;\r\n    this.total_purchase_cost = quantity_purchased * price; \r\n    this.purchase_time = new Date();\r\n    this.ticket_date = ticket_date; \r\n  }\r\n\r\n  // ticket card box\r\n  const TicketCard = ({ name, age, price, ticketCount, setTicketCount }) => {\r\n    return (\r\n      <Grid item xs={6}>\r\n        <Card className=\"ticketCard\" variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n              {age}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {price}\r\n            </Typography>\r\n            <Typography className=\"taxIncludedText\" color=\"textSecondary\">\r\n              tax included.\r\n            </Typography>\r\n            <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n              <Button onClick={() => decrement(ticketCount, setTicketCount)}>-</Button>\r\n              <Button color=\"primary\">{ticketCount}</Button>\r\n              <Button onClick={() => setTicketCount(ticketCount + 1)}>+</Button>\r\n          </ButtonGroup>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return(\r\n    <div>\r\n\r\n    <h1>\r\n    Tickets\r\n    </h1>\r\n\r\n    {/* ticket card boxes */}\r\n    <Grid container spacing={4}>\r\n      \r\n      <TicketCard name=\"Adult Ticket\" age=\"Age 18+\" price=\"$10\" ticketCount={adultTicketCount} setTicketCount={setAdultTicketCount}/>\r\n\r\n      <TicketCard name=\"Child Ticket\" age=\"Age 3-17\" price=\"$5\" ticketCount={childTicketCount} setTicketCount={setChildTicketCount}/>\r\n\r\n    </Grid>\r\n\r\n    {/* ticket date */}\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          label=\"date\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          disablePast\r\n        />\r\n    </MuiPickersUtilsProvider>\r\n\r\n    <br/>\r\n    \r\n\r\n    {/* purchase button */}\r\n    <Button className=\"purchaseButton\" variant=\"outlined\" color=\"primary\" \r\n      onClick={() => {\r\n        calculateTotalCost();\r\n        setShowTotalCost(true); \r\n        }}>\r\n      Purchase\r\n    </Button>\r\n\r\n\r\n    {/* only display once the user clicks \"purchase\" button  \r\n        need to add \"please log in\" if not logged in */}\r\n    {showTotalCost && totalCost !== 0 && (\r\n      <div>\r\n        <h3>Your total cost is: ${totalCost}</h3>\r\n\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => {\r\n          if (user.auth) {\r\n            alert(adultTicketCount + \" adult ticket(s) \" + childTicketCount + \" child ticket(s) on \" + selectedDate +  \" for $\" + totalCost); \r\n            if (adultTicketCount > 0) {\r\n              handleSubmit(new dbInfoForTickets(1, adultTicketCount, 10, selectedDate));\r\n              console.log(new dbInfoForTickets(1, adultTicketCount, 10, selectedDate));\r\n            }\r\n            if (childTicketCount > 0) {\r\n              handleSubmit(new dbInfoForTickets(2, childTicketCount, 5, selectedDate));\r\n              console.log(new dbInfoForTickets(2, childTicketCount, 5, selectedDate));\r\n            }\r\n            emptyStates(); \r\n          } else {\r\n            goToLogInPage(); \r\n          }\r\n        }}>Confirm</Button>\r\n\r\n        <Button variant=\"outlined\" onClick={emptyStates}>Cancel</Button>\r\n      </div>\r\n    )}\r\n    \r\n    </div>\r\n    \r\n  ); \r\n}\r\n\r\nexport default Ticket; ","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n//Import images\r\nimport Elephant from \"../images/Elephant.jpg\";\r\nimport Giraffe from \"../images/Giraffe.jpg\";\r\nimport Lion from \"../images/Lion.jpg\";\r\nimport Rhinoceros from \"../images/Rhinoceros.jpg\";\r\nimport Tiger from \"../images/Tiger.jpg\";\r\nimport The_Safari from \"../images/The_Safari.jpg\";\r\n\r\nimport axios from \"axios\";\r\nimport { base_url } from \"../config\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { images_path } from \"../config\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nconst enclosure_data = [\r\n  {\r\n    enclosureName: \"Elepant\",\r\n    img: Elephant,\r\n    description: \"This enclosure consists of Afriran American Elephants\",\r\n  },\r\n  {\r\n    enclosureName: \"Rhinoceros\",\r\n    img: Rhinoceros,\r\n    description: \"Come witness on of the most magnificent mammals\",\r\n  },\r\n  {\r\n    enclosureName: \"Giraffe\",\r\n    img: Giraffe,\r\n    description: \"Come meet the tallest terrestrial animal\",\r\n  },\r\n  {\r\n    enclosureName: \"Tiger\",\r\n    img: Tiger,\r\n    description: \"The Largest and most fierce cat\",\r\n  },\r\n  {\r\n    enclosureName: \"Lion\",\r\n    img: Lion,\r\n    description: \"The King of the Junge is here!\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  listCategory: {\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  divider: {\r\n    height: \"5px\",\r\n    backgroundColor: \"green\",\r\n    width: \"100%\",\r\n  },\r\n  grid: {\r\n    padding: \"10px\",\r\n  },\r\n});\r\n\r\nconst cardStyles = makeStyles({\r\n  root: {\r\n    width: \"280px\",\r\n    // height: \"300px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst EnclosureCard = ({ name, description, image, id }) => {\r\n  let { url } = useRouteMatch();\r\n  const classes = cardStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <div>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={image}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </div>\r\n        <div>\r\n          <Link style={{ textDecoration: \"none\" }} href={`${url}/${id}`}>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EnclosureList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [enclosures, setEnclosures] = useState([]);\r\n\r\n  const getAllEnclosures = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations/all_enclsoures`)\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        // console.log(res);\r\n        // const with_image = res.data.map((e) => {\r\n        //   return {\r\n        //     ...e,\r\n        //     location_img: URL.createObjectURL(new Blob(e.image.data, {type: \"application/zip\"}),\r\n        //   };\r\n        // });\r\n        console.log(res.data);\r\n        setEnclosures(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllEnclosures();\r\n    // console.log(enclosures);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.categoryContainer}>\r\n      {/* <Navbar></Navbar> */}\r\n      <Typography className={classes.listCategory}>Enclosures</Typography>\r\n      <Grid direction=\"row\" container spacing={2} className={classes.grid}>\r\n        {enclosures.map((enclosure, i) => {\r\n          return (\r\n            <Grid item key={i}>\r\n              <EnclosureCard\r\n                name={enclosure.location_name}\r\n                image={`/uploads/${enclosure.location_image}`}\r\n                id={enclosure.location_id}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnclosureList;\r\n","export default __webpack_public_path__ + \"static/media/Elephant.658a10fe.jpg\";","export default __webpack_public_path__ + \"static/media/Giraffe.7902b660.jpg\";","export default __webpack_public_path__ + \"static/media/Lion.0e205570.jpg\";","export default __webpack_public_path__ + \"static/media/Rhinoceros.7dcca251.jpg\";","export default __webpack_public_path__ + \"static/media/Tiger.3aeda941.jpg\";","export default __webpack_public_path__ + \"static/media/The_Safari.74f19edb.jpg\";","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\nimport { Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    width: \"50ch\",\r\n    position: \"fixed\",\r\n    top: \"25%\",\r\n    left: \"50%\",\r\n    textAlign: \"center\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formTitle: {\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  signUp: {\r\n    float: \"left\",\r\n  },\r\n}));\r\n\r\nfunction CreateUser(props) {\r\n  const classes = useStyles();\r\n\r\n  const { login } = useContext(UserContext);\r\n\r\n  const [alertError, setAlertError] = useState(null);\r\n  let history = useHistory();\r\n\r\n  const handleLogin = (values) => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/signup\", {\r\n        full_name: values.full_name,\r\n        email: values.email,\r\n        password: values.password,\r\n        role_id: \"Admin\",\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        //role_id, full_name, user_id\r\n        login(res.data.full_name, res.data.role_id, res.data.user_id);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        console.log(\"Errors: \", err.response.data);\r\n        let errors_response = err.response.data.errors;\r\n        let new_errors = { email: \"\", password: \"\" };\r\n        if (Array.isArray(errors_response)) {\r\n          errors_response.forEach((error) => {\r\n            new_errors[error.param] = error.msg;\r\n          });\r\n          setErrors(new_errors);\r\n        } else {\r\n          setAlertError(err.response.data.error);\r\n        }\r\n      });\r\n  };\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.full_name) {\r\n      errors.password = \"Required\";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    } else if (values.email.length > 25) {\r\n      errors.email = \"Max 25 characters\";\r\n    }\r\n    if (values.password.length < 4) {\r\n      errors.password = \"Minimum 4 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleLogin(values);\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  return (\r\n    <Grid container spacing={1} direction=\"column\" className={classes.root}>\r\n      <Typography className={classes.formTitle}>Sign Up</Typography>\r\n      {alertError ? (\r\n        <Alert severity=\"error\" style={{ paddingBottom: \"10px\" }}>\r\n          {alertError}\r\n        </Alert>\r\n      ) : null}\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          id=\"full_name\"\r\n          onChange={formik.handleChange}\r\n          name=\"full_name\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          error={errors.full_name || formik.errors.full_name}\r\n          helperText={\r\n            errors.full_name !== \"\"\r\n              ? errors.full_name\r\n              : formik.errors.full_name !== \"\"\r\n              ? formik.errors.full_name\r\n              : \"\"\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          id=\"email\"\r\n          onChange={formik.handleChange}\r\n          name=\"email\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          error={errors.email || formik.errors.email}\r\n          helperText={\r\n            errors.email !== \"\"\r\n              ? errors.email\r\n              : formik.errors.email !== \"\"\r\n              ? formik.errors.email\r\n              : \"\"\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          onChange={formik.handleChange}\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          error={errors.password || formik.errors.password}\r\n          helperText={\r\n            errors.password !== \"\"\r\n              ? errors.password\r\n              : formik.errors.password !== \"\"\r\n              ? formik.errors.password\r\n              : \"\"\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        onClick={formik.handleSubmit}\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\">\r\n        Sign Up\r\n      </Button>\r\n    </Grid>\r\n  );\r\n  // Only customers should be able to create their own accounts\r\n  // We have to make employee accounts beforehand, they should end with \"@zoo-staff\" to signify they're an employee so we know which table to check in db with our queries\r\n}\r\n\r\nexport default CreateUser;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Paper, Box, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { AlternateEmail, DriveEtaTwoTone } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { base_url } from \"../config\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    width: \"50ch\",\r\n    position: \"fixed\",\r\n    top: \"25%\",\r\n    left: \"50%\",\r\n    textAlign: \"center\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formTitle: {\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  signUp: {\r\n    float: \"left\",\r\n  },\r\n}));\r\n\r\nconst UserLogin = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { login, logout } = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const [errors, setErrors] = useState();\r\n\r\n  const [alertError, setAlertError] = useState(null);\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    } else if (values.email.length > 25) {\r\n      errors.email = \"Max 25 characters\";\r\n    }\r\n    if (values.password.length < 4) {\r\n      errors.password = \"Minimum 4 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleLogin = (values) => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/login\", {\r\n        email: values.email,\r\n        password: values.password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        login(res.data.full_name, res.data.role_id, res.data.user_id);\r\n        console.log(\"Login successful\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        //Log In failed.\r\n        console.log(err.response);\r\n        console.log(\"Errors: \", err.response.data);\r\n        let errors_response = err.response.data.errors;\r\n        let new_errors = { email: \"\", password: \"\" };\r\n        if (Array.isArray(errors_response)) {\r\n          errors_response.forEach((error) => {\r\n            new_errors[error.param] = error.msg;\r\n          });\r\n          setErrors(new_errors);\r\n        } else {\r\n          setAlertError(err.response.data.error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleLogin(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} direction=\"column\" className={classes.root}>\r\n        <Typography className={classes.formTitle}>Log In</Typography>\r\n        {alertError ? (\r\n          <Alert severity=\"error\" style={{ paddingBottom: \"10px\" }}>\r\n            {alertError}\r\n          </Alert>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"Username\"\r\n            id=\"email\"\r\n            onChange={formik.handleChange}\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            error={formik.errors.email}\r\n            helperText={formik.errors.email !== \"\" ? formik.errors.email : \"\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            onChange={formik.handleChange}\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            error={formik.errors.password}\r\n            helperText={\r\n              formik.errors.password !== \"\" ? formik.errors.password : \"\"\r\n            }\r\n          />\r\n        </Grid>\r\n        <Link to=\"/create\">\r\n          <Typography className={classes.signUp}>Sign Up</Typography>\r\n        </Link>\r\n        <Button\r\n          onClick={formik.handleSubmit}\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\">\r\n          Log In\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  // TextField,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n  Grid,\r\n  FormHelperText,\r\n  // Modal,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\n// import { base_url } from \"../config\";\r\nimport { useFormik } from \"formik\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useContext } from \"./UserContext\";\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst EmployeeDashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  //Get all the enclosure names:\r\n  const [enclosureNames, setEnclosureNames] = useState([]);\r\n  const [species, setSpecies] = useState([]);\r\n\r\n  const [animal, setAnimal] = useState({\r\n    date_arrived: null,\r\n    deceased_date: null,\r\n    birth_day: null,\r\n    location: \"\",\r\n    animal_name: \"\",\r\n  });\r\n\r\n  const getEnclosureNames = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/enclosures`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        setEnclosureNames(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getAllSpecies = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/species`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSpecies(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEnclosureNames();\r\n    getAllSpecies();\r\n  }, []);\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.animal_name) {\r\n      errors.animal_name = \"Required\";\r\n    }\r\n    if (!values.location) {\r\n      errors.location = \"Required\";\r\n    }\r\n    if (!values.date_arrived) {\r\n      errors.date_arrived = \"Required\";\r\n    }\r\n    if (!values.birth_day) {\r\n      errors.birth_day = \"Required\";\r\n    }\r\n    if (!values.species) {\r\n      errors.species = \"Required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    console.log(\"handleSubmit called\");\r\n    axios\r\n      .post(`https://zoo-backend-test.herokuapp.com/animals`, {\r\n        date_arrived: values.date_arrived,\r\n        deceased_date: values.deceased_date,\r\n        birth_day: values.birth_day,\r\n        location: values.location,\r\n        animal_name: values.animal_name,\r\n        species: values.species,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      date_arrived: \"\",\r\n      deceased_date: null,\r\n      birth_day: \"\",\r\n      location: \"\",\r\n      animal_name: \"\",\r\n      species: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      handleSubmit(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\">\r\n        <Typography>Add Animal to Zoo</Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n              <Input\r\n                id=\"name\"\r\n                onChange={formik.handleChange}\r\n                name=\"animal_name\"\r\n                error={formik.errors.animal_name}\r\n              />\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.animal_name}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"enclosureName\">Enclosure Name</InputLabel>\r\n              <Select\r\n                labelId=\"enclosureName\"\r\n                onChange={formik.handleChange}\r\n                name=\"location\"\r\n                error={formik.errors.location}\r\n                className={classes.select}>\r\n                {enclosureNames.map((e, index) => (\r\n                  <MenuItem key={index} value={e.location_id}>\r\n                    {e.location_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.location}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"species\">Species</InputLabel>\r\n              <Select\r\n                labelId=\"species\"\r\n                onChange={formik.handleChange}\r\n                name=\"species\"\r\n                error={formik.errors.species}\r\n                className={classes.select}>\r\n                {species.map((s, index) => (\r\n                  <MenuItem key={index} value={s.species_id}>\r\n                    {s.species_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.species}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"dob\" shrink>\r\n                Date of Birth\r\n              </InputLabel>\r\n              <Input\r\n                labelId=\"dob\"\r\n                type=\"date\"\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.birth_day}\r\n                name=\"birth_day\"\r\n              />\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.birth_day}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <InputLabel id=\"dob\" shrink>\r\n                Arrival Date\r\n              </InputLabel>\r\n              <Input\r\n                labelId=\"dob\"\r\n                type=\"date\"\r\n                defaultValue={new Date().toDateString()}\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.date_arrived}\r\n                name=\"date_arrived\"\r\n              />\r\n              <FormHelperText className={classes.errMessage}>\r\n                {formik.errors.date_arrived}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={formik.handleSubmit}\r\n              type=\"submit\">\r\n              Add Animal\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeDashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst EnclosureDetailed = ({ match }) => {\r\n  // console.log(match);\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n  console.log(history);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  //Modal\r\n  const [currentAnimal, setCurretAnimal] = useState({\r\n    animal_name: \"\",\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModalOpen = (animal) => {\r\n    console.log(\"Animal\", animal);\r\n    setCurretAnimal(animal);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleHealthStatusChange = (e) => {\r\n    setCurretAnimal({\r\n      ...currentAnimal,\r\n      health_status: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    axios\r\n      .put(\"https://zoo-backend-test.herokuapp.com/animals/change_health\", currentAnimal)\r\n      .then((res) => {\r\n        setOpenDialog(false);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setOpenDialog(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  //Get animals in the Enclosure.\r\n\r\n  const [animals, setAnimals] = useState([]);\r\n\r\n  const [enclosure, setEnclosure] = useState({});\r\n\r\n  const getEnclosure = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations/enclosure/by_id`, {\r\n        params: { location: match.params.id },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"Enclosure: \", res);\r\n        setEnclosure(res.data[0]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getAnimals = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/animals/list_by_enclosure/`, {\r\n        params: { location: match.params.id },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setAnimals(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEnclosure();\r\n    getAnimals();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      {loading ? (\r\n        <LinearProgress color=\"primary\" />\r\n      ) : (\r\n        <>\r\n          {animals.length > 0 ? (\r\n            <>\r\n              <Typography>{`Animals in ${enclosure.location_name} Enclosure`}</Typography>\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ width: 800, paddingTop: \"10px\" }}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Name </TableCell>\r\n                      <TableCell align=\"right\">Species</TableCell>\r\n                      <TableCell align=\"right\">Date of Birth</TableCell>\r\n                      <TableCell align=\"right\">Date Arrived</TableCell>\r\n                      <TableCell align=\"right\">Health Status</TableCell>\r\n                      {user.role == \"Employee\" ? (\r\n                        <TableCell align=\"right\">Actions</TableCell>\r\n                      ) : null}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {animals.map((animal) => (\r\n                      <TableRow key={animal.animal_id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {animal.animal_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.species_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{animal.birth_day}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.date_arrived}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {animal.health_status}\r\n                        </TableCell>\r\n                        {user.role == \"Employee\" ? (\r\n                          <TableCell align=\"right\">\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              onClick={() => {\r\n                                handleModalOpen(animal);\r\n                              }}>\r\n                              Edit\r\n                            </Button>\r\n                          </TableCell>\r\n                        ) : null}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n              {/* Modal for changing health status */}\r\n              <div>\r\n                <Dialog open={openDialog}>\r\n                  <DialogTitle>\r\n                    Change the Health of {currentAnimal.animal_name}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Select\r\n                      id=\"health_status\"\r\n                      value={currentAnimal.health_status}\r\n                      onChange={handleHealthStatusChange}>\r\n                      <MenuItem value={\"Healthy\"}>Healthy</MenuItem>\r\n                      <MenuItem value={\"Sick\"}>Sick</MenuItem>\r\n                      <MenuItem value={\"Deceased\"}>Deceased</MenuItem>\r\n                    </Select>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleSave}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleCancel}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Typography style={{ padding: \"10px\" }}>No Animals</Typography>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnclosureDetailed;\r\n","import React, { useContext } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\n// styling should change a little bit\r\nfunction Navbar() {\r\n  const { user, login, logout } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const goBackToHomePage = () => {\r\n    let path = \"/\";\r\n    history.push(path);\r\n  };\r\n\r\n  const goToLogInPage = () => {\r\n    let path = \"/login\";\r\n    history.push(path);\r\n  };\r\n\r\n  const goToSignUpPage = () => {\r\n    let path = \"/create\";\r\n    history.push(path);\r\n  };\r\n\r\n  // needs to go to account page/purchase history when it's created.\r\n  const goToAccountPage = () => {\r\n    let path = \"/\";\r\n    history.push(path);\r\n  };\r\n\r\n  const goToDashboard = (role) => {\r\n    if (role == \"Admin\") {\r\n      history.push(\"/employee_dashboard\");\r\n    } else {\r\n      history.push(\"/admin_dashboard\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\" style={{ padding: 0 }}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={goBackToHomePage}>\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Better Houston Zoo</Typography>\r\n          {!user.auth && (\r\n            <div>\r\n              <Button onClick={goToLogInPage}>Log in</Button>\r\n              <Button onClick={goToSignUpPage}>Sign up</Button>\r\n            </div>\r\n          )}\r\n\r\n          {user.auth && (\r\n            <div>\r\n              <Button>Welcome, {user.name}</Button>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n                onClick={goToAccountPage}>\r\n                <AccountCircleIcon />\r\n              </IconButton>\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  history.push(\"/\");\r\n                  logout();\r\n                }}>\r\n                Sign out\r\n              </Button>\r\n              {user.role == \"Admin\" || user.role == \"Employee\" ? (\r\n                <Button onClick={goToDashboard}>Dash Board</Button>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport './PurchaseHistory.css';\r\nimport axios from \"axios\";\r\n\r\n//const express = require('express');\r\n//const bodyParser = require('body-parser');\r\n//const mysql = require('mysql');\r\n\r\nconst URL = 'database-1.cmkw6xcxraqi.us-east-1.rds.amazonaws.com'\r\n\r\n/*const connection = mysql.createPool({\r\n  host     : 'database-1.cmkw6xcxraqi.us-east-1.rds.amazonaws.com',\r\n  user     : 'admin',\r\n  password : 'admin1234',\r\n  database : 'zoo_db'\r\n});*/\r\n\r\nconst PurchaseHistory = () => {\r\n    const [customers, setCustomers] = React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    const getData = async () => {\r\n\r\n        const response = await axios.get(URL)\r\n        setCustomers(response.data)\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['id', 'name', 'purchase date', 'item', 'quantity', 'total cost']\r\n\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return customers && customers.map(({ id, name, date, item, quantity, cost }) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{id}</td>\r\n                    <td>{name}</td>\r\n                    <td>{date}</td>\r\n                    <td>{item}</td>\r\n                    <td>{quantity}</td>\r\n                    <td>{cost}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 id='title'>Purchase History</h1>\r\n            <table id='customer'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default PurchaseHistory;","import React, { useState, useContext } from \"react\"; \r\nimport { UserContext } from \"./UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction GiftShop(){\r\n    const { user } = useContext(UserContext); \r\n\r\n    return <>\r\n        <div className = 'primary'>\r\n            <div className = 'primary-container'>\r\n                <h4 className = 'title'> Zoovenirs </h4>\r\n            </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"container\">\r\n            <div className=\"multiline\"></div>\r\n                <div> Some Item </div>\r\n                    <button> Purchase </button>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default GiftShop","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport axios from \"axios\";\r\nimport { base_url } from \"../config\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { images_path } from \"../config\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  listCategory: {\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  divider: {\r\n    height: \"5px\",\r\n    backgroundColor: \"green\",\r\n    width: \"100%\",\r\n  },\r\n  grid: {\r\n    padding: \"10px\",\r\n  },\r\n});\r\n\r\nconst cardStyles = makeStyles({\r\n  root: {\r\n    width: \"280px\",\r\n    // height: \"300px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst GiftShopCard = ({ name, description, image, id }) => {\r\n  let { url } = useRouteMatch();\r\n  const classes = cardStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <div>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={image}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </div>\r\n        <div>\r\n          <Link style={{ textDecoration: \"none\" }} href={`${url}/${id}`}>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GiftShopList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [giftShops, setGiftShops] = useState([]);\r\n\r\n  const getAllGiftShops = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations/all_gift_shops`)\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        // console.log(res);\r\n        // const with_image = res.data.map((e) => {\r\n        //   return {\r\n        //     ...e,\r\n        //     location_img: URL.createObjectURL(new Blob(e.image.data, {type: \"application/zip\"}),\r\n        //   };\r\n        // });\r\n        console.log(res.data);\r\n        setGiftShops(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllGiftShops();\r\n    // console.log(enclosures);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.categoryContainer}>\r\n      {/* <Navbar></Navbar> */}\r\n      <Typography className={classes.listCategory}>Gift Shops</Typography>\r\n      <Grid direction=\"row\" container spacing={2} className={classes.grid}>\r\n        {giftShops.map((shop, i) => {\r\n          return (\r\n            <Grid item key={i}>\r\n              <GiftShopCard\r\n                name={shop.location_name}\r\n                image={`/uploads/${shop.location_image}`}\r\n                id={shop.location_id}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GiftShopList;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\nimport { CloudQueueRounded, LensOutlined } from \"@material-ui/icons\";\r\n\r\nconst GiftShopDetailed = ({ match }) => {\r\n  // console.log(match);\r\n\r\n  let quantities = Array.from({ length: 10 }, (_, index) => {\r\n    return {\r\n      value: index + 1,\r\n    };\r\n  });\r\n\r\n  console.log(quantities);\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  //Modal\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModalOpen = (product) => {\r\n    // console.log(\"Animal\", animal);\r\n    setCurrentProduct(product);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  //Get animals in the Enclosure.\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const [giftShop, setGiftShop] = useState({});\r\n\r\n  const getGiftShop = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations/by_id`, {\r\n        params: { location: match.params.id },\r\n      })\r\n      .then((res) => {\r\n        setGiftShop(res.data[0]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getProducts = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/merchandise/all_products/`, {\r\n        params: { location: match.params.id },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        let products = res.data.map((each) => {\r\n          return {\r\n            ...each,\r\n            quantity_selected: 0,\r\n            amount_due: 0,\r\n          };\r\n        });\r\n        setProducts(products);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSelectQuantity = (e, product) => {\r\n    const index = products.findIndex((elem) => elem.item_id == product.item_id);\r\n    let newProducts = [...products];\r\n    newProducts[index] = {\r\n      ...newProducts[index],\r\n      quantity_selected: e.target.value,\r\n      amount_due: e.target.value * product.price,\r\n    };\r\n    setProducts(newProducts);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    axios\r\n      .post(\"https://zoo-backend-test.herokuapp.com/merchandise/buy\", {\r\n        user_id: user.userID,\r\n        ...currentProduct,\r\n      })\r\n      .then((res) => {\r\n        setOpenDialog(false);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setOpenDialog(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGiftShop();\r\n    getProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      {loading ? (\r\n        <LinearProgress color=\"primary\" />\r\n      ) : (\r\n        <>\r\n          {products.length > 0 ? (\r\n            <>\r\n              <Typography>{`Products in ${giftShop.location_name} Enclosure`}</Typography>\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ width: 800, paddingTop: \"10px\" }}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Product Name </TableCell>\r\n                      <TableCell align=\"right\">Product Price</TableCell>\r\n                      <TableCell align=\"right\">Select Quntity</TableCell>\r\n                      {user.role == \"Customer\" ? (\r\n                        <TableCell align=\"right\">Actions</TableCell>\r\n                      ) : null}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {products.map((product) => (\r\n                      <TableRow key={product.product_id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {product.product_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{product.price}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Select\r\n                            name=\"quantity_selected\"\r\n                            style={{ width: \"75px\" }}\r\n                            value={product.quantity_selected}\r\n                            onChange={(e) => {\r\n                              handleSelectQuantity(e, product);\r\n                            }}>\r\n                            {quantities.map((q) => {\r\n                              return (\r\n                                <MenuItem key={q.value} value={q.value}>\r\n                                  {q.value}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                          </Select>\r\n                        </TableCell>\r\n                        {user.role == \"Customer\" ? (\r\n                          <TableCell align=\"right\">\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              disabled={product.quantity_selected == 0}\r\n                              onClick={() => {\r\n                                handleModalOpen(product);\r\n                              }}>\r\n                              Buy\r\n                            </Button>\r\n                          </TableCell>\r\n                        ) : null}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n              {/* Modal for changing health status */}\r\n              <div>\r\n                <Dialog open={openDialog}>\r\n                  <DialogTitle>Transaction Details</DialogTitle>\r\n                  <DialogContent>\r\n                    <Typography>{`The Total Cost of ${currentProduct.product_name} is $${currentProduct.amount_due}`}</Typography>\r\n                    <Typography>Are you sure you want to buy?</Typography>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleConfirm}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CONFIRM\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleCancel}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Typography style={{ padding: \"10px\" }}>No Products</Typography>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GiftShopDetailed;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemIcon,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  ListItemText,\r\n  LinearProgress,\r\n  Paper,\r\n  Modal,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    minWidth: 150,\r\n  },\r\n  errMessage: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst AdminDashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [currentEmployee, setCurrentEmployee] = useState({\r\n    full_name: \"\",\r\n    work_location: \"\",\r\n  });\r\n\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  const getAllEmployees = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/employees/all`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setEmployees(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getLocations = () => {\r\n    axios\r\n      .get(`https://zoo-backend-test.herokuapp.com/locations`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLocations(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n    getLocations();\r\n  }, []);\r\n\r\n  const handleWorkLocationChange = (e) => {\r\n    let newEmployee = {\r\n      ...currentEmployee,\r\n      work_location: e.target.value,\r\n    };\r\n    setCurrentEmployee(newEmployee);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    axios\r\n      .put(\"https://zoo-backend-test.herokuapp.com/employees/change_work_location\", {\r\n        new_location: currentEmployee.work_location,\r\n        employee_id: currentEmployee.employee_id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setOpenDialog(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleModalOpen = (employee) => {\r\n    setCurrentEmployee(employee);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      {loading ? (\r\n        <LinearProgress color=\"primary\" />\r\n      ) : (\r\n        <>\r\n          {employees.length > 0 && locations.length > 0 ? (\r\n            <>\r\n              <Typography>{`All Employees`}</Typography>\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ width: 800, paddingTop: \"10px\" }}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Name </TableCell>\r\n                      <TableCell align=\"right\">Job Title</TableCell>\r\n                      <TableCell align=\"right\">Wage</TableCell>\r\n                      <TableCell align=\"right\">Work Location</TableCell>\r\n                      {user.role == \"Admin\" ? (\r\n                        <TableCell align=\"right\">Actions</TableCell>\r\n                      ) : null}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {employees.map((employee) => (\r\n                      <TableRow key={employee.employee_id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {employee.full_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {employee.job_title}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{employee.wage}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {employee.location_name}\r\n                        </TableCell>\r\n                        {user.role == \"Admin\" ? (\r\n                          <TableCell align=\"right\">\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              onClick={() => {\r\n                                handleModalOpen(employee);\r\n                              }}>\r\n                              Edit\r\n                            </Button>\r\n                          </TableCell>\r\n                        ) : null}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n              {/* Modal for changing health status */}\r\n              <div>\r\n                <Dialog open={openDialog}>\r\n                  <DialogTitle>\r\n                    Change the Work location of {currentEmployee.full_name}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Select\r\n                      id=\"health_status\"\r\n                      value={currentEmployee.work_location}\r\n                      onChange={handleWorkLocationChange}>\r\n                      {locations.map((location) => {\r\n                        return (\r\n                          <MenuItem\r\n                            value={location.location_id}\r\n                            key={location.location_id}>\r\n                            {location.location_name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleSave}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleCancel}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\">\r\n                      CANCEL\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Typography style={{ padding: \"10px\" }}>No Animals</Typography>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Ticket from \"./components/Ticket\";\r\nimport EnclosureList from \"./components/EnclosureList\";\r\nimport CreateUser from \"./components/CreateUser\";\r\nimport UserLogin from \"./components/UserLogin\";\r\nimport EmployeeDashboard from \"./components/EmployeeDashboard\";\r\nimport EnclosureDetailed from \"./components/EnclosureDetailed\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport PurchaseHistory from \"./components/PurchaseHistory\";\r\nimport GiftShop from \"./components/GiftShop\";\r\nimport \"./App.css\";\r\nimport GiftShopList from \"./components/GiftShopList\";\r\nimport GiftShopDetailed from \"./components/GiftShopDetailed\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\n\r\n// NEED TO \"npm install\" @material-ui dependencies\r\n// npm install @material-ui/core\r\n// npm install @material-ui/pickers\r\n// npm install date-fns @date-io/date-fns@1\r\n// npm install --save moment\r\n// there may be other material uis too\r\n// there may be other material uis too\r\n\r\nfunction App() {\r\n  // to initialize session storage if not created yet\r\n  if (sessionStorage.getItem(\"auth\") === null) {\r\n    sessionStorage.setItem(\"auth\", false);\r\n  }\r\n\r\n  if (sessionStorage.getItem(\"username\") === null) {\r\n    sessionStorage.setItem(\"username\", \"guest\");\r\n  }\r\n\r\n  if (sessionStorage.getItem(\"role\") === null) {\r\n    sessionStorage.setItem(\"role\", null);\r\n  }\r\n\r\n  if (sessionStorage.getItem(\"userID\") === null) {\r\n    sessionStorage.setItem(\"userID\", null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* add your pages here  */}\r\n\r\n      <BrowserRouter>\r\n        <Navbar></Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/ticket\" component={Ticket} />\r\n          <Route exact path=\"/giftshops\" component={GiftShopList} />\r\n          <Route exact path=\"/giftshops/:id\" component={GiftShopDetailed} />\r\n          <Route exact path=\"/enclosure\" component={EnclosureList} />\r\n          <Route exact path=\"/enclosure/:id\" component={EnclosureDetailed} />\r\n          <Route exact path=\"/create\" component={CreateUser} />\r\n          <Route exact path=\"/login\" component={UserLogin} />\r\n          <Route\r\n            exact\r\n            path=\"/employee_dashboard\"\r\n            component={EmployeeDashboard}\r\n          />\r\n          <Route exact path=\"/admin_dashboard\" component={AdminDashboard} />\r\n          <Route exact path=\"/history\" component={PurchaseHistory} />\r\n          <Route exact path=\"/shop\" component={GiftShop} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport axios from \"axios\";\r\nimport { UserProvider } from './components/UserContext';\r\naxios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}